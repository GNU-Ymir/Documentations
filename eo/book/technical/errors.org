** Errors 
 
    All the error system handle the errors that occurs during the compilation, errors can be either : 
    - *External*, due to user mistakes
    - *Internal*, due to compiler misfunction 

    For code reuse and clarity, all the throwable external errors or gettable with the internal Ymir, StringEnum named ExternalError
    
    
    #+BEGIN_SRC c++
    lexing::Word loc = // ...
    // ...
    Ymir::Error::occur (loc, ExternalError::get (UNDEF_VAR), "foo");
    #+END_SRC

    All the errors are listed in the file [[file:./errors/ListError.hh][ymir/errors/ListError.hh]]

    
    To handle error throwing, the Exception system allow us to catch errors.

    #+BEGIN_SRC c++
    TRY (
    // ... sensible code
    ) CATCH (ErrorCode::External) {
      GET_ERRORS_AND_CLEAR (msgs); // create vector msgs with all the errors stored in it
      // If we do not get the errors, they will still be stored and sent during a future throw
      // I recommend to always GET the msgs, to avoid weird stuff to happen
    } FINALLY; // Mandatory to free some exception stuff ^^
    #+END_SRC


    Their is multiple way to throw errors, in the file [[file:./errors/Error.hh][ymir/errors/Error.hh]] 
