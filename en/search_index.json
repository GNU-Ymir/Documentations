{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["$","$(pwd):/tmp","$*","(c)","(dpkg).","(gcc)","(gnu","+x","/tmp","1.","1:1.1.4","1:1.2.0","1:7.4.2","2.","2.1.","2.1.1.","2.1.2.","2.2.","2.21","2018","2019","2:5.0.1~","3.1.3","9","9.3.0","9_9.3.0_amd64.deb",":",">=","access","achiev","add","alia","amd64","apt","architectures.","at:","automat","avail","base","befor","broken","call","caution","chmod","code","command","compil","compiler),","concept","concurr","conditions.","contact","contain","container.","contribut","contribution.","copi","copyright","debian","demonstr","depend","design","dev","develop","direct","directory.","discuss","docker","docker.","docker.io","document","documentation,","done","download","dpkg","easier","easili","effici","encount","error","error,","even","exampl","execution.","expected.","explor","express","fail","file","first","first,","fit","fix","follow","forward","foundation,","free","g++","gcc","gcc,","gener","github.","gnu.ymir@mail.com.","gnuymir/9.3.0","gyc","help","high","highlighted,","imag","import","important2.1.","improv","inc.","incorrect,","instal","installation.","installation1.","installation2.1.1.","installation2.1.2.","installed,","introduct","introduction2.","keep","known","languag","language,","language.","level,","libc6","libgc","libgcc1","libgmidgard","libgmidgard_9.3.0_amd64.deb","libgmp10","libmidgard","libmpc3","libmpfr6","library.","limit","line","linux","look","machin","mails!","main","make","merchant","mind","more,","name","nativ","need","new","now","object","offer","on","open","optimization,","orient","packag","package,","particular","past","path","pleas","present","previous","problem,","procedure.","program","propos","provid","pull","purpose.","r","receiv","refer","reinstal","releas","remov","repositori","resolv","retriev","run","runtime,","safe","safety,","save","see","semant","semantic.","set","shell,","simpl","softwar","software;","sometim","sourc","speed","standard","start","static","std,","steps:","still","strength","strong","sudo","support","sure,","system,","t","target","thank","then,","thing","think","those","time","toward","two","type","under","understand","uninstal","us","use,","v","vast","veri","version","version2.2.","via","w","warranty;","way","welcome,","well","whether","work","ymir","ymir,","zlib1g","~/.local/bin","~/.local/bin/gyc","~/.local/bindirectory,"],"hello-world/":["!!","!!\");","!!'","!\"","\"hello","$","'hello","(\"hello","()","*","*/","./a.out","./hello","/**","//","1.","a.out","binari","call","clarifi","code","command","comment","compilers,","consol","contain","declar","def","defin","documentation.","except","executable.","executed.","famou","few","first","follow","function","function,","gcc","gener","gyc","gyc.","hello","hello.yr","import","io","line","ls","main","modul","name","o","on","option","output","print","println","produc","program","same","sourc","std::io","suit","those","us","version","world","world1.","ymir","{","}"],"hello-world/commentaires.html":["&asserterror","()","(x","*","*/","+","/*","//","1","1.","2","3;","4);","=","==","abov","anoth","assert","call","chapter,","chapter.","comment","comments.","comments1.","compil","consid","def","delimit","differ","document","documentations.","end","error","exampl","except","fails.","false.","final","gener","handl","import","influenc","line","main","moment","moment,","multi","none","offer","optionn","pogram,","present","program","proof","see","simpli","star","stop","test","throw","type","usefull,","veri","what'","where,","x","ymir","{","}"],"primitives/":["1.","basic","chapter","concept","concepts1.","control","cover","flows.","function","language.","learn","mutability,","nativ","program","specifically,","types,","variables,","ymir"],"primitives/variables.html":["\",","\"foo\",","&asserterror","'='","'dmut'","'let'","'mut'","'ref'","(\"__global__","(\"foo\");","(\"pi","(\"x","(','","(':'","('_')*","()","();","([a","(a","(and","(cf.","(decorator)*","(float","(for","(in","(main::pi","(pi","(true)","(x);","*","*/","/**","//","1)","1.","1.1.","1.2.","1.3.","1.4.","1.4.1.","1.5.","1.5.1.","1.5.2.","12","12;","1;","2","2)","2;","3","3)","3);","3.14159265359","3.14159265359);","3;","4","4)","42","42;","5","7","7,","7;","89.0f","89.0f;","9_])*",":",":=","=","==",">","[a","^","^^^","_","_,","_.","__a__","__a__;","__b__","__b__,","__c__","__global__","__global__);","abov","accept","acceptable,","access","achiev","adopt","affect","affectation,","ahead","alias","all,","allow","allowed,","although","alway","and,","anonymu","anonymus,","anoth","anymor","anyth","appear","appropri","argu","argue,","argument","assert","authorized.","avoid","avoided,","b","back","bad","base","be","befor","beforehand.","behavior","behavior,","behavior.","behind","benefit.","best","between","block,","block.","bound","brackets,","bring","c","call","came","case","case,","case.","certifi","cf.","chang","changed.","chapter","check","checks,","choos","class","clear","clearly,","close","code","code,","collid","colon","come","compar","compil","compiler,","compiler.","complex","compon","compos","comprehens","comput","condit","consist","console,","contribution,","conversely,","creat","curli","current","data","declar","declaration,","declaration.","declared.","decor","decorator,","decorators,","def","default","default,","defin","definit","definitive.","deliber","depend","determin","developp","differ","difficult","discuss","dmut","due","dure","each","end","ensur","ensure,","enum)","enumer","equal","error","error,","error.","error:","errors,","etc.,","even","exampl","example.","except","execut","exist","express","expressions,","extern","f32","f32.","fact,","fatal","file,","first","focus","follow","foo","foo.","forc","forthcom","forward.","four","frustrat","full","function","function,","function.","functions,","gener","give","given","global","good","grammar","grasp.","guards)","hand,","here,","however,","i.e.","i32","i32).","i32,","i32;","idea","identifi","illustr","illustrated.","immut","immutable,","immutable.","impli","import","imposs","incompat","infer","inform","inheritence).","initi","initialization.","initializations,","inner_var_decl","inner_var_decl)*","insid","interest","introduc","introduction,","it.","justifi","keyword","known","languag","language).","language,","languages.","last","left","left,","let.","life","lifetim","lifetime.","lifetime1.5.2.","limit","limitation,","limited,","line","liter","live","local","longer","machin","main","main.yr:(2,9)","main.yr:(3,9)","main.yr:(5,13)","main.yr:(5,4)","main.yr:(7,2)","main;","make","mani","matter","memori","messag","mod","modif","modifi","modification,","modul","module,","modules).","moment,","more","more,","multipl","mut","mut,","mut.","mutability,","mutability1.1.","mutability1.3.","mutabl","mutable.","name","natur","never","note","noth","object","occur.","omit","on","open","operand","opinion","opinion,","option","order","order1.5.","otherwise.","out","out.","overriden","overview","paradigm","paramet","parent","part","particular","parts,","past","pi","pi);","place","point","point,","point.","possibility,","possibility.","possibl","present","print","println","println,","prioriti","probabl","probably,","problem","program","program,","program.","programm","propos","prototype.","provid","put","random","read.","reality,","reason,","reasoning,","reasons,","ref","refer","references).","references.","regard","regroup","relat","relev","remov","replac","reput","requir","result","result:","retreiv","return","right,","same","scatter","scientif","scope","scope,","scope.","scope1.5.1.","scopes,","section,","sections,","see","seem","semant","semi","separ","set","shadow","shadowing1.","showcase,","simpli","sometim","somewhere,","sound","sourc","specif","specifi","spite","start","state","static","static.","std::io","std::io;","store","sub","such","symbol","symbol,","syntax,","system","system,","table,","terminated.","thank","that'","that,","them,","think","through","throughout","throw","thu","tri","two","type","type)?","type,","type1.2.","types),","types.","typing,","understand","undoabl","unfortunetali","unlik","unwant","us","used).","used,","useless","user.","util","valid","validity.","valu","value)","value,","value.","value1.4.","var_declar","variabl","variable,","variable.","variables,","variables.","variables1.4.1.","verbos","veri","verif","warranti","way","welcomed,","well","wherebi","whose","will,","without","word,","write","x","x);","x,","x.","ymir","ymir,","ymir1:","z0","z]","{","|","}","};","—","┃","┗━━━━━┻━","╋"],"primitives/types.html":["!!\";","!!\"s8;","\"","\")\");","\",","\"foo\"","\"hello","\"☺\"s8","&","&(void)","&(x)","&asserterror","&castfailur","&i32","&i;","&outofarray","&outofarray.","&segfault,","'!'","'.","'\\u{0x263a}';","'cast'","'r',","'}'","'☺';","'☺'c8;","(\",","(\"the","('r',","('{'","()","())","());","();","(*p","(0","(0)","(1","(1);","(1,","(1,);","(10,","(12)?;","(2","(2);","(42)","([1,","(a","(a);","(a,","(add","(at","(b","(b);","(bar","(but","(c32,","(cf","(cf.","(expand","(f,","(foo","(for","(i32);","(i32)?","(i32,","(i32,)","(i32?)::__err__","(i32?)::err;","(in","(on","(t.2);","(thi","(true);","(typeof","(usiz","(with","(x)));","(x)::typeid,","(x,","(x.0,","(x.unwrap","*","*/","+",".,","..","...","....","/**","//","0","0;","0us)","0x897a.","1","1)","1);","1,","1.","1.0;","1.0f;","1.1.","1.2.","1.2.1.","1.2.2.","1.2.3.","1.2.4.","1.2.5.","1.3.","1.3.1.","1.3.2.","1.3.3.","1.3.4.","1.3.5.","1.4.","10","100","100)];","100u64];","10max_10_exp10^{max\\_10\\_exp}10​max_10_exp​​","10min_10_exp10^{min\\_10\\_exp}10​min_10_exp​​","12","127","127,","128","128,","12;","12]","12])","12];","16","19,","19?","1}2​max_exp−1​​","1}2​min_exp−1​​","2","2)","2);","2,","23);","255.","2];","2max_exp−12^{max\\_exp","2min_exp−12^{min\\_exp","3","3)","3.","3.14),","3.14);","32","32.","32767,","32768.","3]","3].","3];","4","42","42);","42;","64","6]","7,","7i8.","8","8).step_bi","8;","934","934i8;","943","943i8;","9_234",":","::",":=",";","=","==",">","?","[0","[0;","[0];","[1,","[12","[1;","[8,","[]","[c32]","[c32],","[c32].","[c8]","[i32","[i32]","[i32],","[i]","[mut","\\u{0xb}.","\\u{0}","\\u{12}","^","^^^","^^^^^^^","_","_,","__typeid__,","_typeid.","above,","absolut","accept","access","ad","adapt","add","address","affect","alia","alias","alias,","alloc","allocation,","allow","allowed.","alway","ambigu","ambiguity.","ambiguous.","anoth","applic","arch","arch)","architectur","argu","arithmet","ariti","arity.","array","array,","array.","arrays.","arrays1.3.4.","arrays1.3.5.","assert","assign","attribut","attributes,","attributes.","attributes:","author","automat","avoid","b","b);","bar","basic","be","begin","behav","behavior","behavior.","below).","below.","between","beyond","bit","block","bool","bool)","boolean","booleans,","borrow","bound","bracket","brackets,","built","byte","c32","c32,","c32.","c8","c8,","c_rang","call","capac","case","cast","cast!i64","cast1.","cast_express","castfailure.","caus","certain","cf.","chaper","chapter","chapter,","chapters.","charact","characters,","characters.","check","choic","choos","chosen","claim","class","close","code","code.","collect","colon","coma","come","comma","common","commonli","compil","compiler.","complet","complex","complic","compon","compound","compounds:","comput","concaten","concatenated,","confus","consid","consist","contain","context,","contigu","contribut","contribution:","control","convers","conversion)","conversion,","copi","creat","created.","creation","data","data,","dcopi","debug","decided.","decim","declar","declaration,","def","default","default,","default.","defin","defined,","depend","dependent,","derefer","dereferenc","desir","destructur","destructured,","destructured.","destructuring.","detail","differ","dig","digit","discuss","do.","doesn't","don't","done","dot","doubl","due","dynam","e","e...)","e.0);","each","earlier,","easiest","element","element,","elements.","empti","enclos","encod","encoding.","end","enough","enumeration).","epsilon","equal","equival","err","error","error.","error:","etc.","etc..","even","exampl","example,","example:","except","execution).","expand","expand.","explain","express","expression,","expression.","extract","f","f,","f32","f32,","f64","f64)","f64),","f64,","fals","false.","false;","fatal","fault","fault.","field","field,","field.","fields,","finit","first","fit","fit.","five","fix","float","flow","focu","follow","following.","foo","form","forms,","forthcom","forthecom","four","fst","function","function,","function.","functions,","further","futur","gener","give","given","given,","go","hand","hand,","handl","handling,","handling.","happen","heap","heap.","here.","hexadecim","however,","i,","i16","i32","i32)","i32,","i32.","i32::init;","i32?","i32]","i64","i8","i8,","ignor","implicit","import","incorrect","increment","index","indic","inf","infer","infin","inform","information.","inherit","init","initi","inner","insid","instead","int","integ","integer.","integers,","integers.","interfac","intern","interv","invalid","invit","isiz","it.","itself,","j","java,","keyword","keyword.","keywords,","keywords.","known","languag","language,","larg","lead","left","len","length","length.","letter","level","level,","library.","limits.","list","liter","literal,","literal.","literals,","literals.","load","locat","long","loss","low","lower","lowest","machin","made","made.","main","main.yr:(12,18)","main.yr:(2,10)","mainli","make","malform","manag","mant_dig","mantissa","match","matchin).","matching.","max","max_10_exp","max_exp","maxim","maximum","mean","memori","memory.","min","min_10_exp","min_exp","mind,","minim","minimum","mode).","modifi","modul","moment","more","multipl","mut","mutabl","mutable.","n","name","nan","necessari","necessarili","need","negative.","never","new","normal","not.","note","noth","now,","number","numbers,","object,","obviou","occur","omitted.","on","one.","oper","operand","operands.","operations.","option","option,","option1.4.","order.","origin","overflow","p","paradigms,","paramet","parameter,","parameter.","parameters,","parentheses,","parentheses.","part","part.","pattern","perfectli","perform","point","point,","pointer","pointer,","pointers,","pointers.","pointers1.3.","points.","posit","possibl","possible,","precaut","precis","precision,","prefix","present","primit","println","problems.","program","program,","properli","provid","ptr","purposes.","put","question","quot","r!(i32)","r!t,","rais","random","rang","range,","range.","ranges1.3.3.","read","reason","reason).","reason,","recomand","record","recovered,","refer","references).","references.","relat","repres","represent","respectively.","result","results:","retreiv","retriev","return","returned.","rewrite,","rewritt","rewritten","right","runtim","runtime.","s32","s8","same","scalar","scd","second","section","see","seem","segment","semant","semantics.","separ","set","set.","share","show","shown","sign","similar","similarly,","simpl","simpli","singl","size","size.","sizeof","sizeof1.2.","slice","slice,","slice.","slices,","slices.","smallest","sometim","sometimes,","sort","special","specif","specifi","specified,","stack","standard","static","std","std,","std::conv,","std::conv;","std::io","std::io;","std::random;","step","step.","step_bi","store","strang","string","strings,","struct,","structur","such","such.","summarize,","sure","surround","suspect","syntax","syntax,","syntax.","system","system,","system.","t","t,","t.","t._0;","t2","t3","t;","tabl","table.","take","targeted.","terminated.","them.","therefore,","these","this,","three","throw","thrown.","tild","time","time,","time.","token","token,","transform","transformation,","tri","true","true;","tupl","tuple,","tuple.","tuple1.3.2.","tuples,","twelv","two","type","type)","type,","type.","type1.2.4.","type1.2.5.","typeid","typeinfo","typeinfo,","typeof","types,","types.","types1.1.","types1.2.1.","types1.2.2.","types1.2.3.","types1.3.1.","types:","u.","u16","u32","u32)","u64","u8","undefin","understand","unicod","uniform","unknown","unlik","unsafe,","unsign","unwrap","us","used.","usiz","usually,","utf","valu","value)","value,","value.","values,","values.","variabl","variable,","variable.","verbosity,","veri","verifi","want","warn","warning,","warning:","way","whose","without","word","work","world","wrap","write","written","wrong","x","x));","x);","x,","x.0,","x.1)","x.1));","x.len);","x86","x;","y","y,","ymir","ymir,","ymir1:","z","z)","z);","zero","{","|","}","~","┃"],"primitives/functions.html":["!\");","\"","\",","$","%","&asserterror","'","'('","')'","'.'","'3'","'4'","'5'","'7'","'8'","'9'","':'","';'","'b'","'bar'","'baz'","'def'","'foo'","'i32'","'void'","'x'","'y'","'z'","'z'),","(\"bar","(\"foo\");","(\"in","(\"main","(\"the","('","(','","('='","('_')*","('if'","('x'","()","())","());","().","();","(1)","(1,","(12);","(2)})","(3,","(5);","(8,","([a","(a","(arg","(args);","(bar_a","(bodi","(cf.","(express","(foo_a","(here","(i","(import","(in","(var_decl","(x","(x);","(x,","(z","(z)","*","*/","+","..","...","./a.out",".plustwo",".println","/**","//","0","0)","1","1,","1.","1.1.","1.1.1.","1.1.2.","1.1.3.","1.2.","1.3.","1.4.","1.5.","11)","11.","12","12;","15","1;","1]","2","2);","2,","20","20))","3","31","4);","4,","42","5","6","7);","8","8)","8);","9","9,","9_])*",":",":=",";","=","==",">",">'","[./a.out,","[[c8]])","[[c8]],","[a","^","^^","^^^","^^^^^","abov","accept","access","accessible,","ad","add","add_on","advanced),","allow","alreadi","alway","anymor","argument","arrow","assert","associ","avail","avoid","b","bar","bar(1)","bar,","bar_a","bar_a);","baz","be","befor","below.","between","block","block,","block.","bodi","body1.3.","bool","brackets,","branch","c","call","callabl","called.","candid","chang","chapter","chapter),","chapter.","chapters.","check","claim","class","classes,","close","closur","code","code,","colon","colon,","coma","comma","command","compil","compilation.","compiler.","complex","concept","consid","consist","contain","context","continu","contrari","convini","creation","curli","data","declar","declaration,","declaration.","declaration1.5.","declarations,","def","default","defin","depict","differ","divid","dot","due","easier","easili","empti","enclos","encount","encountered,","end","entered,","entri","enumeration,","equival","error","error.","error:","errors:","etc.","evalu","even","exampl","example,","except","exist","explan","express","expression)","expression)*)?","expression)?","expression,","expression.","false;","fatal","first","follow","follows:","foo","foo(2),","foo,","foo_a","foo_a.","foreign","function","function)","function,","function.","functions,","functions1.1.","further","futur","give","grammar","happen","henc","here","here,","however,","i32","i32)","i32,","identifi","identifier,","ignor","ignored.","illustr","impact","import","imposs","incompat","indeed,","inform","insid","isdivis","it'","it.","keyword","know","language.","languages,","last","lead","left","lifetim","limit","line","list","liter","local","longer","made","made.","main","main)","main.yr:(3,10)","main.yr:(3,24)","main.yr:(3,28)","main.yr:(3,29)","main.yr:(5,1)","main.yr:(6,9)","main.yr:(8,10)","main.yr:(8,24)","main.yr:(8,5)","main::bar","make","mani","mean","mentioning.","method","modul","module,","modules).","modules,","modules.","more","moreover,","name","named_expression:","need","note","note,","object","object,","objects);","omit","omitted.","on","only,","open","oper","operand","operation,","option","optional.","order","order.","otherwise.","paramet","parameter.","parameters,","parameters.","parameters1.1.1.","parameters1.2.","parentheses.","parser","parts.","pass","perform","place","pluson","plustwo","point","point,","possibl","possible.","prematuraly,","present","previou","println","privat","problem","process","program","prohibited.","prototyp","prototype.","provid","public","read.","reason","reason,","recurs","refer","regard","resolv","respect","rest","results:","return","return,","right","same","scope","scope,","scope.","section","see","seen","semi","separ","set","similar","simpl","simple_funct","singl","small","sourc","specifi","start","statement","std","std::args,","std::io","std::io;","structures,","structures.","such","surround","symbol","symbols.","syntax","syntax1.","taken","templat","template_funct","termin","terminated.","thank","that,","therefor","throw","thu","token","tri","tuple,","two","type","type)?","type,","type.","type1.4.","typed,","ufc","uniform","unlik","until","us","usag","used,","used.","validated,","valu","value,","value.","value1.1.2.","value1.1.3.","values,","var","var_decl","var_decl)*)?","variabl","variable,","variables.","verbosity,","visibl","void","void,","void.","way","well","well.","whose","wide","without","worth","written","x","x);","x.pluson","y","y);","y,","y;","ymir","ymir1:","z","z)","z);","z0","z]","{","{bar","{}","|","}","};","┃","┗━━━━━┻━","╋"],"primitives/control.html":["\"","\"!\");","\");","\",","\"i","')'","'counter","'dmut'","'for'","'if'","'in'","'loop'","'mut'","'r');","'ref'","'while'","(\"\");","(\"i","(\"result","('('","(','","(':'","('else'","()","();","(0","(1,","(2)","(decorator)*","(i);","(i,","(not","(x.0);","(x.1);","+","+=","..","...","//","0","0;","1","1'","1)","1.","10","10.","11","11,","12","12];","1;","2","2)","2.","2.1.","2.1.1.","2.1.2.","2.1.3.","3)","4,","5","5;","6","7","8","8).step_bi",":",":=","=","==",">","[10,","^","^^","abil","abov","action","add","all.","allow","alway","another,","anyth","array","arrays.","associ","avoid","base","basic","be","between","block","block.","bool","branch","break","break.","broken","c32.","chang","code","code,","compil","compiler.","comput","condit","condition.","conditionally,","conditions.","connections,","contain","contribution:","control","counter","cours","creat","current","decid","decis","decor","def","defin","development.","dynam","dynamic,","e.g.","each","end","endlessly.","ensur","enter","entered,","entered.","equival","error","error:","errors:","etc.","evalu","even","evid","exampl","example,","execut","exit","exit,","express","expression)?","expression,","expression.","expression2.1.","fals","false,","fatal","first","flatten","flow","flows2.","follow","following:","foo","for.","for_express","garante","give","given","grammar","here.","hidden","i,","i32","identifi","if,","if_express","import","imposs","included)","included),","incom","incompat","index,","infinit","insid","iter","j","j,","keyword","keyword.","kind","last","lead","line","longer","loop","loop,","loop.","loop_express","loops2.1.1.","loops:","lower","main","main.yr:(5,10)","main.yr:(6,3)","make","mentioning,","met","met.","met2.1.3.","miscomprehens","mut","mutabl","necessary.","network","never","none","note","number","on","once.","otherwis","over","part","perspective,","place","plan","possibl","present","presented,","primit","print","print,","println","program","program,","rang","range.","ranges,","ranges.","realli","reason,","refer","repeat","repetit","repetitions2.1.2.","result","result);}","results:","return","rule,","same","same.","satisfied.","scheme","scope","second","set","set.","share","slice","slice,","slice.","sourc","specifi","statement","statement.","static","std::io","std::io;","step","stop","string","succeeds,","syntax","system,","terminated.","thread,","three","time.","times\");","times\".","times,","true","true;","tupl","tuple,","tuple.","tuples.","two","type","type)?","type,","type.","types.","under","unlik","until","us","used,","user","util","valu","value,","value1.","var_decl","var_decl)","var_decls)","variabl","variable,","variables.","void","void,","void.","wait","while_express","whole","work","worth","write","x","ymir,","ymir1:","{","|","}","};","┃","┗━━━━━┻━","╋"],"primitives/operator.html":["!","!=","!i","!in","!of","#(","#[","#{","%","%=","&","&&","(","(or",")","*","*=","+","+=",".","..","...","/","/=","0","1","1.","10","11","12","13","14","15","16","17","2","3","4","5","6","7","8","9",":.","::","=","==",">",">=",">>",">>=","?","[","],","^","^^","__pragma","__version","addit","alway","and)","anyth","array","assert","assign","atom","balanc","binari","bit","bitshift","break","call","case","cast","chain","close","closed,","comment","comparison","complet","concaten","const","cte","decor","descript","dg","dmut","etc.","example,","express","expression,","fn","follow","keyword","lambda","liter","literal,","literals.","litertal,","logic","loop","match","move","multipl","mut","new","on","oper","operands,","operators,","option","over","path","postfix","power","preced","prefix","present","prioriti","priority1.","rang","ref","requir","respect","return","scope","slice","specif","specifi","start","syntax","syntax.","tabl","table.","templat","throw","tuple,","two","unari","used,","variable,","warn","{","|","||","}","~","~="],"advanced/":["!?\";","\"tri","&outofarray","((const","()","(becaus","(i32","(memori","(of","(or","(read","(the","(typeof","(x))::typeid);","(x)::typeid);","0","1","1,","1.","1.1.","1.2.","1.2.1.","1.2.2.","1.2.3.","1.3.","12;","2","2,","3,","3];","4","4];","5","7","8;","9",":","=",">","[0]","[1,","[2,","[[[i32]]]","[c32]","[c32],","[c8]","[i32]","[i32].","[mut","^","abov","accept","accepted,","accepted.","access","address","alia","alias","alias,","aliasable,","alloc","allocated,","allow","allowed.","anoth","another.","applic","array","associ","assum","avoid","back","below","between","borrow","borrowing1.","c32].","certain","chang","changed.","chapter","characterist","code","code,","collector.","come","compil","compiler,","compiler.","const","constant","contain","content","content),","control","copi","copy.","coupl","created.","data","data,","datas,","dcopy.","decor","deep","deepest","deepli","def","default),","defin","differ","directli","discard","dmut","dmut,","dmut.","earlier","effect","ensur","entered,","equival","error","error.","error:","even","exampl","example)","example,","exited.","explicit","explicitli","express","fatal","figur","follow","foo","foreign","four","full","function","garbag","give","guarante","hand,","heap","heap,","here","high","however,","i32","i32]","i32].","i32]]]","immut","immutable.","import","imposs","infer","inform","insid","instance,","instruct","interest","intern","introduc","it,","it.","keyword","keyword.","keyword1.2.3.","keywords,","know","languag","language,","leaks),","left","level","level1.2.1.","line","liter","literal,","literal1.3.","literals,","located.","loss.","main","main.yr:(4,11)","main.yr:(4,15)","main.yr:(7,7)","mainli","make","manag","mark","mean","memori","memory,","memory.","messag","modified,","move","movement","movements.","mut","mutability1.2.2.","mutabl","mutable,","mutable.","need","never","new","not.","note","now","object","on","on.","operand","opposit","order","over","part","perfect","perform","permiss","permitted,","point","possibl","present","previou","primit","println","program","program).","program,","program.","program:","prohibited,","provid","put","qualifi","read","reason","reason,","reasons,","ref,","refer","references1.1.","releas","repres","represent","requir","results:","return","right","rights,","s8","scalar","secur","segment","semant","show","shown","slice","slice,","space","specified),","specified.","stack","stack,","stack.","standard","statement,","std::io","std::io;","store","string","subtyp","such","suffix","system","tabl","table:","tell","term","terminated.","text","them.","throw","thu","transform","tri","two","type","type,","type.","typeof","typeof,","types,","types.","types1.2.","understand","unless","unlik","us","user","valu","value)","variabl","variable.","verbos","veri","want","way","whose","without","work","worri","writ","write","written","x","x,","ymir","ymir,","ymir1:","{","}","┃","┗━━━━━┻━","╋"],"advanced/references.html":["\",","&asserterror","(","(\"bi","()","();","(10,","(for","(here","(in","(mut","(or","(ref","(thi","(x","(x);","(y);","//","1.","1.1.","1.2.","1.3.","12","123;","12;","2,","3","3];","42);","42;","8,","89","89;","9]);","9];",":","=","==",">","[0]","[1,","[7,","[89,","[mut","^","^^^","abov","accept","ad","add","agre","alias","aliasable,","allow","alway","anoth","anyth","arithmet","array","assert","associ","automatically),","befor","borrow","case,","chang","chapter,","code","code,","code.","code:","compil","complet","complex","construct","contain","copy,","creat","created.","creation","data","declar","deepli","def","dereferenc","differ","directli","discuss","distinguish","do","don't","done","due","effect","efficient.","efficiently,","error","error.","error:","exampl","example,","exercise,","exist","fairli","fatal","fault","figur","figure,","figure.","first","follow","foo","foo,","function","gain","heap","heap.","henc","here","i32","i32)","i32.","i32]","immedi","import","imposs","intend","interest","it,","it.","keyword","keywordref","kind","left","less","level","local","longer","lower)","made","main","main.yr:(3,15)","main.yr:(3,19)","main.yr:(3,22)","make","mark","mean","memori","modifi","more","much","mut","mutabl","mutable,","need","never","next","note","on","oper","operand","paramet","parameter1.2.","pass","perform","place","point","pointer","pointers,","possibl","possible.","practice,","prefer","present","previou","println","program","program,","properti","raised,","ref","ref.","refer","reference,","reference.","reference1.1.","references,","references.","remov","repres","results:","return","return1.","safer","same","same.","seg","set","set,","show","shown","side","signatur","similar","skeptic","slice),","sourc","specifi","stack","stack)","stack,","statu","std::io","store","straightforward","subtyp","tell","terminated.","the,","this.","throw","tri","tupl","type","type,","type.","types,","understand","us","usual","valu","value).","value,","value.","value1.3.","values.","variabl","variable,","variable.","want","warn","way","why,","x","x);","x,","x.","x;","y","y,","ymir","ymir1:","you.","{","}","┃","╋"],"advanced/alias.html":["&asserterror","&outofarray","&outofarray,","'y'","(([i32],","()","();","(12);","([i32],","([i32],)","(alia","(i32,","(mut","(or","(x","(x);","(y);",".,","//","1","1.","1.1.","1.1.1.","1.2.","12);","2","2,","3,","3]);","3];","4];","5","8","8,","9;","9];",":",":.,","=","==",">","[0]","[1,","[1];","[2,","[7,","[8,","[i32]","[i32])","[i32],","[mut","^","^^^^^","a).foo","a,","a:.foo","abov","actual","ad","add","affect","alia","alias","alias,","alias1.1.","aliasable,","aliasable.","allow","allowed,","alreadi","anoth","argument","array","assert","assign","avoid","be","below","block","borrow","borrowed,","borrows.","call","calls.","case","chang","changed,","chapter","chapter,","character","check","class.","classes,","code","code.","compil","consequences.","consid","constant","contain","contain.","copied,","creat","data","data,","deal","deepli","def","definit","depend","differ","discard","dmut","doesn't","done","dot","element","elements.","error","error:","errors:","even","exampl","example,","explicitely,","f64)","fals","fatal","field","figure.","first","follow","foo","function","function.","heap","henc","here","however,","i.e.","i32","i32)","i32),","i32]","i32])","immut","immutable,","impact","impli","implicit","implicitli","import","indic","inform","inner","intern","introduct","itself","keyword","kind","last","lead","learn","left","level","level.","line","list.","liter","literal.","long","made","main","main,","main.yr:(5,13)","main.yr:(5,29)","main.yr:(8,14)","mainli","make","mandatori","mandatory,","matter","memori","modifi","much,","mut","mutabl","mutable,","mutable.","need","not,","note","notic","noticed,","notion","objects.","obviou","on","onc","oper","operand","operation.","owner","paramet","parameter.","parameter1.1.1.","pass","perform","pointer","pointers,","present","println","problem,","prohibited,","put","qualifi","read","reason","recursively.","ref,","refer","reference.","referenced,","remov","repres","required.","respectively.","return","same","secur","see","seen","sever","simpli","slice,","slices,","sometim","sourc","special","stack)","std::io","strang","struct","structur","structure,","such","suitabl","symbol","syntax","syntax.","syntax1.2.","tabl","terminated.","those","though","three","throw","tree","tri","true","tupl","tuple,","tuple1.","tuples.","type","type,","types,","types.","undefin","understand","uniform","unlik","us","useful","valu","value)","value.","values.","variabl","variable,","variable.","verbos","verbosity,","veri","whether","whose","within","without","x","x);","x;","y","y,","y.","ymir),","ymir1:","{","}","┃","┗━━━━━┻━","╋"],"advanced/copies.html":["!\");","!\";","\"","\",","\"hello","&asserterror","&asserterror,","&outofarray","&outofarray,","'h';","()","(spoiler)","(x","(x,","(y","//","1.","1.1.","1.2.","2,","3]);","3],","3];","9;",":","=","==","[0]","[1,","[2,","[4]];","[9,","[[1],","[[i32]]","[i32]","[i32]]","[mut","achiev","affect","aliasable.","allocation,","allow","assert","below,","borrow","case","code.","complex","copi","copy,","copy.","copy1.","copy1.2.","correct","cost","cpu","creat","data","data.","dcopi","dcopy.","deep","deepli","def","differ","dmut","done","due","each","effici","equivalent.","exact","exampl","example,","example.","exercis","fact","figur","first","follow","foreign","function","heap,","hidden","i32]","immut","impli","import","imut","increas","initialis","intern","keyword","keywords,","language,","less","level","line","liter","locat","location,","made","main","make","memori","modifi","much","mut","mutabl","mutable,","mutable1.1.","never","new","noth","on","one,","one.","place","place.","point","possibl","println","problem,","provid","reason,","represent","result","same","see","show","shown","simpl","simpli","solv","sometim","sourc","special","std::io","still","string","tabl","throw","time,","transform","two","type","underneath.","understand","us","valu","value,","values,","variabl","variables.","well","whose","work","x","x.","x;","y","y);","y,","y.","ymir","z","z);","{","}"],"advanced/best.html":["()","(alia","(at","(copi","(dmut","(i","(slc","(slc);","//","1","1.","17","2","3,","6.","7];",":","=",">","?","[9,","[i32]","[i32])","[mut","^","^^^","abov","advic","agreement.","alia","alias","alias,","all.","allow","allowed,","alway","aux","avail","avoid","bad","bad,","basis,","be","best","call","candid","choic","clue","code","compil","complit","constant","contribution:","copi","copy,","daili","data","def","defin","directly.","discard","dmut","don't","down,","error","error,","error:","example,","explicit.","fatal","follow","foreign","function","function,","function.","give","good","good,","guarante","here","hidden","hidden.","however,","i32]","i32])","i32]}","immut","implicit","implicitli","impossible,","inform","input","insid","left","level","libraries,","libraries.","line","made","main","main.yr:(1,16)","main.yr:(1,5)","main.yr:(17,7)","main.yr:(17,8)","main::good","make","mani","mayb","modifi","moment),","moment).","mut","mutabl","need","never","not.","note","on","oper","operand","paramet","perform","permiss","point","possibl","practic","practice1.","prefer","present","prevent","prohibited,","propos","prototyp","provid","qualifi","re","res}","return","simple,","slc","slc);","slc2","slc;","slice","slice.","sort","sorted,","sourc","such","take","terminated.","therefor","total","tri","type","unchanged,","us","user","user,","user.","valid,","valu","way,","wish","without","won't","writ","write","ymir1:","{","{mut","}","┃","┗━━━━━━","┗━━━━━┻━","╋"],"modules/":["$","$(pwd).","$(pwd)/relative/path/to/file,","$(pwd)/std/.","'_')?","'extern_modules::foo'","'import'","'pub'","'public'","'{'","'}'","(\"bar\");","(\"foo\");","(','","('::'","(';')?","()","();","(a,","(becaus","(cf.","(contain","(if","(take","*","*/",".",".page","/**","//","/tmp/cccoexdq.o:","1","1)","1.","1.1.","1.2.","1.3.","1.3.1.","1.4.","1.5.","1.5.1.","1.6.","1.7.","2","2)","3","3)","4","7","95%;",":","::","::,","::.",":=",">","^","^^^","_.","`_y14extern_modules3foo3foofzv'","`_y4mainfzv':","a,","a::foo","a::foo),","a::foo.","a::x","a::x,","a::x::bar,","a::y,","a::y::baz.","abov","above,","access","access,","access.","add","added,","allow","alway","ambiguity.","and,","anoth","assum","automat","avoid","bar","bar.","bar.yr","bar::foo","below","best","binari","block,","block.","both","branch","build,","call","candid","candit","case,","caution,","chang","choic","code","code,","code.","collect2:","colon","compil","compilation,","compiled,","conflict","conflict,","consid","contain","context","course,","creat","current","declar","declaration,","def","default","default.","defin","depend","differ","different.","direct","directori","directory,","directory.","directory1.7.","discuss","document","don't","done","doubl","dure","each","error","error,","error.","error:","errors:","even","everywhere,","exampl","example,","example1.4.","except","executable,","exit","explicit","express","expression,","extern","extern_modul","extern_modules,","extern_modules/_.yr","extern_modules/bar.yr","extern_modules/bar.yr:(4,9)","extern_modules/foo.yr","extern_modules/foo.yr:(4,9)","extern_modules/foo.yr:(8,5)","extern_modules::_;","extern_modules::bar","extern_modules::bar,","extern_modules::bar.","extern_modules::bar::foo","extern_modules::bar::foo,","extern_modules::bar::foo.","extern_modules::bar;","extern_modules::foo","extern_modules::foo,","extern_modules::foo.","extern_modules::foo::bar","extern_modules::foo::foo","extern_modules::foo;","extern_modules::foo}","fatal","figur","file","files,","first","flag","follow","foo","foo,","foo.","foo.yr","foo.yr,","foo::foo","foreign","found","found,","full","function","function,","gcc","gener","give","given","global","good","grammar","gyc","hierarchi","hierarchy,","hierarchy1.2.","however,","i.e.","i32","identifi","identifier)*","implicit.","import","import_stat","importable,","importation,","importation1.5.1.","importations.","imported.","imposs","includ","inner","innermodul","innermodule::foo","insid","it.","itself,","itself.","keyword","kind","know","larg","ld","leav","left","let","let'","librari","libraries.","line","link","linkage.","linking).","local","locat","look","m","made","main","main.","main.yr","main.yr:(.text+0x3e):","main.yr:(4,6)","main.yr:(7,5)","make","manag","mandatori","mean","mention","mod","mod.","modul","module,","module.","modules,","modules.","modules1.","modules1.1.","modules1.3.","moment.","name","name,","necessary,","note","object","obviously,","occur","offer","on","oper","operand","option","option,","organ","parameter,","parameters),","parent,","parents.","part","path","path)*","path.","path/to/modul","path/to/modules/relative/to/my/file,","pollut","possibl","practic","practice,","practice1.6.","pre","present","presented,","presented.","previou","println","privaci","privacy1.3.1.","privat","private.","privates).","problem","project,","properli","prototypes,","pub","public","public)","public,","public.","purposes.","reason","reason,","recursive.","refer","rel","relative::path::to::file.","relative::to::my::file.","resolut","resolution1.5.","resolv","results:","return","root,","roots,","s","s,","s.","same","second","see","seem","seen","sibl","siblings,","signatur","similar","sourc","standard","statement","statu","std::","std::io","std::io;","sub","subset","such","suffici","suite,","symbol","symbol*","symbol.","symbols),","symbols,","symbols.","syntax","system","take","talk","tell","terminated.","therefor","third","three","thu","to.","tree","tree,","tree.","tri","trivial","two","type","undefin","unlik","us","usabl","used,","used.","user","user,","user.","valid","valu","veri","visibl","void","void,","way","well.","width:","within","words,","work","write","x","ymir","ymir1:","{","{extern_modules::bar::foo","{}","|","}","~/libs/","—","—,","┃","└──","┗━━━━━━","├──","╋"],"types/":["1.","aka","aka.","chapter","class","custom","defin","differ","enumer","follow","four","present","structur","structure,","type","types1.","types:","user"],"types/struct.html":["\"","\",","\"main::point\");","&&","&asserterror","&outofarray","&void","'","':'","'a'","'b'","'c'","'struct'","(\"size","(&(x.x))","(&(x.y)));","('='","('_')*","('mut'?)","('|'","()","();","(1);","(1,","([[1,","([a","(a);","(b);","(c);","(cast!(&void)","(if","(locat","(p.i","(p2.i","(point);","(point.x","(point2);","(point::typeid","(templates)?","(the","(x));","(x,","(x.i","(x.x","(y",",",".,","//","0","1","1)","1.","1.1.","1.2.","1.3.","1.4.","1.5.","1.5.1.","1.5.2.","1.6.","1094713344);","12)","12);","12,","12.0f);","12;","13","16","2)","2);","2,","23,","2;","34;","3],","5,","6]])","6]]);","8","9","9);","98);","98;","9;","9_])*",":","::.",":=","=","==",">",">'",">.","?","@pack","@union","[0][0]","[0][1]","[4,","[a","[c32]","[i32]],","[i32]].","[mut","^","a;","access","access1.3.","ad","add","address","advanc","alia","alias","align","alignment,","allocation,","allow","alway","argument","argument.","arrow","assert","assign","assignet","attribut","attributes,","attributes.","attributes1.","b","b.i","be","becom","befor","begin","below","binari","block.","borrow","byte","bytes,","bytes.","c","c.i","c8","calcul","call,","call.","calls,","case,","cast","cast!(&void)","chang","chapter","check","close","code","colon","comas.","common","comparison","compil","compiler,","complet","concern","consequently,","construct","construction1.2.","contain","contrari","contribut","copi","copy,","correct","custom","data","dcopi","dcopy,","decid","declar","declaration,","declaration.","def","default","defin","definit","definition.","depend","design","differ","discuss","dot","doubl","dummi","dummy;","dynam","element","equal","error","error:","errors:","etc.","even","example,","express","expression)?","f32","f64","f64.","fatal","field","field,","field.","fields.","first","follow","forc","function","gcc,","gener","grammar","guarante","hand,","heap","however,","i.e.","i32","i32.","i32::init","i32]]","i64","identifi","identifiers.","immut","immutable,","immutable.","implicit","implicitely.","import","important.","imposs","inform","init","initi","insid","interest","intern","it,","keyword","languag","largest","left","level","level.","limit","list","locat","location.","longer","machin","made","main","main.yr:(13,4)","main.yr:(16,4)","main::point","main::point(0,","main::point(1,","main::point(98,","main::point([[1,","main::point([[9,","main::unit()","main;","make","manag","mani","mark","mayb","mean","memori","memory.","mod","modifi","module,","moment.","multipl","mut","mutability1.4.","mutabl","mutable).","mutable,","mutable.","name","named,","need","note","note,","observ","omitted.","on","onc","oper","operand","operator,","optim","order","p","p1","p1.i","p1.x","p2","p2.i","p;","pack","packed);","packed1.5.2.","packed;","paradigms,","paramet","parameters,","parenthes","part","pass","point","point.i","point2","point::init;","point;","pointer","possibl","possible)","present","printabl","println","problem","problem,","program","program.","public,","realli","reason,","refer","remov","requir","resolv","respected.","results:","right","s","same","separ","set","share","similar","simpl","size","sizeof","slice,","slice.","sourc","special","specif","stack","stack).","static,","std::io","std::io;","store","struct","struct,","struct_typ","structur","structure,","structure.","structure1.1.","structure1.5.","strucures,","such","such,","syntax","syntax,","syntax.","tabl","templat","templates,","term","terminated.","them,","throw","thu","transit","tri","tuples,","two","type","type,","typeid","typeinfo","typeinfo,","types,","types.","under","union","union1.5.1.","union1.6.","unit","unit;","unless","unlik","unpack","unpacked);","unpacked;","us","usag","used.","users'","valu","value,","value.","values,","values.","var_decl","var_decl)*","variabl","variable,","well.","whose","without","won't","x","x,","x.i","y","ymir,","ymir1:","z0","z]","{","|","}","┃","╋"],"types/enum.html":["\"fri\"","\"main::annoyingenum\");","\"mon\"","\"notaday\"","\"sat\"","\"sun\"","\"thu\"","\"tue\"","\"wed\"","&asserterror","'","'='","'enum'","'|'","(\"call","(\"mon\")","(':'","('_')*","()","(127,","(255,","([a","(__glob__)","(addr.a","(annoyingenum::__typeid","(annoyingenum::typeid","(cf.","(d);","(day","(day);","(day::monday);","(doubl","(errorenum::foo);","(for","(if","(inner_value)+","(knownaddr::broadcast.d","(knownaddr::localhost.a","(note:","(same","(templates)?;","(x)","//","0,","1","1)","1);","1.","1.1.","1.1.1.","1.1.2.","1.1.3.","1.2.","11","127);","13","2","23.","255)","255);","255,","28","28,","3","4","42","5","6","8","9_])*",":",":,","::),","::.",":=","=","==",">",">'","[a","[c32]","[c32])","[c32],","[c32]}","^","^^^","^^^^^^^^^","_","__glob__","__members__.","abov","accepted,","access","access,","access1.1.1.","accessed.","actual","addr","allowed,","allowed.","annoyingenum::__typeid__);","annoyingenum;","applic","assert","associ","attribut","attributes.","attributes1.","avoid","b","bar","be","bellow.","below","below).","below.","binari","block","block,","block.","broadcast","broadcast\");","c","call","call,","caller","caller.","candid","cast","castabl","chapter.","code","code,","code.","colon","compil","complet","complex","condit","conflict,","conflict.","construct","constructions1.1.3.","contain","content","context","context,","context.","context1.2.","contrari","creat","d","day","day)","day::monday;","day;","days.","declar","declaration,","def","defin","discuss","don't","doubl","due","dynam","each","enum","enum.","enum_typ","enumer","enumeration,","enumeration.","enumeration1.1.","error","error,","error.","error:","errorenum;","etc.","even","exampl","example,","execut","express","false;","fatal","field","fields.","follow","following:","foo","foo,","forbidden,","forc","friday","function","function,","functionn","functions,","given","global","grammar","guards,","here","here.","however,","i32","identifi","implicit","import","imposs","incompat","infer","inform","inner","inner_valu","insid","intern","ipv4addr","ipv4addr.","ipv4addr;","issue.","keyword","kind","knownaddr::localhost;","knownaddr;","line","list","literals.","localhost","localhost\");","location,","location.","made","main","main.yr:(13,11)","main.yr:(17,10)","main.yr:(17,5)","main.yr:(28,10)","main.yr:(28,9)","main.yr:(6,14)","main.yr:(6,3)","main.yr:(8,5)","main::bar","main::day","main::day([c32]))","main::errorenum","main;","mean","member","member_nam","members)","mod","monday","more","mut","name","note","on","oper","option","order","paramet","pass","past","perform","possibl","practice,","present","presented.","previou","principl","println","prioriti","realli","result","return","same","saturday","scope","second","seem","share","slice","sourc","specif","static","std::io","string","struct","structur","such","sunday","surround","symbol","tabl","templat","terminated.","therefor","throw","thu","thursday","time","time).","tokens.","transform","tri","true;","tuesday","type","type)?","type,","type.","typeid","typeinfo","types)","types,","types1.1.2.","undefin","unknown","us","used,","useful","user","valu","values.","variabl","void","wednesday","words,","x","ymir1:","z0","z]","{","{mut","|","}","})","┃","┗━━━━━━","┗━━━━━┻━","╋"],"types/aka.html":["\",","'aka'","(\"foo\");","(\"mi","(\"x:","(';')?","()","(1,","(12);","(a","(callfoo);","(foo);","(i32,","(templates)?","(x);","//","1,","1.","1.1.","1.2.","1.3.","12","12;","2","2);","3","42",":",":=","=",">","^","a);","a.0,","a.1);","access","access,","addition,","address,","aka","aka1.1.","aka_decl","akas.","alia","alias,","alreadi","alway","anoth","avoid","below.","block.","call","caller.","callfoo","choos","closer","code","compil","compiler,","complet","confin","confus","construct","content,","context","contrari","contribut","creat","declaration,","def","defin","definit","differ","don't","dure","each","enabl","enumer","enumeration,","enumeration.","equival","error","error.","error:","etc.","everyth","exampl","example,","executable,","express","expression.","follow","foo","function,","functions,","gener","global","grammar","however,","i32","i32)","i32))","identifi","immutable.","import","import,","insid","io","io::println","keyword","library,","lines.","local,","locat","main","main.yr:(3,11)","mean","modules,","mytupl","mytuple)","name.","necessarili","need","on","path","possible,","present","previou","println","real","realli","reason","refer","results:","return","rule","same","see","simpli","singl","sourc","std::io","stick","strictli","structures,","symbol","symbols.","symbols1.","syntax","time","time,","two","type","type,","type.","type1.3.","undefin","us","used.","valu","value,","value1.2.","values,","values.","variable,","variable.","variables.","work","x","x:","y:","ymir.","{","}","┃","╋"],"objects/":["&(a))","&(a),","&b","()","(a","(b);","(basic","(cf.","(constructor","(if","(nor",",","...","//","1.","10","1b","4","4,","8,","8.",":","=","a,","abov","accept","access","ad","alias","alloc","anoth","applic","arithmetics,","assum","b","b,","b.","base","basic","be","benefit","bytes,","bytes.","call","called).","capac","cf.","chapter,","chapters,","class","class.","code","come","compil","consequ","contain","correctli","d,","def","definit","dereferenc","differ","dynam","error","events).","exampl","example.","except","familiar","field","figur","first","follow","foo","frequent?,","guarante","heap.","heir","however,","huge","i32,","illustr","import","indeed,","inform","initi","instanc","java","known","languag","language,","lead","librari","loss","main","memori","more","need","not,","notic","null","null,","null.","nullpointerexcept","number","object","objects1.","on","orient","paradigm","part","place","point","point,","pointer","pointer,","pointers,","pointers.","polymorph","polymorph,","polymorphism),","possibl","present","principl","product","program","programming.).","read","realli","reason,","reference,","remov","safety,","see","set","similar","size","sourc","stack.","static","strong","such","syntax","system","talk","thu","time,","top","total","type","types,","types.","uml","unknown","unlik","us","used).","valid","valu","value,","value.","want","without","words,","x,","y","yes,","ymir","ymir,","{","}","–"],"objects/class.html":["!","\",","&(mut","'@'","'abstract'","'class'","'final'","'{'","'}'","'}')","(\"bar","(\"bar\")","(\"destroy","(\"float","(\"foo","(\"foo\");","(\"fst","(\"int","(\"scd","(','","('if'","('over'","('{'","()","();","(12)","(12);","(12.f);","(base","(cf.","(for","(modifier)","(modifiers)?","(mut","(self._x);","(which","(x","*","*/","+=","...","/**","//","0;","1.","1.1.","1.1.1.","1.2.","1.2.1.","1.2.2.","1.2.3.","1.2.4.","1.2.5.","1.3.","1022","1023","1024","1025","1026","12","12.000000","12;","19","1;","2","33","42","6","761","762","763","764","765",":","::,",":=","=",">","^","_","__dtor","__dtor,","__z__","_w","_x","_x,","_y","_y,","_z","a::bar","a::foo","a::new","access","ad","add","affin","alias","alloc","alreadi","alway","anoth","argument","avoid","bar","bar,","bar.","be","befor","behind","best","binari","block.","bodi","body,","body.","both","build","call","called,","called.","candid","case","case,","certain","cf.","chang","chapter","chapter,","choos","class","class,","class.","class1.1.","class_cont","class_decl","code","code,","collector.","colon","coma","compat","compil","complet","complicated,","comput","considered.","construct","construction,","construction1.2.2.","constructor","constructor,","constructor.","constructor1.2.1.","constructor1.2.4.","constructors,","contain","contribution:","convention,","creat","current","declar","def","default","default,","default.","defin","definit","definition.","destroy","destroyed.","destruct","destructor","destructors1.","determin","dispos","disposed).","done.","doubl","effect","either),","enclos","end","ensur","enter","error","error.","error:","etc.","even","example,","expression)?","f32)","fatal","field","fields,","fields.","fields1.1.1.","file","fine,","float","follow","foo","foo.","forgotten","free","fst","function","function,","futur","garbag","good","grammar","hand,","handles,","happen","heir","hidden","i.e.","i32","i32)","i32,","i32.","i32;","identifi","identifier,","identifier.","ignor","immut","impact","impl","import","initi","insid","instanc","instance,","instance1.2.3.","instancible,","instantiate,","instead","instruct","int","irrecover","irrecoverable.","it.","keyword","keyword,","keyword.","last","left","let","let'","let,","let.","lie","line","list","loop","made","main","main.yr:(10,6)","main.yr:(19,17)","main.yr:(6,6)","main::a)","main::a),","main::a)}","make","mandatori","mani","manual","mean","memory,","method","modifi","modifier)*","moment.","more","multipl","mut","mutability,","name","name.","necessarili","network","never","new","new.","note","object","object.","objects,","on","once.","oper","operand","option","optional,","order","outsid","paramet","pass","per","perform","point","point4d","possible,","practic","practice.","present","presented,","print","println","privaci","privacy.","privacy1.2.","privacy1.3.","privat","probable,","prot","prot,","protect","prototype,","prv","prv,","pub","public","public,","public.","quit","reconstructed.","redefin","redefined.","redirect","redirection1.2.5.","redond","references).","reli","resort","result","result,","results:","return","right","same","scd","see","self","self)","self,","self.","self._x);","separ","set","set,","share","simple_class_decl","singl","socket,","start","statement","statement,","statement.","static","std::io","std::io;","such","surround","symbols,","symbols.","take","templat","template_class_decl","templates).","terminated.","them.","through","token.","total","two","type","type)?","type.","underscor","underscore,","unlik","unmanag","unpredictible.","us","valid.","valu","value,","variabl","variable,","way","way,","way.","with.","within","without","work","x","x);","x,","y","ymir1:","{","{i32}","{self","{}","|","}","–","┃","┗━━━━━━","╋"],"objects/mutability.html":["&(a)=","&(mut","&asserterror","()","(0,","(12);","(42);","(a.x","(a.x);","(cf.","(x","//","1);","1.","1.1.","1.2.","14","15","33;","42);","42;","43;","89;",":","=","==",">","^","a).","a.i","a.x","a::new","a;","affect","affectation.","alia","alias","aliases,","all,","alloc","applic","assert","avoided,","b","b.x","be","borrow","chapter","chapter,","chapter.","class","class.","classes.","compil","contain","copi","copiabl","created.","data","def","default,","definit","discuss","dmut","effici","error","error.","error:","errors:","example,","fatal","field","follow","futur","heap,","here.","however,","i32","i32)","i32,","i32;","immut","implement","inform","instanc","keyword","left","main","main.yr:(14,3)","main.yr:(15,3)","make","modifier,","mut","mutability1.","mutability1.1.","mutability1.2.","mutabl","mutable,","mutable.","object","ok","onc","operand","point","present","println","problem","pub","reason","rediscuss","refer","reference,","references).","return","self","set","specif","structur","structures,","terminated.","throw","trait","traits).","traits.","tri","type","type.","types,","types.","unlik","us","variabl","well.","write","x","x,","y","ymir1:","{","{}","}","┃","╋"],"objects/methods.html":["\",","&(main::a)","&(mut","'('","')'","'def'","'self'","(\"bar\");","(\"const\");","(\"foo","(\"foo\");","(\"mutable\");","(\"x","('","(','","('if'","('mut')?","()","();","(12);","(13));","(29);","(42)","(42);","(a","(a)),","(a).setx","(a.foo","(alia","(b).setx","(const","(i.e.","(mut","(self)","(self,","(x","(x);","+","..","//","1","1.","1.1.","1.2.","1.3.","14","17","17,","2","21","29","42","8",":",":.",":=","=","=>",">",">'","^","^^^","^^^^","_a","_a,","_x","a).setx","a.bar","a.foo","a.setx","a:.foo","a:.setx","a::new","abov","acc","access","accessed,","affin","alia","alias","aliased,","allowed,","anoth","applic","argument","associ","avoid","awar","b","b).setx","b.setx","bar","bar,","baz","baz.","below,","best","binari","bit","block.","bodi","borrow","c++,","call","called.","calls,","case","certifi","chang","chapter","choice,","choos","class","classes.","code","code.","coma","compil","conceptu","const","constant","contain","contains,","contains.","context","contribution:","d,","data","def","default","default.","defin","definition.","describ","discard","dmut","dot","due","e.g.","element","error","error,","error.","error:","etc.","even","everywhere,","exampl","example,","except","exists.","explicit","explicitli","express","expression)?","fact","failed,","fatal","field","fields,","fields.","first","follow","following.","foo","function","function,","function.","good","grammar","have","heap","heir","i32","i32)","i32;","idea,","identifi","immut","immutable,","implicit","implicit,","implicit.","implicitely,","implicitli","import","improv","inform","insid","instanc","instance,","instance.","instances,","instances.","java,","keyword","language,","lead","left","level","line","list","locat","made","main","main.yr:(1,7)","main.yr:(12,10)","main.yr:(14,2)","main.yr:(14,9)","main.yr:(17,2)","main.yr:(17,9)","main.yr:(21,3)","main.yr:(21,4)","main.yr:(8,7)","main::a","main::a)","main::a::bar","mandatori","mayb","mean","method","method,","method.","method_param","methods,","methods.","methods1.1.","mislead","modifi","modified.","more","mut","mut,","mutability1.3.","mutabl","mutable,","mutable.","necessari","never","note","note,","obj).method","object","on","onc","oper","operand","operator,","order","orient","other.","overrid","override1.","param_decl)*","paramet","parentheses.","pass","permiss","possibl","possible,","possible.","prefer","present","prevent","println","privaci","privacy1.2.","privat","prohibited,","protect","prototyp","prototype,","prv","pub","public","purpos","qualifi","read","readabl","refer","reference,","repeat","rest","results:","return","rewrit","same","say,","scala,","search","second","seen","self","self)","self,","self.","self._a","self._a);","self._a.","self._x","self._x);","self.bar","self.baz","self:.bar","separ","setx","sharing,","simple_method","sourc","specif","std::io","such","symbol","syntax","templat","template_method","terminated.","them,","them.","time,","time.","tri","two","type","type)?","undefin","uniform","unlik","us","useless","user","valid","valu","variabl","variables.","verbose.","void","whose","within","write","x","x;","ymir1:","{","{i32}","{}","|","}","┃","┗━━━━━┻━","╋"],"objects/inheritance.html":["\"/home/emile/gcc/gcc","\"bar\");","\"baz\");","\"std::conv::to(&(main::bar),&(main::foo))::to\",","#1","#2","#3","#4","#5","#6","#7","#8","&bar","&bar,","&castfailur","&foo","&foo.","&shape","(\"====\");","(\"destroy","(\"foo\");","()","())","());","();","(...)","(12);","(12.0);","(3.0);","(and","(asid","(at","(baz","(const","(core","(if","(mut","(no","(print","(privat","(radiu","(s.area","(safe","(self)","(self);","(self._radiu","(self._x);","(side","(such","(x","(x),","*","*/","+","...","/**","//","/home/emile/documents/test/ymir/main.yr:12","/home/emile/documents/test/ymir/main.yr:19","/home/emile/gcc/gcc","/lib/libgyruntime.so:??","/lib/x86_64","0.0","0;","1.","1.0f","1.1.","1.2.","1.3.","1.4.","1.4.1.","1.4.2.","1.5.","1.5.1.","1.6.","1.7.","10","11","11)","12","13","14","14,","16","18","19","19.","1;","25","29","4","42","452.389342","5","7","820,","9","9.000000",":","=","====","=>",">","@abstract","@final","^^","^^^","^^^^^^","_","__dtor","_center","_radiu","_side","_start","_x","_x.","abort","abstract","abstract,","abstract.","achiev","actual","afterward.","alway","ancestor","ancestor.","anoth","anyth","area","area.","argument","arguments,","arguments.","attribut","avoid","bar","bar\");","bar)","bar*","bar,","bar::new","base","baz","be","befor","behav","behavior","behavior.","bodi","body,","body.","body1.6.","bt","c++,","call","called,","candid","capabl","case","cast","cast.","castfailur","certain","chapter","choic","circl","circle::new","class","class,","class.","class1.","class1.5.1.","class1.7.","classes,","classes.","compil","compiler,","complet","comput","construct","constructed.","construction,","construction1.3.","constructor","constructor,","constructor.","constructors,","contain","contrast","contribution:","convers","course,","custom","d,","debug","declar","def","defin","deriv","derivation,","desper","destroy","destruct","destruction1.4.","destructor","didn't","differ","direct","don't","done","dumped)","effect","empti","enabl","end","error","error:","errors:","even","exampl","example,","except","exit","explicit","explicitly.","f32;","f64","f64)","f64;","fact,","failed,","faster).","fatal","field","fields).","fields1.2.","file","final","find","first","first,","flag","follow","foo","foo\");","foo,","foo::new","function","function,","further","give","gnu/9.3.0/include/ymir/std/conv.yr\",","gnu/9.3.0/include/ymir/std/conv.yr:820","gnu/libc.so.6:??","good","handling).","happen","heir","heir,","heir.","heirs.","here","heritable,","hidden","however,","i.e.","i32","i32)","i32;","idea","ident","illustr","immut","impact","implicitli","import","includ","incomplete.","inde","inherit","inheritable.","inheritance1.1.","initi","insid","install/bin/../lib/gcc/x86_64","instanc","instanti","it)","it.","java,","keyword","keyword.","languag","last","line","linux","loop","made","main","main.yr:(10,14)","main.yr:(10,21)","main.yr:(10,9)","main.yr:(11,7)","main.yr:(12,11)","main.yr:(13,7)","main.yr:(14,11)","main.yr:(16,14)","main.yr:(4,10)","main.yr:(4,13)","main.yr:(4,20)","main.yr:(6,10)","main.yr:(7,16)","main.yr:(7,7)","main.yr:(9,7)","main::bar","main::bar::bar","main::bar::foo","main::baz","main::circl","main::foo","main::foo::bar","main::foo::foo","manag","managed,","mani","mark","match","math::pi","mayb","mean","meaning,","method","method,","method.","method1.4.2.","methods.","methods1.5.","miscomprehension,","mode.","modifi","modul","multipl","mut","mutability.","mutabl","name","necessarili","need","note","object","omit","on","oper","optim","order","orient","otherwis","over","overrid","overriden","overriden,","overriden.","overriding.","overriding1.4.1.","paradigm","parent","pattern","pc","perfectli","perform","place","point","point,","polymorph","polymorphism.","possibl","practic","predictible,","present","print","println","println(","privacy,","privat","probabl","program","program).","program.","prohibited.","prot","protect","provid","prv","pub","public","public,","radiu","reason,","rectangl","redeclar","redirect","redirected,","reli","required,","respect","result","results:","rethrown,","return","s","safe","safe.","same","scala)","second","see","self","self)","self._radius)","self._sid","shadow","shape","shortcut","side","signatur","squar","square::new","stack","stacktrac","statement.","std","std::conv.","std::conv::castfailure.","std::conv::tonp94main3barnp94main3foo::to","std::conv;","std::io","std::io;","std::math;","store","strictli","strong","super","take","templat","terminated.","that,","thing","throw","thrown","thu","time),","trace","traits,","tri","two","type","unhandl","unmanag","us","useless,","valid","valu","variabl","void","vtabl","way","way.","well,","whose","without","won't","work","work,","works,","x","x.to!(&bar)","y","y,","y.to!(&bar)","ymir","ymir1:","{","{}","}","│","┃","┗━━━━━━","┗━━━━━┻━","╋","═","╕","╘═>","╞═","╭","╰"],"objects/traits.html":["\",","\"}\");","'print'","(\"main::line\")","(\"main::point\")","(\"main::shape\");","(\"point","()","());","();","(a","(cf.","(const","(pub,","(self)","(self)::typeid);","(self);","(typeof","(u::new","(v::new","*","*/","...","/**","//","1.","1.1.","1.1.1.","1.1.2.","1.2.","1.3.","12","18","21","5","8",":","=","=>",">","@abstract","^^^^^","^^^^^^","^^^^^^^^^","a.print","abstract","abstract,","accept","account,","ad","add","alway","argument.","attribut","be","begin","behavior","behavior,","behavior.","block.","bodi","body.","both","brief","c","c.print","call","callabl","case,","chapter","chapter,","check","circl","circle::new","class","class,","class.","classes.","code","code,","code.","compil","compilation.","compiler,","complet","constructor","contribut","coupl","declar","def","default","defin","defines.","definit","differ","don't","each","empti","enhanc","ensur","error","error,","error:","errors:","exampl","example,","express","fatal","follow","foo","function","gain","hand,","happen","heir","here","i)","idea","impl","implement","implementation,","implementation.","import","information,","inherit","insid","interest","it,","it.","keyword","kind","know","language.","line","magic","main","main.yr:(12,18)","main.yr:(18,7)","main.yr:(21,14)","main.yr:(5,10)","main.yr:(8,15)","main::circl","main::printable::print","main::rectangl","main::shap","main::shape::print","main::u","main::v","main;","mayb","mean","meaning,","method","method.","method1.2.","methods,","methods.","mimic","mod","more","multipl","name","never","non","note","note,","on","order","outsid","over","overrid","overriden","paramet","parameters.","parent","pass","point","present","prevent","previou","print","print.","printabl","printable)","printable,","printable.","printable;","printable}","printed.","println","privaci","privacy1.3.","problem","problem,","prot","provid","prv)","pub","public","public.","r","r.print","reason,","rectang","rectangl","rectangle::new","reimplement","reimplementation1.1.2.","reimplemented.","reject","remov","resolv","results:","rule","same","say,","see","self","self)","self._x,","self._y,","self::super.print","shape","shape,","simpl","solution,","sourc","special","specifi","std::io","std::io;","stdout.","still","suggest","super","symbol","take","taken","templat","template,","templates).","templates,","terminated.","test","that,","them,","this,","thu","trait","trait,","trait.","trait1.1.","trait1.1.1.","traits,","traits.","tri","two","type","type,","type.","typeid","typeof","types,","u","us","usag","usage1.","used.","v","valid","validated.","valu","value,","variabl","variable.","void","warning:","well","whose","without","ymir","ymir1:","{","{\",","{i","{}","}","┃","┗━━━━━┻━","╋"],"objects/cast.html":["!","!\");","&(object)","&(void)","&bar","&bar.","&foo","&foo)","&foo,","&object","(\"bar\");","(\"foo\");","(\"i","(\"main::bar\");","()","())","();","(bar::typeid);","(cf.","(e.g.","(either","(f","(foo::new","(https://gnu","(in","(literraly).","(object,","(self)","(x);","(y::typeinfo);","1)","1,","1.","1.1.","1.2.","10u32","11u32","12u32","13u32","14u32","16","16,","1u32","2)","2u32","3)","3u32","4)","4u32","5u32","6u32","7u32","8u32","9u32",":","=","=>",">","[],","[c32]","[core::typeinfo::typeinfo(13,","[packable]","[typeinfo]","abov","above,","access","accur","actual","alias","ancestor","ancestor,","array","attribut","attributes.","bar","bar::new","basic","baz","bool","bytes,","can't","case.","cast","cast!{&foo}","cast!{&object}","cast,","chapter","char","check","class","class,","class.","closur","code,","come","compil","concepts,","contain","core::typeinfo::typeinfo(13,","creat","created,","deal","def","default","definit","denot","depend","despit","directly,","discuss","due","dynam","dynamically.","enum","exactli","example,","except","executed,","explicit","f.foo","fact","field","field,","fields.","first","float","follow","following.","foo","foo.","func_ptr","function","function.","give","global","heir","i32","i64),","implicit","implicitely,","implicitely.","import","imposs","impossible.","inform","information,","inherit","inner","insid","instanc","integ","interest","librari","line","list","made","main","main::bar)","main::bar.","main::foo),","main::foo)],","match","matching.","mean","memori","memory.","modified.","monitor","monitor,","more","moreover,","mutabl","name","necessarili","note","null.","object","object,","object.","object1.","objects),","objects,","objects.","on","orient","over","parallelism),","parent","pattern","point","pointer","pointer,","polyphormism.","present","principl","print","println","problem","program","programming,","pub","pure","realli","refer","respect","result","results:","return","revers","rule.","same","second","see","seen","self","signed_int","size","slice","slice,","slice.","sourc","specif","standard","static","static.","statically),","std::io;","stdout,","store","struct","structur","tabl","text","that,","thing","thu","time","tupl","two","type","type,","type.","typeid","typeids;","typeinfo","typeinfo,","typeinfo1.2.","typeinfo;","types.","typing,","typing1.1.","u32","unlik","unlike,","unsigned_int","us","usiz","valid","valu","valuabl","value,","value.","values,","variabl","variable).","void","vtabl","vtable,","way","whose","x","x;","y","y.foo","ymir","ymir.github.io/documentations/en/traits/serialize.html).)","{","{}","|","}"],"functions/":["&","&((alia","&(a.foo);","&(a:.foo);","&(mut","&(x.foo);","&a.foo;","&b.foo;","&fn(i32)","&fn(ref","&foo","&outofarray","'|'","(\"bar\");","(&)","(&addone);","(&mutaddone);","('","(','","(':'","('=>')?","()","());","(),","();","(+)","(1,","(1.3,","(12)","(3,","(30));","(41)","(a","(a)","(a).foo","(a);","(and","(any)","(cf.","(dg","(f","(i);","(i32)","(i32,","(in","(it","(move","(mut","(note","(or","(present","(ref","(self)","(self.i);","(type","(var_decl","(we","(x","(x);","(x,","(y","(y,","(|x,","*","+","//","0","0;","1","1.","1.1.","1.1.1.","1.2.","1.3.","1.3.1.","1.3.2.","1.3.3.","11;","12","12);","12;","14","15","18","1;","2","2));","2.9));","20","23","3","3,","30;","4,","4.","41;","42","42;","5","5,","6","7);","8","89","89;","9",":",":.",":=","=","=>",">",">'","[0]","[12];","^","_","_i","a)","a).foo);","a.i","abov","accept","access","ad","add","addit","addon","advanc","alia","alias","alias,","allow","allowed,","alway","ampersand","anonym","anoth","anymor","argument","argument,","associ","b","b)","b.i","bad","bar","bar::new","basic","be","behav","behavior","between","binari","bit","block","bypassed,","call","called,","candid","captur","case","case).","case,","cast","catch","cf.","chang","chapter","class","closer","closur","closure).","closure,","closure.","closure1.3.1.","closure1.3.2.","code","compil","complet","concept","conflict","consid","constant","contain","context","context,","contribution:","copi","copy).","cours","creat","creation.","d","declar","declaration).","deep","def","defin","deleg","delegate).","delegate,","delegate.","delegate1.","delegate1.3.3.","dg","differ","dinstinguish","directli","directly?","discard","discuss","dmut","don't","due","earlier","earlier,","eas","easili","element,","empti","empty,","enclos","environ","environment,","error","error.","error:","errors),","errors,","errors:","even","exact","exampl","example,","example.","example:","execution).","exist","exists,","exited,","explicit","express","f","fact","fatal","figure.","first","fn","fn,","follow","foo","foo,","foo::new","front","function","function,","function.","function1.3.","functions,","functions.","functions1.1.","futur","gener","given,","global","guarante","handling.","happen","heap","here","here,","highli","however,","i);","i,","i.","i32","i32)","i32,","i32|","i32}","i[0]","idea,","identifi","illustr","immut","impact","impact:","impl","implicit","implicitli","import","important).","impossible,","incompat","inde","indeed,","independ","index","infer","infered,","inform","inheritance.","insid","instance,","instance.","instead","introduc","introduced.","it.","keyword","kind","know","knowledge,","lambda","lambda,","lambda.","lambda_func","language,","left","level","limit","line","literal.","local","long","made","made.","main","main,","main.yr:(14,17)","main.yr:(14,18)","main.yr:(15,14)","main.yr:(18,13)","main.yr:(18,15)","main.yr:(2,10)","main.yr:(20,5)","main.yr:(3,10)","main.yr:(3,26)","main.yr:(3,5)","main.yr:(5,7)","main.yr:(5,8)","main.yr:(6,12)","main.yr:(8,13)","main.yr:(8,2)","main::foo","main::foo(42)","main::foo)","main::foo::foo","make","mani","mayb","mean","method","more","move","mut","mutabl","mutaddon","name","name,","name.","nearli","need","new","next","normal","note","note,","noth","object","object,","obviou","obvious,","on","oper","operand","operation,","operator,","operator.","optional.","order","otherwis","outsid","over","paramet","parameter,","parameter.","parameters,","parameters.","parent","parenthes","pass","point","pointer","pointer,","pointer.","pointer1.1.1.","pointers,","polymorph","polyphorm","possible,","present","previou","printabl","println","privat","problem","problem,","program","prohibit","prohibited,","prototyp","prototype,","pub","put","qualifi","readable.","realli","reason,","reasons.","recommended.","ref","refer","referenc","reference1.2.","references.","remov","replic","resolv","respect","respected,","result.","results:","return","rewritten","runtime,","safe","same","scope","second","section,","see","seem","seen","self","self)","self._i","show","simpl","slice","sometim","sourc","special","specifi","stand","statement,","std).","std::io","std::io;","still","store","streamable;","strictli","such","sufficient,","sum.","surround","symbol","syntax","systems,","take","tempt","term","terminated.","thank","that","them.","therefor","third","third.","throw","thu","time","token","transform","tri","tuple.","twice,","two","type","type),","type)?","type,","type.","types,","unari","uncomplet","undefin","uniform","unlik","unsaf","untyp","us","usag","usage,","used,","used.","valid","valu","value.","values,","values.","var,","var_decl","var_decl)*)?","variabl","variable,","variable.","void","void)","void.","void}","warning:","way","well.","whole","without","words,","works.","write","written","written.","x","x)","x);","x*y,","x,","x.","x;","y","y)","y).foo","y;","ymir","ymir1:","y|","y|=>","{","{&fn(i32)","{mut","{}","|","|x","|x,","|x|","|x|=>","||","}","};","┃","┗━━━━━━","┗━━━━━┻━","╋"],"pattern/":["\"","\")\");","\",","&(main::point)","&asserterror","&bar","&baz","&circl","&foo","&shape","&shape,","'","'('","')'","'...')","':'","'=>'","'_')","'match'","'x',","'{'","'}'","(\",","(\"alway","(\"ani","(\"between","(\"circle\");","(\"contain","(\"foo","(\"it","(\"point","(\"shape\");","(\"the","(\"thi","(\"x","(','","('..'","(';')?","('='","('|'","()","();","(1)","(1,","(12)","(a","(and","(anoth","(bi","(center","(cf","(cf.","(e.g.","(i","(i.e.","(i32,","(identifi","(p,","(p.x,","(pattern_argu","(pattern_express","(put","(the","(type","(x","(y","(y);","(z);","*","*/","..","...","....\");","/**","//","0","0,","1","1\");","1)","1,","1.","1.1.","1.2.","1.3.","1.3.1.","1.3.2.","1.4.","1.4.1.","1.4.2.","1.4.3.","10","100","100\");","12","13","13\");","13,","14","15","1;","2","2)","2);","28","2;","3","3)","3,","3.14)","31","40","41","41,","42","42\");","42,","42;","43","43\");","43.","5","6","6,","7","8",":",":=",";","=","==","=>",">",">')?","@abstract","^","^^^","^^^^^","^^^^^^","_","_)","_),","_).","_,","_y","abov","abstract","accept","access","ad","add","admitted,","aim","allow","altern","alway","ancestor","anoth","answer","argument","ariti","asserterror::new","associ","bar","bar\");","bar::new","baz","baz\");","befor","behavior","below,","between","block.","branch","c","c++,","c32,","call","can't","care","carefulli","case","case),","case,","cast","center","center);","chapter","chapter,","chapter.","check","circl","circle,","circle.","circle::new","class","class),","class,","class.","class1.","classes.","close","code","code,","come","compar","compat","compil","compilation,","complex","compound","contain","content","context","contribut","control","correct","cours","course,","crash","d","d.","declar","def","default","demonstr","describ","destructur","destructured,","destructured.","destructuring,","didn't","differ","discret","distinguish","divid","don't","done","dure","dynam","element","enclos","enter","entered,","entered.","equal","error","error,","error:","errors:","especi","etc.)","evaluated,","even","everyth","everything1.2.","exactli","exampl","example,","except","express","expression,","expression.","expressions,","expressions.","f64)","fail","faster","fatal","field","first","first).","flow,","follow","foo","foo.","fulli","function","function,","give","guarante","hand","handling)","handling).","heir","heirs.","here,","however,","i,","i.","i32","i32)","i32,","ignored.","import","includ","included\");","inevit","inherit","inheritance).","inheritance,","inner","insid","instanc","instead","interv","introduct","java,","keyword","kind","languag","language.","later","lead","level","li","lied,","lied...\");","line","list","made","main","main.yr:(14,17)","main.yr:(2,10)","main.yr:(28,15)","main.yr:(31,45)","main.yr:(5,11)","make","manag","mandatori","mani","match","match.","matching,","matching.","matching1.1.","mean","more","moreov","mut","mutabl","name","need","new","newli","none","note","null","object","objects.","omit","ommitted.","on","order","otherwis","over","p","parenthes","part","pattern","pattern*","pattern,","pattern.","pattern1.3.1.","pattern_argu","pattern_argument)*)?","pattern_cal","pattern_express","pattern_expression)*","pattern_expression)*)?","pattern_expression)?","pattern_opt","pattern_rang","pattern_tupl","pattern_var","patterns.","patterns1.4.1.","phenomenon","place","point","point\");","point,","point.y.","point::new","point;","possibilities.","possibility),","possibl","present","previou","println","privat","program","prohibit","pub","public","put","rang","reason","rectangl","rectangle::new","ref","refer","referenc","references).","referencing.","rel","relevant.","replac","respect","rest","result.","results:","retreiv","return","rewritten","safe.","same","say,","second","section","see","seen","self","set","shape","share","simpl","simpli","someth","sourc","specif","standard","start","std::io","std::io;","store","struct","structur","structure,","structure.","structure1.4.3.","sub","succe","succeed,","succeeds.","sufficient.","surround","symbol","syntax","system,","terminated.","test","test,","test.","tested,","tested.","therefor","third","those","three","three,","throw","thu","token","tri","true\");","true,","tupl","tuple,","tuple1.4.2.","two","type","type\");","type),","type,","type.","type1.3.2.","types,","undefin","unlik","unset,","updat","us","used.","user","user.","valid,","valid.","valu","value\");","value,","value.","values,","values.","values1.3.","variabl","variable.","variable1.4.","verif","verifi","want","way","wether","whose","within","work","worri","writ","write","written","x","x).","x);","x,","x.","y","y);","y,","y.","ymir","ymir1:","z","z,","z.","{","{}","{}.","|","||","}","};","┃","┗━━━━━━","╋"],"errors/main.html":["\"/home/emile/ymir/runtime/midgard/core/exception.yr\",","\"core::exception::abort\",","#1","#2","#3","#4","#5","#6","#7","#8","#9","&(core::exception::asserterror),","&(main::childexception),","&(main::parentexception),","&asserterror","&asserterror).","&asserterror.","&exception,","&myerror","&parentexcept","()","();","(...)","(core","(e.g.","(i","(in","(necessari","//","/home/emile/documents/test/ymir/main.yr:10","/home/emile/documents/test/ymir/main.yr:7","/home/emile/ymir/runtime/midgard/core/exception.yr:84","/lib/libgyruntime.so:??","/lib/x86_64","1.","1.1.","10","12","3","5","6,","84,","9",":",">","^","^^^","^^^^^","_start","abort","account","accuracy,","actual","allow","alway","ancestor.","apart","assert","avoid","behavior","bt","call","caller","case","cast","cast,","caus","chapter","check","childexcept","childexception,","childexception::new","class","class.","close","compil","core","core::exception::abort","core::exception::asserterror.","core::exception::exception.","debug","declar","def","defin","definit","deriv","differ","directly.","down.","dumped)","dynam","error","error,","error.","error:","errors,","errors:","example),","example,","except","exception,","exception.","exceptions,","exceptions.","excpet","exit","fails.","fatal","file","follow","foo","foo.","forc","forget","function","function,","function.","functions.","g","give","gnu/libc.so.6:??","guard","handl","handling1.1.","i32)","ignor","import","imposs","inform","inherit","intend","introduc","java","keyword","kind","languag","language,","language.","languages,","line","linux","lose","loss","main","main.yr:(10,12)","main.yr:(12,5)","main.yr:(3,5)","main.yr:(5,2)","main.yr:(9,5)","main::foo","manag","mani","manners.","mode,","module,","multipl","myerror","myerror::new","name","need","note","object","object.","occur","option):","otherwis","over","parent","parentexcept","perform","possibility,","possibl","prematurely.","previous","program","program.","properli","prototyp","pub","recov","recoverable,","rel","requir","result","rethrow","rethrowing1.","say,","scope","section","seen","self","simpli","specif","specifi","stack","stated,","std::io","still","stops,","system","take","terminated.","test","thank","that,","that.","them.","throw","throwabl","throwing,","thrown","trace","true","two","type","typing.","unhandl","unsaf","unsafe,","us","user","user,","user.","way","way,","write","written","ymir","ymir1:","{","{}","}","│","┃","┗━━━━━┻━","╋","═","╕","╘═>","╞═","╭","╰"],"errors/scope_guards.html":["!!","\",","\"/home/emile/ymir/runtime/midgard/core/exception.yr\",","\"core::exception::abort\",","#1","#2","#3","#4","#5","#6","#7","#8","#9","&asserterror","'exit'","'failure'","'success'","'{'","'}'","(\"exit","(\"i","(\"scope","(\"success","(\"success\");","(';')?","('catch'","((';')?","()","(...)","(block","(core","(e.g.","(guard","(i","(noth","/home/emile/documents/test/ymir/main.yr:12","/home/emile/documents/test/ymir/main.yr:8","/home/emile/ymir/runtime/midgard/core/exception.yr:84","/lib/libgyruntime.so:??","/lib/x86_64","1","1\");","1)","1.","1.1.","1.2.","1.3.","1.4.","2","2\");","2)","20","3)","84,",":",":=","_start","abort","acknolegement,","alway","assert","associ","attach","avoid","between","bt","case","case,","catch","catch.","catching_expression)?","chapter","chapter.","close","code","code),","combin","contain","continu","core::exception::abort","core::exception::asserterror.","coupl","def","defined,","didn't","differ","discuss","do","done","dumped)","end","error","error,","error.","error...","etc.).","event","except","exceptions,","execpt","execut","executed,","executed.","exit","exit,","exited,","express","expression)*","expression,","expressions,","failur","failure,","file","first.","follow","following:","foo","four","function","gnu/libc.so.6:??","goal","guarante","guard","guard,","guard1.2.","guard1.3.","guard1.4.","guarded.","guarded_scop","guards),","guards,","guards.","guards1.1.","happen","i);","i32)","import","indeed,","journey,","know","line","linux","log","logs,","main","main::foo","matter","mean","multipl","mutex,","natur","never","next","not,","noth","occur","oper","operation\");","operations,","opposit","order","perform","possibl","println","prioriti","priority1.","realli","recov","repetition.","results:","same","scope","scope).","scope,","scope.","seen","send","shortcut","simpli","socket,","specif","stack","std::io;","succed","succeded.","success","syntax","throw","thrown","time.","trace","trigger","two","type","unhandl","unlock","us","well","without","writ","written.","{","|","}","│","═","╕","╘═>","╞═","╭","╰"],"errors/catching.html":["\",","#1","#2","#3","#4","#5","#6","#7","#8","&(core::array::outofarray)","&asserterror","&asserterror,","&asserterror.","&outofarray","&outofarray).","&outofarray,","&outofarray.","'","'('","')'","':'","'_'","'_')","'exit'","'failure'","'success'","'{'","'}'","(","(\"after","(\"assert\");","(\"befor","(\"exit\");","(\"fails\");","(\"foo","(\"out\");","(\"succ\");","(','","(';')?","('='","('catch'","((';')?","()","(...)","(10)","([]);","(bi","(for","(guard","(i","(i[0]","(identifi","(mani","(pattern_argu","(success,","(type","(use","(valu","(y);",".","/home/emile/documents/test/ymir/main.yr:10","/home/emile/documents/test/ymir/main.yr:14","/home/emile/documents/test/ymir/main.yr:7","/home/emile/ymir/runtime/midgard/core/exception.yr:49","/home/emile/ymir/runtime/midgard/core/exception.yr:84","/lib/libgyruntime.so:??","/lib/x86_64","1)","1.","1.1.","1.2.","1.3.","1.4.","1.5.","10):","11","13","14","19).","2)","21","3)","42",":",":=","=","=>",">",">')?","[0]","[i32])","^","^^^^^","_","_start","access","all.","along","anoth","assert","because,","befor","behavior","block","block,","branch","bt","call","case","case,","cases),","catch","catch,","catch.","catching_express","catching_expression)?","caught","caught.","chang","chapter","circumstance,","class.","close","code","code,","comparison","compil","compiler),","comput","conditionaly,","consid","constructor","content","continu","core::exception::abort","core::exception::asserterror","core::exception::asserterror::self","correct,","creat","debug","declar","def","default","defin","defined.","depend","differ","effici","empti","empty\");","end","entered.","err","err);","error","error.","error:","errors:","everyth","everything1.2.","exactli","example,","except","exception,","exception.","exception1.3.","exceptions1.1.","exceptions1.4.","execut","executed,","exit","exit),","exit.","express","expression)*","expression,","fail","failed\");","failed,","failur","failure,","fatal","follow","following:","foo","foo\");","function","function,","function.","g","gnu/libc.so.6:??","grammar","guarantee,","guard","guard,","guard.","guarded.","guarded_scop","guards,","guards1.","happen","i32","i32)","idea","import","indeed,","initi","initialized,","insid","kind","line","linux","list","lower","main","main.yr:(13,7)","main.yr:(14,4)","main::foo","manag","match","matching,","matching.","matter","mode","mode.","much","multipl","name","next","normaly,","note","noth","occur","on","one,","option","order","out","outofarray","over","pattern","pattern_argu","pattern_argument)*)?","pattern_cal","pattern_express","pattern_expression)?","pattern_var","patterns,","per","possibl","present","previou","print","printed,","println","prioriti","program","program.","prototype.","reasons)","recov","rel","releas","remov","results:","rethrow","rethrown","return","safe,","same","scope","scope,","set","set,","share","slice","sourc","specif","stack","state.","std::io;","still","succeeds.","success","syntax","terminated.","that,","those","throw","thrown","thu","token).","trace","tri","two","type","type.","us","usabl","used.","valu","value.","value1.5.","variabl","well","x","x;","y","y.","ymir,","ymir1:","{","|","}","│","┃","┗━━━━━┻━","╋","═","╕","╘═>","╞═","╭","╰"],"errors/option.html":["\",","&asserterror","(\"empti","(\"foo","(\"total","(\"x","()","(err","(i","(i.e.","(i32)?,","(i32?)::__err__","(in","(never","1.","1.1.","1.2.","10)",":","=>",">","?","_)","__err__","__err__\");","above.","accuraci","ad","add","afterward","assert","attribut","basic","between","call","case","case,","catch","chapter","check","close","compil","concept,","contain","content","contribut","core::exception::asserterror","creat","def","definit","differ","don't","done","empti","empty,","enclos","err","err).","err);","err.","error","errors.","even","even,","example,","except","exception).","exception.","exception1.2.","exceptions.","execut","extrem","fail","failed,","follow","foo","function","function,","get.","good","handl","i32","i32)","i32.","i32?","idea.","import","indeed,","init","initi","insid","intern","it,","keyword","know","languag","limitation,","lost","lower","main","match","matching,","mayb","mean","mode)","named),","new","not.","note","ok","ok),","ok,","on","option","optionaly,","order","pattern","possibl","possible.","present","presented.","previou","primit","println","program","realli","relat","releas","remov","result","results:","retreiv","safe.","scope","seen","specif","std::io;","store","succeed","succeeded\");","throw","thrown","time,","time.","token","total","transform","two","type","type,","type.","type1.","type1.1.","unfortunately,","us","useful","valu","value,","value.","variabl","verbose.","verifi","void","void,","warn","wether","without","write","written","x","y);","ymir","{","}"],"errors/fptr_closure.html":["&(core::exception::asserterror)","&asserterror","(&)","()","(10);","(and","(cf.","(for","(i","1.","1.1.","10","10))","3","5","6",":","=","=>",">","^","accept","allow","ampersand","annoy","anoth","assert","avoid","caught","closur","closure1.1.","compil","compiler.","contribut","core","creat","def","defin","definit","delegate.","err(core::exception::asserterror","error","error:","errors:","exampl","example).","except","exception,","exceptions.","fatal","follow","foo","function","function.","function1.","funtion","guarante","i32)","i32|","import","imposs","includ","indeed,","insid","introduc","keep","lambda","languag","lower","main","main.yr:(10,6)","main.yr:(5,13)","main.yr:(6,9)","method","modules,","name","note","ok()","operator.","option","order","pointer","pointer,","possibl","problem,","reason),","reason,","results:","rethrowing.","return","safe","safe,","safeti","sometim","std::io;","symbol","symbol,","templat","templates,","terminated.","that,","throw","tooption","transform","type","unari","unsaf","us","useful","value.","verbosity,","void","x","ymir","ymir1:","{","|i","┃","╋"],"templates/":["!!","!!\");","!,","\"","\"\");","\"foo\");","'!'","'r');","'{'","'}'","(\"hi","(\"t=\",","(','","('r');","()","();","(1,","(12)","(12);","(3.14);","(42).foo","(42);","([1,","(a","(a);","(a::typeinfo.name);","(b::typeinfo.name);","(cf.","(express","(here","(i.e.","(i32)","(i32,","(in","(self,","(single_arg","(thi","(u","(v","(x","(x::typeinfo.name);","(y","//","1","1.","1.1.","1.2.","1.2.1.","1.2.2.","1.2.3.","10","10,","2],","3","42","6","8",":","::",":=","=",">","[c32]","[u],","^","a).","a,","a=\",","a=3.140000","abov","accept","aka","allow","alway","ambiguity.","anyth","applic","argument","argument,","arguments,","arguments.","asid","associ","avoid","b","behavior","between","block","bracket","brackets.","briefli","c32).","call","call,","call.","candid","case","case,","case.","cast!t","chapter","chapter,","chapter.","choos","class","classes,","code","code,","compil","compilation.","compiler,","condit","constructor","constructors.","contribut","convention,","correctli","creat","curli","declar","declared,","def","defin","defined).","defined,","defined.","definit","determin","done","done,","earlier","element","enclos","enum","enumer","enumeration,","error","error,","error.","error:","even","everyth","exactli","exampl","example,","example.","explicitly.","express","expression,","f","f32)","f64","f64.","f64}","fail","fatal","fields,","first","follow","foo","foo!(i32,","foo![i32]","foo!foo!i32","foo!i32","foo!{foo!i32}","foo!{i32,","foo.","fulli","function","function,","function.","functions),","functions.","gener","happen","hi","high","higher","however,","i32","i32)","i32,","i32.","identifi","import","infer","inner","insid","instanci","instanciation.","instanciation1.","instanciation1.2.2.","it,","kind","known","language,","language.","later,","level","librari","line","littl","local","made","main","main.yr:(3,13)","main.yr:(3,5)","main.yr:(8,10)","main::x([i32],[c32])::x","main::x(i32,c32)::x","make","mandatori","mandatory).","mandatory.","mani","minim","mod","modul","module.","modules,","multipl","multiple_arg","multiple_args)","name","name,","necessari","need","next","normal","note","noth","observ","ok","on","oper","operator,","operator.","operators.","order","otherwis","paramet","parameter,","parameters,","parameters.","parameters1.2.3.","parenthes","part","pass","possibl","possible,","power","powerful,","present","presented.","previou","println","prioriti","priority.","produc","provid","pub","purpose,","put","refer","restrict","results:","reus","reversed,","rule","s","same","same.","section","see","seen","self","set","single_arg","slice","sometim","sourc","special","specialization.","specifi","standard","std::io;","struct","structur","suffici","sufficient.","symbol","symbol,","symbol.","symbols.","syntax","syntax,","syntax.","syntax1.2.","syntax1.2.1.","system","system,","t","t)","t,","t.","t::typeid,","t;","t=[i32]","t=i32","t=i32,","take","templat","template,","template.","template_cal","template_call)","template_call))*)?","templates.","templates1.1.","terminated.","though.","throw","thu","thus,","time","time,","token","trait","traits,","tupl","two","type","type,","type.","types.","t}","u","u)","u,","u.","u::typeid);","u::typeid,","u;","u=\",","u=f64","u=f64.","u=i32","unari","understand","uniform","unresolv","upper","us","used.","u}","v","valid","validation,","validation.","valu","variou","veri","void","way","without","writ","written","x","x!(i32)::new","x,","x::new","y","ymir","ymir1:","z","{","{f64}","{t","{t,","{t}","{t}(a","{t};","{u,","{}","|","}","┃","┗━━━━━━","┗━━━━━┻━","╋"],"templates/special.html":["!","!\");","\"","\"\");","\"(\",","\")\");","\");","\",","\"test\",","&(x!{u}),","&b","'...'","'class'","'of'","'r'c8);","'struct'","(\"(\",","(\"class","(\"first","(\"fst","(\"not","(\"scd","(\"second","(\"slice","(\"struct","(\"test\");","(\"third","(&a","(&foo);","((i32,","((t,))","()","(),","();","()]);","(1,","(12,","(23.0f);","([1,","([a::new","([b::new","(_","(a","(a));","(a);","(a.0,","(b));","(b);","(c);","(cf.","(e.g.","(expand","(foo","(i32,","(self)","(t)","(t::typeid,","(x","*","*/","....","...}","/**","1","1.","1.1.","1.2.","1.3.","1.4.","1.4.1.","11","112345","12","12,","14","15","2,","21,","24]","2]).","2]);","3","3,","3.140000)","3.14f);","3.f,","3]);","4,","44.","5","5);","6","6,","8",":",":=","=",">","?\");","??\");","[&(main::a)]","[&(main::b)]","[12,","[c32](test)","[i32]","[main::a(),","[main::b()]","[mut","[u],","[u]}","[u]}(a","[u]}.","[z],","^","_x","a).","a);","a,","a.","a.get","a::new","abov","accept","anoth","anyth","appli","arbitrari","arguments.","array,","b","b);","b::new","best","better","between","block","c","c8","c8(r)","call","callable,","called.","candid","case","case,","chained,","chapter","chapter,","class","class,","class_filt","classes,","code","code,","compil","compiler.","complet","compos","contain","declar","def","defin","defined,","definit","describ","destructur","differ","directli","distinct","done","done,","element","end","equal","error","error:","errors:","etc.","etc.).","even","exampl","example,","expand","express","f)","f,","f32(3.000000)","f32)","f32))","f32),","f32}","f::typeid,","fail","fatal","field","filter","filter.","filter1.2.","filter1.4.","filters.","filters1.3.","first","fit","fn","follow","foo","foo!(&a)","foo!(x)","foo.","forc","form","found","fst","function","function,","function.","gener","getter","getter!{[i32]}","getter!{i32}","getter!{x},","getter,","getter.","getter}","give","given","given.","guess","here","here,","i32","i32(1)","i32).","i32,","i32;","i32]}","i32}","identifi","identifier.","impl","impl_filt","implement","import","important,","imposs","indeed,","inform","inheritance,","insid","instanci","interest","intern","introduct","itself.","keyword","kind","known","languag","last","leaf","less","line","long","lose","main","main.yr:(3,16)","main.yr:(3,5)","main.yr:(6,6)","main::a()]","main::x([c32])::x","main::x([i32])::x","main::x(f32)::x","make","match","mean","method","more","name","not.","note","noth","nothing.","now,","number","object","object,","objects,","objects.","of.","of_filt","offer","on","one,","ones.","oper","operation.","order","over","paramet","parameter,","parameter.","parameters),","parameters,","parameters.","particular.","pattern","pattern.","perfom","perform","pointer","possible,","present","print","println","pub","r)","r...}","recurs","refer","respecitv","rest","restrict","result","results:","return","root","roots,","same","scd","score.","second","seen","self","set","slice","slice,","slice.","sometimes,","somewhere,","somewhere.","sourc","special","specialization1.1.","specif","specifi","specific,","standard","std::io","std::io;","streamable;","struct","struct_filt","structur","structures,","symbol","symbol,","symbol.","syntax","t","t)","t;","t=i32.","take","templat","template,","template.","template1.","template_paramet","templates,","templates1.4.1.","terminated.","that,","them.","third","those","thu","time","token","trait","trait.","traits),","tree.","tupl","tuple,","two","type","type,","type.","types,","types.","t}","u","u,","u.","undefin","under","unlik","us","usable,","used.","useful","u}","variad","variadic_filt","void","void,","void.","warn","without","written,","x","x!{i32,","x,","x.","x.foo","x::new","x::typeinfo.name);","x;","x}","y","y,","ymir","ymir1:","z","z,","z.","z}","{","{class","{f,","{f}","{mut","{struct","{t","{t...};","{t}","{}","|","}","┃","┗━━━━━┻━","╋"],"templates/cte.html":["!","!\"","!\");","!\"}","!)","!,","\"","\"(\",","\")\");","\",","\"i'm","':'","(\"1\");","(\"2\");","(\"3\");","(\"foo","(\"go","(\"got","(\"ye","('='","()","();","()}","(11,","(6,","([1,","([c8]","(a","(a);","(a,","(and","(array);","(c8","(cf.","(contain","(even","(exactli","(i));","(identifi","(n);","(sign","(sourc","(t::typeid,","(that","(the","(x)","(x,","(z);","*","+","...","0","0,","0]","1","1.","1.1.","1.2.","1.2.1.","1.2.2.","1.2.3.","1.3.","10","10u64];","11","12","12i64}","13","13,","14","14,","15","1}","2","2,","2}","3","3,","30","300","300.","31);","3]);","4","42","42.","42;","5","6","7","7);","8","8.","9",":",":,",":=","=","=>",">","[0,","[0;","[c32]","[c32](hi","[c32])","[t;","[x])","^","^^^","_y3std2io11printlnni327printlnfi32zv","accept","accepted.","achiev","add","alreadi","altern","anyth","appli","array","array)","arrays,","avoid","b","b));","bar","basically,","baz","behavior","better","bit","block","branch","branching.","c","c32)","call","call.","case","cast!i64","chang","chapter","char","close","closure,","code","code,","compil","compilation,","compilation.","comput","constants,","contain","content","contribution:","countdown","creat","cte","deal","decis","declaration,","def","defin","definit","delegates.","describ","differ","different.","directli","directly.","dure","dynam","effect","effici","element","ensur","error","error:","errors,","evalu","even","evid","exampl","example,","execut","executable,","executable.","exhaust","f","fatal","fdump","file.","files,","filter).","final","first","float","fn","follow","foo","foo!\"hi","foo!0","foo!1","foo!12","foo!2","foo!300","foo!42","foo!bar","foo!{\"hi","foo!{5","foo!{n","foo!{|x,","foo!{|x|","foo.","forc","forthcom","foundabl","frontend","function","function,","function.","gain).","gave","gcc","gener","gimpl","give","go","happened,","here","hi","however,","i'm","i32","i32(42)","i32)","i32,","i32}","identifi","identifiers,","impli","import","imposs","indeed,","infer","infinit","inform","insid","int","integ","introduc","keyword","knowable,","known","knwon","lambda","language).","limit","limitation:","line","liter","literal)?","literal1.2.2.","long","loops,","made","made,","main","main.yr:(13,5)","main.yr:(3,5)","main.yr:(5,5)","make","mandatory,","margin","method","more","n","n);","n,","n],","necessari","note","omit","on","on.","oper","optim","option","overload","overloading).","paramet","parameter,","parameter.","parameter1.2.1.","parameters).","parameters,","parameters.","part","pass","pointer","pointer,","pointers,","pointers1.","possibilti","possibl","present","previou","println","program","reach","real","reason,","recurs","result","results:","return","root","same","save","second","section).","see","seem","seen","short.","show","sign","simpl","size","size.","slice","slice),","slice,","sourc","special","specialization.","standard","static","std::io","std::io;","stop,","string","strings.","struct","such","syntax","system","t,","t::typeid,","take","takes.","talk","templat","template.","template_valu","terminated.","that'","those","three","thu","time","time,","time.","token","tree","true","tuple,","two","type","type)","types.","t}","undefin","unknown","unlik","unsigned)","us","used.","usize}","utterli","v","valu","values,","values.","values1.1.","values1.2.","variabl","variable,","variable.","variable1.2.3.","variable1.3.","variables.","veri","verifi","verification.","void)","ways.","well,","work","write","written","x","x)","x,","x}","y,","ye","ymir","ymir,","ymir1:","y|","y}","z","z;","{","{\"hi","{0}","{1}","{299}","{2}","{300}","{3}","{array","{f","{n","|","}","~","┃","┗━━━━━┻━","╋"],"templates/values.html":["\",","'!'","'is'","'{'","'}'","(\"accept","(\"first","(\"i","(\"second","(','","()","())","();","(12)","(12);","(12i64);","(34u64);","(a","(a);","(def","(for","(is!t","(is!u","(is!{x}{t","(isfloating!{t}","(isintegral!{t}","(not","(self,","(sign","(single_arg","(template_paramet","(that","(v","(x","(x);","...","...\");","1","1.","1.1.","1.2.","1.3.","1.4.","10","10.","12","2","25","3","38","4us]","7.",":",":=",";","=",">","[u;","[u],","^","^^","accept","accepted,","ad","add","aka","alway","anything.","appli","applic","arguments.","array","array\");","avoid","befor","behavior","block.","bool","both","branch","c32","c8","call","call,","candid","case","cast!t","chained,","chapter,","check","checked.","class","classes,","code","code.","common","compil","compilation.","compiler,","compiler.","complex","condit","condition.","condition1.2.","confus","consider","creat","cte","decid","declar","def","default","defin","definit","definition1.4.","depend","differ","don't","done","due","dure","each","else),","enum","error","error,","error.","error:","errors:","etc.),","evalu","even","exampl","example,","execut","express","expression,","expression.","expression1.3.","extrem","f","f32","f64","f64})","fail","fatal","first","float","follow","foo","foo![i32","foo![i32]","foo!f32","foo!i32","foo!u64","foo!{14}","foo!{2}","foo!{38}","function","function,","further","give","i32","i32\");","i32)","i32,","i32}","i32})","i64","i64).","i64})","identifi","import","infered,","inform","inner","integr","is!{x}","is!{x}{t","is_express","ischar","isfloat","isintegr","issign","istupl","isunsign","keyword","kind","know","known","librari","line","long,","lower","main","main.yr:(10,6)","main.yr:(12,6)","main.yr:(3,26)","main.yr:(3,47)","main.yr:(7,5)","main::foo(i32)::foo","mod","modul","more","multiple_args)","n","n],","normal","not,","note","oper","operations.","otherwis","paramet","parameter,","parameters,","part","pass","pointers)","present","previou","println","provid","pub","reason,","repeat","result","results:","return","revers","s","same","saw","scope","score","second","self","sens","sign","similar","simpl","slice","slice\");","sourc","special","specialization,","standard","static","std::io,","std::io;","std::trait","std::traits;","struct","symbol","symbol.","syntax","t","t)","t;","templat","template_parameter)*)?","term","terminated.","test","test.","tests1.","thank","throw","time","time,","time.","trait","true","tupl","type","type\");","types,","t})","u)","u,","u64","u64}","unlik","unsign","unsigned)","us","used.","usize}","u}","v","valu","value.","values1.1.","void","void,","void}","without","work","x","x)","x);","x.","ymir","ymir1:","z","{","{foo","{i32}","{j","{t","{t}","{t};","{u","{u64}","{u}","{x","{x}","{x}(x","{}","|","||","}","┃","┗━━━━━━","┗━━━━━┻━","╋"],"objects/common_traits.html":["(automat","1.","chapter","common","core","defin","file","import","important.","modules),","present","std.","trait","traits,","traits1.","ymir"],"traits/streamable.html":["\",","\"foo\";","&stringstream)","&stringstream.","(\"\\n\"s8)","(\"hello","(\"{i","()","();","(a);","(alia","(b)","(b);","(privat","(self,","(stream","(without","//","1.","1.1.","1.2.","12;","42","42);",":",":.write",":.writeln","=",">","[]);","[],","[c8]","[c8],","_i","_j","a.tostream","access","ad","avoid","b","bar","bar::new","bar}","bar}\"s8);","behavior","behavior,","call","class","class,","concatenation.","consist","contain","copi","def","default","dmut","does.","effici","everyth","example,","field","first","follow","foo","foo)","foo::new","function,","functions.","get","grow","hand","hello","impl","implement","import","included)","insid","instead","io","it).","main","main::foo(12,","manner,","method","modul","object","oper","originali","over","print","printable,","println","protect","provid","pub","public","put","redefin","results:","return","self","slice","standard","std::io,","std::io;","std::stream","stdout","stdout.","stdout1.2.","stream","stream);","stream.","stream:.writ","streamabl","streamable,","streamable1.1.","streamable;","string","string,","stringstream","stringstream,","stringstream.","stringstream1.","stringstream::new","tostream","trait","trait,","transform","two","type","typeid","uneffici","us","void","writ","write","{","{i","{}","}"],"traits/copiable.html":["\"i","&(foo)","(\"i","()","())","();","(a);","(a.deepcopi","(b);","(defin","(self)","(type","//",":","=",">","[c8])","[c8];","_type","a;","alia","b","behavior","class","class.","complet","contribution:","convini","copiabl","copy\"s8)","copy)","core","dcopi","debug","deepcopi","deepli","def","default","defin","dmut","even","file,","foo","foo::new","immut","impl","import","imported).","instance,","main","main::foo(i","method","moment","mutabl","need","object","one.","oper","original\"s8","original)","over","overrid","possible.","println","prot","pub","results:","return","same","self","std::io;","streamable;","take","thu","trait","trait,","type","us","{","{}","}"],"traits/disposable.html":["(\"after","(\"i","()","(a);","(file,","(mut","(or","(warn","...).","1.",":","=","a\");","alreadi","avoid","behavior","briefli","call","class","class.","collector","commonli","coupl","def","default","defin","destroy","destructor","destructor).","destructor,","dispos","disposable1.","disposed\");","disposed,","dmut","e.g.","end","ensur","even","exited,","first","foo","foo::new","garbag","good","guard","guard.","hand,","hand.","happend","impl","import","insid","instance.","life","list","main","main::foo()","matter","memori","method","multipl","mutex,","object","oper","over","perform","practic","println","pub","result","scope","scope.","self","self)","shoud","statement,","std::io;","streamable;","tcpstream,","trait","trait.","twice","unlik","unmanag","us","variabl","variable),","verifi","way,","word,","{","{}","}"],"traits/hashable.html":["(\"x\"s8)","(\"x\"s8),","(\"y\"s8),","()","();","(coll);","(foo::new","(import","(v","1.","12);","34);",":","=","[c8])","[c8];","_v","behavior","class","coll","coll);","coll:.insert","collect","compar","def","default","defin","dmut","easili","exampl","foo","hash","hashabl","hashable,","hashable1.","hashmap!{&foo,","i32}::new","immut","impl","import","instanc","interest","key.","main","main::foo(y)=>34}","method","object","objects,","parameter,","println","pub","redefined,","results:","return","self","std::collection::map::hashmap,","std::collection::map;","std::collection::set::hashset.","std::hash)","std::hash;","std::io;","streamable;","take","trait","trait,","transform","true","u64","u64.","us","v","value.","{","{main::foo(x)=>12,","{}","}"],"traits/serialize.html":["\"test\"","\"test2\"","$","&config","&foo","(\"test\",","(\"test\"s8);","(\"test2\",","(\"the","(\"u\",","(\"unkown","(\"v\",","()","()));","());","();","(contribut","(current","(exampl","(foo::new","(import","(packet)","(packet);","(self)","(the","(toml::dump","(v","(x);","(x.to!(&config)","**main",".data",".text","0,","0000000000000010","0000000000000024","0000000000000030","0000000000000054","000000000000006e","0000000000000093","00000000000000e7","00000000000004a0","000000000040eb82","000000000040f381","000000000040f468","0000000000410585","0000000000410a25","00000000004472c0","00000000004472f0","0000000000447300","0000000000447340","1.","1.1.","12","12),","33,","34","34));","34,","4,","46,","54,","61,","65,","69,","6d,","6e,","6f,","73,","74]",":","=","=>",">","[9,","[a]","[b]","[c32],","[c32];","[c8])","[c8];","[u8],","_","_u","_v","_y133foo3foo_namecstxsc32","_y183foo3foo_nameinnercstxa9c32","_y3foo3foo4selffxp9x3foo3foosc8zxp9x3foo3foo","_y3foo3footi","_y3foo3foovt","_y3std3net6packet8packable25__stdnetwork__packcontentfp83foo3fooxp32x3std10collection3vec6vecnu83veczv","_y3std3net6packet8packable27__stdnetwork__unpackcontentfxp9x3foo3foosu8zus","_y3std3net6packet8packable4packfp83foo3fooxp32x3std10collection3vec6vecnu83veczv","_y3std3net6packet8packable4packfp83foo3foozsu8","a.out","a.pack","access","accessible,","account","anoth","appropri","avail","b","bad","bar","bar;","base","behavior","call","case,","catch","class","class,","closur","closure.","command","command,","compil","configur","contain","contribution:","creat","d","d:.insert","def","default","defin","dict::new","difficult","dmut","doing.","don't","done","done,","easili","encod","errors,","exactli","exampl","example).","example,","executable,","f","fields).","file","follow","foo","foo,","foo.yr","foo::foo","foo::new","function","futur","g","grep","gyc","hand,","however,","human","i32)","i32;","immut","impl","implement","import","info","inform","information\");","insid","instanc","instance,","it.","json","know","line","link","made","main","main.yr","main::foo(test)","make","mandatori","match","matching.","method","methods,","modul","module.","name","necessarili","network,","o","objdump","object","object,","object.","otherwise,","over","overrid","pack","packabl","packable,","packable.","packable1.1.","packable;","packed.","packet","packet\");","paramet","pattern","pointer","pointer.","possibl","present","present).","present,","previou","println","probabl","problem,","processes.","program,","program.","properly,","pub","readable,","recommend","resolved;","result","results:","return","run","runtime.","see","self","self._u.to!(&config)","self._v.to!(&config)","sent","sent.","serial","serializ","serializable1.","serialization).","serialize.","simul","someth","std","std.","std::config,","std::config::conv;","std::config::toml;","std::io;","std::net::packet)","std::net::packet;","stored,","strong","struct","structur","successfulli","surpris","symbol","t","take","taken","them,","think","those","three","throw","thrown.","time","toml","trait","trait,","transform","tri","two","type","type.","u","unknwon","unless","unlik","unpack","unpack.","unpackerror","us","u{","v","v,","value.","verifi","version","vtabl","vtable,","w","warn","way","work","x","{","{}","|","}"],"templates/operators.html":["!(a","!=","!=.","!=1.3.2.","!e","!in","\"!\")","\")","\")\");","%","&","&&","(","(!a);","(\"","(\"+\")","(\"a(\",","()","());","(1,","(1.f","(12);","(2","(2,","(30","(42.0f);","(7","(8","(8);","(9","([1,","(a","(a)","(a.opunary!(\"!\")","(b)","(b,","(i","(mi.i);","(op","(self)","(self,","(self.a","(self.a);","(self.i","(x","*","*=","*e","+","+=","+=,",",","/","//","0","0.","1","1.","1.1.","1.2.","1.3.","1.3.1.","1.3.2.","1.4.","1.5.","1.6.","2","2);","2,","3)","3);","3]);","9;",":","=","=,","=1.4.","==",">",">,",">=",">>",">`","[2]","[]","[b,","[c32])","[i32])","[i32];","[x]","^","^^","^^^","`&`","`~`","a)","a);","a.opcmp","a.opindex","a::new","access","alway","anoth","appli","array","assert","asserterror","assign","assignment1.5.","b","b),","b).","b);","b,","b.opcmp","binari","bitwis","bool","both","brackets.","c","c);","c,","call","case,","case.","check","choos","class","column","common","commutative,","compar","comparison","comparison.","compil","compile,","consistent.","contain","correct","correspond","cours","d).","d]","def","defin","define.","defined,","definit","differ","done","e","e.opunary!(\"","e.opunary!(\"!\")","e.opunary!(\"*\")","element","element.","ensur","equal","equality,","etc,","exactli","exampl","example,","express","f32)","f32;","fails,","fals","first","first,","follow","follows:","form","function","function.","gener","however,","i);","i32","i32)","i32,","i32;","impl","impli","import","imposs","in.","indeed,","index","indic","insid","instead.","integ","j","j)","keyword","left","made","main","math","meaning","method","mi","mi);","mut","mutabl","myint","myint::new","new","object","object,","object.","objects.","on","onc","one.","only.","opbinari","opbinaryright","opbinaryright.","opcmp","opcmp.","opcontain","opcontains.","opequ","oper","operand,","operands.","operation.","operator,","operator.","operator1.","operator1.2.","operator1.3.","operator1.6.","operators,","operators.","operators1.3.1.","opindex","opindex.","opunari","order","other.i","other.x","outofarray","outofarray,","oveload","over","overload","overloadable,","overloadable.","overloading.","overloading1.1.","paramet","pass","perform","point","point)","point::new","present","print","println","pub","purposes.","remov","return","reversely.","rewrit","rewritt","rewritten","rewritten.","right","same","second","self","self.a","self.a)","self.a,","self.i","self.x","set","shortcut","sign","simpli","stand","std::io","std::io::print","std::io;","strict","subset","suppos","syntax","tabl","templat","test","tested.","therefor","therefore,","those","throw","time","treat","tri","tried.","true,","true;","two","type","type,","unari","unlik","up","us","usabl","used,","user","values,","verifi","via","want","x","x,","y","y.","{","{}","|","}","~"]},"length":44},"tokenStore":{"root":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"1":{"0":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"docs":{}},"2":{"4":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"docs":{}},"3":{"0":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}}},"docs":{}},"5":{"4":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"docs":{}},"6":{"docs":{},"e":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"9":{"3":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"docs":{}},"docs":{},"e":{"7":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"docs":{}}},"4":{"docs":{},"a":{"0":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"4":{"0":{"docs":{},"e":{"docs":{},"b":{"8":{"2":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"docs":{}},"docs":{}}},"f":{"3":{"8":{"1":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"docs":{}},"docs":{}},"4":{"6":{"8":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"docs":{}},"docs":{}},"docs":{}}},"1":{"0":{"5":{"8":{"5":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"docs":{}},"docs":{}},"docs":{},"a":{"2":{"5":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"docs":{}},"docs":{}}},"docs":{}},"4":{"7":{"2":{"docs":{},"c":{"0":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"docs":{}},"f":{"0":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"docs":{}}},"3":{"0":{"0":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"docs":{}},"4":{"0":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.005256241787122208},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.009569377990430622},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0057670126874279125}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"objects/class.html":{"ref":"objects/class.html","tf":0.003872216844143272},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0021119324181626186},"functions/":{"ref":"functions/","tf":0.001509813789632612}}},"u":{"docs":{},"s":{"docs":{},")":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"x":{"8":{"9":{"7":{"docs":{},"a":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"docs":{}},"docs":{}},"docs":{}},")":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}},",":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/cte.html":{"ref":"templates/cte.html","tf":0.00554016620498615},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.02702702702702703}}},".":{"0":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},"]":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"1":{"0":{"0":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"pattern/":{"ref":"pattern/","tf":0.0011001100110011}},")":{"docs":{},"]":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"u":{"6":{"4":{"docs":{},"]":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"docs":{}},"docs":{}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}}}}},"2":{"2":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},"3":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},"4":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},"5":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},"6":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},"docs":{}},"9":{"4":{"7":{"1":{"3":{"3":{"4":{"4":{"docs":{},")":{"docs":{},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":0.009198423127463863},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"pattern/":{"ref":"pattern/","tf":0.0038503850385038503},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"1":{"0":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"1":{"0":{"docs":{},"^":{"docs":{},"{":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"\\":{"docs":{},"_":{"1":{"0":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"}":{"1":{"0":{"docs":{},"​":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"1":{"0":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"​":{"docs":{},"​":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}},"docs":{}},"docs":{}}}}}}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"docs":{}}}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}},"i":{"docs":{},"n":{"docs":{},"_":{"1":{"0":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"1":{"0":{"docs":{},"^":{"docs":{},"{":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"\\":{"docs":{},"_":{"1":{"0":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"}":{"1":{"0":{"docs":{},"​":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"1":{"0":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"​":{"docs":{},"​":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}},"docs":{}},"docs":{}}}}}}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"docs":{}}}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}},"u":{"3":{"2":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},"docs":{}},"6":{"4":{"docs":{},"]":{"docs":{},";":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},"docs":{}},"docs":{}},")":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825}},":":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},")":{"docs":{"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}}}},",":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}},"1":{"2":{"3":{"4":{"5":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.003942181340341655},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"types/enum.html":{"ref":"types/enum.html","tf":0.004287245444801715},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},")":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}},"u":{"3":{"2":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},"docs":{}},"docs":{}},";":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"2":{"3":{"docs":{},";":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}},"7":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},")":{"docs":{},";":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}},"8":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714},"objects/class.html":{"ref":"objects/class.html","tf":0.003872216844143272},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},";":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0061823802163833074},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"functions/":{"ref":"functions/","tf":0.001509813789632612},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931}}},"]":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},")":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}},")":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}},";":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},".":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"f":{"docs":{},")":{"docs":{},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182}}}}}},"docs":{}},"u":{"3":{"2":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},"docs":{}},"docs":{}},"i":{"6":{"4":{"docs":{},"}":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"docs":{}},"docs":{}}},"3":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002770083102493075}},"u":{"3":{"2":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},"docs":{}},"docs":{}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"4":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"u":{"3":{"2":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},"docs":{}},"docs":{}}},"5":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"6":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0052173913043478265}},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175}}}},"7":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/best.html":{"ref":"advanced/best.html","tf":0.007537688442211055},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027}},",":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}},"8":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"functions/":{"ref":"functions/","tf":0.001509813789632612}}},"9":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"?":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},")":{"docs":{},".":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}},"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/types.html":{"ref":"primitives/types.html","tf":0.002714230321830167},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.003993154592127781},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.0049504950495049506},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0071633237822349575},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},".":{"0":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"f":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"2":{"docs":{},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}},"3":{"docs":{},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"2":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"3":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"4":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},"5":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"modules/":{"ref":"modules/","tf":0.0009000900090009},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"2":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"3":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"4":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"5":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"4":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"2":{"docs":{},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"3":{"docs":{},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"5":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"2":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"6":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"7":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"docs":{"./":{"ref":"./","tf":0.002320185614849188},"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/":{"ref":"primitives/","tf":0.043478260869565216},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/":{"ref":"types/","tf":0.047619047619047616},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"objects/common_traits.html":{"ref":"objects/common_traits.html","tf":0.05263157894736842},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},":":{"1":{"docs":{},".":{"1":{"docs":{},".":{"4":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}},"docs":{}}},"2":{"docs":{},".":{"0":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"4":{"docs":{},".":{"2":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}},"docs":{}}},"docs":{}}},"docs":{}},")":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"modules/":{"ref":"modules/","tf":0.0036003600360036},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}}}},";":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"functions/":{"ref":"functions/","tf":0.001509813789632612},"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502}}},"}":{"2":{"docs":{},"​":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"−":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"docs":{}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"−":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"docs":{}}}}}}}}}}},"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.00554016620498615}}},"]":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}},"'":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}},"b":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}},"u":{"3":{"2":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},"docs":{}},"docs":{}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0022002200220022},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827}}}}}},"2":{"0":{"1":{"8":{"docs":{"./":{"ref":"./","tf":0.004640371229698376}}},"9":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}},"docs":{}},"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974}},")":{"docs":{},")":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}},"1":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"3":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}},")":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182}}},".":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},"4":{"docs":{},"]":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}}},"5":{"5":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},")":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}},";":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},",":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}},"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}},"8":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"pattern/":{"ref":"pattern/","tf":0.0011001100110011}},",":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},"9":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}},"2":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}},"3":{"docs":{},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}},"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}},"2":{"1":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}},"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}},"9":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}},"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104}}},":":{"5":{"docs":{},".":{"0":{"docs":{},".":{"1":{"docs":{},"~":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}},"docs":{}}},"docs":{}}},"docs":{}},")":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"modules/":{"ref":"modules/","tf":0.0036003600360036},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.0022002200220022},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"types/struct.html":{"ref":"types/struct.html","tf":0.006363636363636364},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}},")":{"docs":{},";":{"docs":{"functions/":{"ref":"functions/","tf":0.001509813789632612}}}}},";":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0029563932002956393},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.002714230321830167},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/":{"ref":"advanced/","tf":0.005856515373352855},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.014416775884665793},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.008797653958944282},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}},"]":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429}}},",":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}},")":{"docs":{},".":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},";":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"−":{"1":{"2":{"docs":{},"^":{"docs":{},"{":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"−":{"1":{"2":{"docs":{},"^":{"docs":{},"{":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}},"u":{"3":{"2":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},"docs":{}},"docs":{}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974}}}}},"}":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"3":{"0":{"0":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}},".":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},";":{"docs":{"functions/":{"ref":"functions/","tf":0.0020130850528434826}}}},"1":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},")":{"docs":{},";":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},"2":{"7":{"6":{"7":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"8":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"docs":{}},"docs":{}},"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"3":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}},";":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249}}},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"4":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182}}},")":{"docs":{},";":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}},")":{"docs":{},";":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"8":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0022818026240730175},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/references.html":{"ref":"advanced/references.html","tf":0.00463678516228748},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0034626038781163434},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},".":{"1":{"4":{"0":{"0":{"0":{"0":{"docs":{},")":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"docs":{}},"docs":{}},"docs":{}},"1":{"5":{"9":{"2":{"6":{"5":{"3":{"5":{"9":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197}},")":{"docs":{},";":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},")":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429}}}},"f":{"docs":{},")":{"docs":{},";":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}},"docs":{},".":{"3":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}},"docs":{}}},"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"f":{"docs":{},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}},";":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.004434589800443459}}},")":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"modules/":{"ref":"modules/","tf":0.0018001800180018},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},";":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"]":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"advanced/":{"ref":"advanced/","tf":0.004392386530014641},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.011795543905635648},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}},")":{"docs":{},";":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}}},",":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/struct.html":{"ref":"types/struct.html","tf":0.0036363636363636364}}}},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"u":{"3":{"2":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},"docs":{}},"docs":{}}},"4":{"0":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}},"1":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0011001100110011}},";":{"docs":{"functions/":{"ref":"functions/","tf":0.0010065425264217413}}},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"2":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.003695491500369549},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/enum.html":{"ref":"types/enum.html","tf":0.004287245444801715},"types/aka.html":{"ref":"types/aka.html","tf":0.008571428571428572},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"functions/":{"ref":"functions/","tf":0.0035228988424760945},"pattern/":{"ref":"pattern/","tf":0.00605060506050605},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0074866310160427805},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}},";":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"functions/":{"ref":"functions/","tf":0.001509813789632612},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},")":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}},".":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"3":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},";":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"4":{"docs":{},".":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"5":{"2":{"docs":{},".":{"3":{"8":{"9":{"3":{"4":{"2":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"6":{"docs":{},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.004392386530014641},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/":{"ref":"objects/","tf":0.008333333333333333},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},")":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}},";":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"objects/":{"ref":"objects/","tf":0.004166666666666667},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"]":{"docs":{},";":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}},"u":{"3":{"2":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},"docs":{}},"docs":{},"s":{"docs":{},"]":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"5":{"4":{"docs":{},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.006570302233902759},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.001509813789632612},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.006232686980609419}},";":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0036363636363636364},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},"u":{"3":{"2":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},"docs":{}},"docs":{}},")":{"docs":{},";":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}},"6":{"1":{"docs":{},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"4":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429}}},"5":{"docs":{},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"9":{"docs":{},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},"]":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"]":{"docs":{},")":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275}},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}},".":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}},"u":{"3":{"2":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},"docs":{}},"docs":{}},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},"d":{"docs":{},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"e":{"docs":{},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"f":{"docs":{},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}}}}},"7":{"3":{"docs":{},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"4":{"docs":{},"]":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"6":{"1":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},"2":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},"3":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},"4":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},"5":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},"docs":{}},"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}}},";":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}},"i":{"8":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"docs":{}},")":{"docs":{},";":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"]":{"docs":{},";":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}},"u":{"3":{"2":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},"docs":{}},"docs":{}},".":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"8":{"2":{"0":{"docs":{},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"docs":{}},"4":{"docs":{},",":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974}}}},"9":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"functions/":{"ref":"functions/","tf":0.0005032712632108706}},".":{"0":{"docs":{},"f":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197}},";":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197}}}}},"docs":{}},";":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0034227039361095267},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}},")":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"_":{"docs":{},"b":{"docs":{},"i":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}}}}}},";":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/":{"ref":"advanced/","tf":0.004392386530014641}}},",":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"objects/":{"ref":"objects/","tf":0.004166666666666667}}},".":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"u":{"3":{"2":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},"docs":{}},"docs":{}}},"9":{"3":{"4":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"i":{"8":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"docs":{}}},"docs":{}},"4":{"3":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"i":{"8":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"docs":{}}},"docs":{}},"5":{"docs":{},"%":{"docs":{},";":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}},"8":{"docs":{},")":{"docs":{},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275}}}},"docs":{"./":{"ref":"./","tf":0.018561484918793503},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},".":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"3":{"docs":{},".":{"0":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635}}},"docs":{}}},"docs":{}},"_":{"2":{"3":{"4":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"docs":{}},"docs":{}},"9":{"docs":{},".":{"3":{"docs":{},".":{"0":{"docs":{},"_":{"docs":{},"a":{"docs":{},"m":{"docs":{},"d":{"6":{"4":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}}},"docs":{}}},"docs":{},"]":{"docs":{},")":{"docs":{},"*":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}},"]":{"docs":{},")":{"docs":{},";":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}},";":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}},";":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},")":{"docs":{},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"u":{"3":{"2":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},"docs":{}},"docs":{}}},"docs":{},"$":{"docs":{"./":{"ref":"./","tf":0.02320185614849188},"hello-world/":{"ref":"hello-world/","tf":0.04950495049504951},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"modules/":{"ref":"modules/","tf":0.0018001800180018},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},"(":{"docs":{},"p":{"docs":{},"w":{"docs":{},"d":{"docs":{},")":{"docs":{},":":{"docs":{},"/":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.004640371229698376}}}}}}},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"/":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}}}}}}},"*":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}},"(":{"0":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}},")":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},",":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}}}},"1":{"0":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537}}},")":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}},";":{"docs":{"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}}}}},"1":{"docs":{},",":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"2":{"7":{"docs":{},",":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},"docs":{},")":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"?":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},";":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714},"objects/class.html":{"ref":"objects/class.html","tf":0.00484027105517909},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.009966777408637873},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"templates/":{"ref":"templates/","tf":0.0035366931918656055},"templates/values.html":{"ref":"templates/values.html","tf":0.0048543689320388345},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},".":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}},"docs":{},"f":{"docs":{},")":{"docs":{},";":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}},"i":{"6":{"4":{"docs":{},")":{"docs":{},";":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}},"docs":{}},"docs":{}}},"3":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}},"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},")":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0023264831329972858},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"types/struct.html":{"ref":"types/struct.html","tf":0.004545454545454545},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"functions/":{"ref":"functions/","tf":0.001509813789632612},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}},")":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},".":{"3":{"docs":{},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"docs":{},"f":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}},"2":{"3":{"docs":{},".":{"0":{"docs":{},"f":{"docs":{},")":{"docs":{},";":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}},"docs":{}}},"5":{"5":{"docs":{},",":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},"docs":{}},"9":{"docs":{},")":{"docs":{},";":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}},"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},")":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"}":{"docs":{},")":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}},",":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"3":{"0":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},")":{"docs":{},")":{"docs":{},";":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}},"4":{"docs":{},"u":{"6":{"4":{"docs":{},")":{"docs":{},";":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}}}},"docs":{}},"docs":{}}},"docs":{},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},".":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}},"1":{"4":{"docs":{},")":{"docs":{},";":{"docs":{"templates/":{"ref":"templates/","tf":0.002652519893899204}}}}},"docs":{}},"docs":{}}},"4":{"1":{"docs":{},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"2":{"docs":{},")":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}},";":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/methods.html":{"ref":"objects/methods.html","tf":0.010471204188481676},"templates/":{"ref":"templates/","tf":0.0017683465959328027}}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}},".":{"0":{"docs":{},"f":{"docs":{},")":{"docs":{},";":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}},"docs":{}}},"docs":{}},"5":{"docs":{},")":{"docs":{},";":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088}}}}},"6":{"docs":{},",":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"7":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},"8":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}},")":{"docs":{},";":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0034602076124567475}}}}},"9":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.023923444976076555},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"c":{"3":{"2":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"docs":{}},"8":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635}},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"f":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.003695491500369549},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}},"s":{"docs":{},"t":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0026399155227032735},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974}}}},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"!":{"docs":{},"(":{"docs":{},"&":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},")":{"docs":{},";":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0022002200220022}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}}},"d":{"docs":{},"p":{"docs":{},"k":{"docs":{},"g":{"docs":{},")":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{},"*":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}}}}}}},"f":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"i":{"docs":{},"n":{"docs":{"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}}},")":{"docs":{},";":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},"a":{"docs":{},"y":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0053590568060021436}},")":{"docs":{},";":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.003215434083601286}}}},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}},"g":{"docs":{"functions/":{"ref":"functions/","tf":0.0010065425264217413}}}},"g":{"docs":{},"c":{"docs":{},"c":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635}}}}},"n":{"docs":{},"u":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803}}}}}}},"\"":{"1":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}},"2":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}},"3":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}},"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0034602076124567475}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}}}},"i":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}},"_":{"docs":{},"_":{"docs":{},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"_":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/catching.html":{"ref":"errors/catching.html","tf":0.008556149732620321},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}},"s":{"docs":{},"t":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}},"p":{"docs":{},"i":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}}}}}},"x":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0029563932002956393},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825}},":":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714}}},"\"":{"docs":{},"s":{"8":{"docs":{},")":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}},",":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}}}},"docs":{}}}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.002852253280091272},"pattern/":{"ref":"pattern/","tf":0.0038503850385038503},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"i":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0011001100110011}},"r":{"docs":{},"d":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}}}},"=":{"docs":{},"\"":{"docs":{},",":{"docs":{"templates/":{"ref":"templates/","tf":0.002652519893899204}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"2":{"docs":{},"\"":{"docs":{},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}},"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"s":{"8":{"docs":{},")":{"docs":{},";":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}},"docs":{}}}}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}},"\"":{"docs":{},")":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}},";":{"docs":{"modules/":{"ref":"modules/","tf":0.0018001800180018},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0010065425264217413}}}}}}},"i":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537}}},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803}}}}}}},"i":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"templates/values.html":{"ref":"templates/values.html","tf":0.0048543689320388345},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}},"n":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}},"t":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},"t":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0022002200220022}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"\"":{"docs":{},")":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"\"":{"docs":{},")":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.003215434083601286}}}}}},"i":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}}}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182}}}}},"c":{"docs":{},"d":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827}}}}}},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}}}}}}},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}}}}}}}},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}},"n":{"docs":{},"i":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.006417112299465241},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}}}}}},"(":{"docs":{},"\"":{"docs":{},",":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0057306590257879654}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803}}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803}}}}}}}},"(":{"docs":{},"\"":{"docs":{},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}},"g":{"docs":{},"o":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}},"t":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},"y":{"docs":{},"e":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"\"":{"docs":{},"s":{"8":{"docs":{},")":{"docs":{},",":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}}}},"docs":{}}}},"\\":{"docs":{},"n":{"docs":{},"\"":{"docs":{},"s":{"8":{"docs":{},")":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}},"docs":{}}}}},"{":{"docs":{},"i":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931}}}},"u":{"docs":{},"\"":{"docs":{},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"n":{"docs":{},"k":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}},"v":{"docs":{},"\"":{"docs":{},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}},"+":{"docs":{},"\"":{"docs":{},")":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0034602076124567475}}}}}},")":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.009608277900960829},"primitives/types.html":{"ref":"primitives/types.html","tf":0.010856921287320668},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.009697661152310326},"primitives/control.html":{"ref":"primitives/control.html","tf":0.013140604467805518},"advanced/":{"ref":"advanced/","tf":0.007320644216691069},"advanced/references.html":{"ref":"advanced/references.html","tf":0.013910355486862442},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.010484927916120577},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.011730205278592375},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.016201620162016202},"types/struct.html":{"ref":"types/struct.html","tf":0.00909090909090909},"types/enum.html":{"ref":"types/enum.html","tf":0.00964630225080386},"types/aka.html":{"ref":"types/aka.html","tf":0.017142857142857144},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.012584704743465635},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.013289036544850499},"objects/methods.html":{"ref":"objects/methods.html","tf":0.008376963350785341},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.024287222808870117},"objects/traits.html":{"ref":"objects/traits.html","tf":0.014184397163120567},"objects/cast.html":{"ref":"objects/cast.html","tf":0.01565217391304348},"functions/":{"ref":"functions/","tf":0.01459486663311525},"pattern/":{"ref":"pattern/","tf":0.01595159515951595},"errors/main.html":{"ref":"errors/main.html","tf":0.01651376146788991},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0053475935828877},"errors/option.html":{"ref":"errors/option.html","tf":0.01078167115902965},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.009725906277630416},"templates/special.html":{"ref":"templates/special.html","tf":0.014883061658398299},"templates/cte.html":{"ref":"templates/cte.html","tf":0.01731301939058172},"templates/values.html":{"ref":"templates/values.html","tf":0.012135922330097087},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.020689655172413793},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.017699115044247787},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.021739130434782608},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.005791505791505791},"templates/operators.html":{"ref":"templates/operators.html","tf":0.00922722029988466}},";":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.004563605248146035},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"modules/":{"ref":"modules/","tf":0.010801080108010801},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/class.html":{"ref":"objects/class.html","tf":0.003872216844143272},"objects/methods.html":{"ref":"objects/methods.html","tf":0.009424083769633508},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.004223864836325237},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0070921985815602835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.006956521739130435},"functions/":{"ref":"functions/","tf":0.00754906894816306},"pattern/":{"ref":"pattern/","tf":0.0033003300330033004},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/":{"ref":"templates/","tf":0.004420866489832007},"templates/special.html":{"ref":"templates/special.html","tf":0.003543586109142452},"templates/cte.html":{"ref":"templates/cte.html","tf":0.014542936288088643},"templates/values.html":{"ref":"templates/values.html","tf":0.012135922330097087},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.017241379310344827},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}}},")":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.003993154592127781},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},")":{"docs":{},";":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},"]":{"docs":{},")":{"docs":{},";":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}}}},"}":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"x":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.01026811180832858},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.011730205278592375},"objects/class.html":{"ref":"objects/class.html","tf":0.00968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"functions/":{"ref":"functions/","tf":0.0050327126321087065},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.002834868887313962},"templates/values.html":{"ref":"templates/values.html","tf":0.007281553398058253},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},")":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.003215434083601286},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}},";":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"functions/":{"ref":"functions/","tf":0.0050327126321087065},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},")":{"docs":{},")":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}}}}}}}}}},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},")":{"docs":{},";":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}}}}}}}}}},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},".":{"0":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},")":{"docs":{},";":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}},"1":{"docs":{},")":{"docs":{},";":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}},"docs":{},"u":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}},"i":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},"x":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182}}},"t":{"docs":{},"o":{"docs":{},"!":{"docs":{},"(":{"docs":{},"&":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},")":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}}}}}}}}}}}}}}},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"functions/":{"ref":"functions/","tf":0.0005032712632108706}},",":{"docs":{},"'":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},":":{"docs":{},"'":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},":":{"docs":{},"'":{"docs":{"modules/":{"ref":"modules/","tf":0.0018001800180018}}}}},"_":{"docs":{},"'":{"docs":{},")":{"docs":{},"*":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}},"r":{"docs":{},"'":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},")":{"docs":{},";":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}},"{":{"docs":{},"'":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},"=":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},">":{"docs":{},"'":{"docs":{},")":{"docs":{},"?":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}},"i":{"docs":{},"f":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}},"x":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"(":{"docs":{},"'":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"'":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}}},";":{"docs":{},"'":{"docs":{},")":{"docs":{},"?":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"'":{"docs":{},"?":{"docs":{},")":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},")":{"docs":{},"?":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}}}},"|":{"docs":{},"'":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"'":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636}}}}}}},".":{"docs":{},".":{"docs":{},"'":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"'":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}}}},"[":{"1":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.003543586109142452},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}}},"docs":{},"a":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}}},"i":{"3":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}},")":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}}}},"docs":{}},"docs":{}},"[":{"1":{"docs":{},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"docs":{}},"]":{"docs":{},")":{"docs":{},";":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0032085561497326204}}}}},"b":{"docs":{},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}}},"c":{"8":{"docs":{},"]":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"docs":{}}},"a":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/aka.html":{"ref":"types/aka.html","tf":0.008571428571428572},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/":{"ref":"templates/","tf":0.007073386383731211},"templates/special.html":{"ref":"templates/special.html","tf":0.007087172218284904},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002770083102493075},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"templates/operators.html":{"ref":"templates/operators.html","tf":0.008073817762399077}},"n":{"docs":{},"d":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"n":{"docs":{},"o":{"docs":{},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/operators.html":{"ref":"templates/operators.html","tf":0.00461361014994233}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"templates/":{"ref":"templates/","tf":0.004420866489832007},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}},")":{"docs":{},",":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}},";":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"x":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"modules/":{"ref":"modules/","tf":0.0009000900090009},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"d":{"docs":{},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}},"r":{"docs":{},".":{"docs":{},"a":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},"r":{"docs":{},"g":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}}},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.005242463958060288},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}}},".":{"0":{"docs":{},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"docs":{},"x":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}},")":{"docs":{},";":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"!":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"!":{"docs":{},"\"":{"docs":{},")":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"objects/common_traits.html":{"ref":"objects/common_traits.html","tf":0.05263157894736842}}}}}}}}},"f":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0035228988424760945}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197}}}}}},"o":{"docs":{},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},"o":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471}},"_":{"docs":{},"a":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0034227039361095267}}}},")":{"docs":{},";":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.03225806451612903},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}}}},"i":{"3":{"2":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0025163563160543532},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"?":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},",":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471}},")":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"?":{"docs":{},")":{"docs":{},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"_":{"docs":{},"_":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}}}},"docs":{}},"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.011009174311926606},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.008595988538681949},"errors/catching.html":{"ref":"errors/catching.html","tf":0.013903743315508022},"errors/option.html":{"ref":"errors/option.html","tf":0.016172506738544475},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.02617801047120419},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0057670126874279125}},"n":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/option.html":{"ref":"errors/option.html","tf":0.008086253369272238},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},"+":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}},")":{"docs":{},";":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"functions/":{"ref":"functions/","tf":0.0010065425264217413}}},")":{"docs":{},";":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.003942181340341655}}},"f":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.004287245444801715},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},".":{"docs":{},"e":{"docs":{},".":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/":{"ref":"templates/","tf":0.0017683465959328027}}}}},"t":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803}}}},"docs":{}},"s":{"docs":{},"!":{"docs":{},"t":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.007281553398058253}}},"u":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},"{":{"docs":{},"x":{"docs":{},"}":{"docs":{},"{":{"docs":{},"t":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263}}}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"!":{"docs":{},"{":{"docs":{},"t":{"docs":{},"}":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"!":{"docs":{},"{":{"docs":{},"t":{"docs":{},"}":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"i":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}}},"n":{"docs":{},"i":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}}}}},"u":{"docs":{},"t":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.003695881731784583},"functions/":{"ref":"functions/","tf":0.001509813789632612},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},"s":{"docs":{},")":{"docs":{},"?":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{"functions/":{"ref":"functions/","tf":0.0010065425264217413}}}}},"i":{"docs":{},".":{"docs":{},"i":{"docs":{},")":{"docs":{},";":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}}},"p":{"2":{"docs":{},".":{"docs":{},"i":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}},"docs":{},"i":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197}}},".":{"docs":{},"i":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},"x":{"docs":{},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}},"docs":{},")":{"docs":{},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182}}}},".":{"docs":{},"x":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}}}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}},"u":{"docs":{},"b":{"docs":{},",":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}},"t":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},";":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}},".":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"docs":{}},"h":{"docs":{},"i":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}},"e":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"a":{"docs":{},"t":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}},"o":{"docs":{},"f":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155}}}}}}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},"?":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}},";":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}}}}}}}}}}}},")":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"l":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}}}}}},"*":{"docs":{},"p":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"b":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},")":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0057670126874279125}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/":{"ref":"objects/","tf":0.004166666666666667},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"x":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}}},")":{"docs":{},";":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}},"a":{"docs":{},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"_":{"docs":{},"a":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.002852253280091272}}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}}},"e":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},"z":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"u":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}},"i":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}}}}}}}}}}}}}},",":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"templates/":{"ref":"templates/","tf":0.0017683465959328027}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}},"r":{"docs":{},"r":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.008086253369272238}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},")":{"docs":{},";":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.003215434083601286}}}}}}}}}}}}}}}}},".":{"docs":{},"g":{"docs":{},".":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0052173913043478265},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}},"o":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"r":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}},"f":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}}},"p":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}}},"u":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"e":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}}}}}},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"h":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}},"e":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}}}}}}}},"v":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}},"l":{"docs":{},"u":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}}}},"z":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}},")":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}},";":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}}}}},"n":{"docs":{},"o":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}},"t":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"e":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}},":":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},"h":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}},"r":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}}},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}}}},")":{"docs":{},";":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}}}}},"[":{"docs":{},"i":{"3":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}}},"docs":{}},"docs":{}}},"'":{"docs":{},";":{"docs":{},"'":{"docs":{},")":{"docs":{},"?":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}},"i":{"3":{"2":{"docs":{},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"docs":{}},"docs":{}},"t":{"docs":{},",":{"docs":{},")":{"docs":{},")":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}},"f":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0061823802163833074},"functions/":{"ref":"functions/","tf":0.0025163563160543532}}}},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"u":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}}}}}},"y":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},")":{"docs":{},";":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.00655307994757536},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0032085561497326204}}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},")":{"docs":{},";":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}}}}}}}}},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}}}}}}}},"l":{"docs":{},"c":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.007537688442211055}},")":{"docs":{},";":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.01256281407035176}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},"f":{"docs":{},"e":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"_":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"u":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}}}}}}},"i":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},")":{"docs":{},";":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}},"a":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}},")":{"docs":{},";":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}},")":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.009503695881731784},"objects/traits.html":{"ref":"objects/traits.html","tf":0.011144883485309016},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"functions/":{"ref":"functions/","tf":0.001509813789632612},"templates/special.html":{"ref":"templates/special.html","tf":0.003543586109142452},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.00461361014994233}},";":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"objects/traits.html":{"ref":"objects/traits.html","tf":0.005065856129685917}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155}}}}}}}}}}}}},",":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931},"templates/operators.html":{"ref":"templates/operators.html","tf":0.011534025374855825}}}}}},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}}}}},"g":{"docs":{},"n":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},",":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}}}}}},"&":{"docs":{},"(":{"docs":{},"x":{"docs":{},".":{"docs":{},"x":{"docs":{},")":{"docs":{},")":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}},"y":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}}}}}},")":{"docs":{"functions/":{"ref":"functions/","tf":0.001509813789632612},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}}},"a":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}},"d":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"functions/":{"ref":"functions/","tf":0.0020130850528434826}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},")":{"docs":{},";":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{},".":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}}}}}}}},"_":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471}},"_":{"docs":{},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"_":{"docs":{},"_":{"docs":{},")":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}}}}}},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"r":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"d":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"errors/main.html":{"ref":"errors/main.html","tf":0.005504587155963303},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.01002865329512894},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0042780748663101605}}}}}},"+":{"docs":{},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"|":{"docs":{},"x":{"docs":{},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0010065425264217413}}}}},"!":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}},"+":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.020618556701030927},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0023264831329972858},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.007986309184255563},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"functions/":{"ref":"functions/","tf":0.007045797684952189},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806},"templates/operators.html":{"ref":"templates/operators.html","tf":0.00461361014994233}},"x":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}},"=":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},",":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}},"/":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.004640371229698376}},"/":{"docs":{},"c":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"e":{"docs":{},"x":{"docs":{},"d":{"docs":{},"q":{"docs":{},".":{"docs":{},"o":{"docs":{},":":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}}}}}}}}}}},"*":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.041237113402061855}},"*":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.00513405590416429},"modules/":{"ref":"modules/","tf":0.0027002700270027003},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/special.html":{"ref":"templates/special.html","tf":0.004252303330970942}}}},"/":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.0297029702970297},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.041237113402061855},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.008869179600886918},"primitives/types.html":{"ref":"primitives/types.html","tf":0.006979449398991857},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.01540216771249287},"primitives/control.html":{"ref":"primitives/control.html","tf":0.011826544021024968},"advanced/references.html":{"ref":"advanced/references.html","tf":0.023183925811437404},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.028833551769331587},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.017595307917888565},"advanced/best.html":{"ref":"advanced/best.html","tf":0.02763819095477387},"modules/":{"ref":"modules/","tf":0.0036003600360036},"types/struct.html":{"ref":"types/struct.html","tf":0.014545454545454545},"types/enum.html":{"ref":"types/enum.html","tf":0.006430868167202572},"types/aka.html":{"ref":"types/aka.html","tf":0.008571428571428572},"objects/":{"ref":"objects/","tf":0.0125},"objects/class.html":{"ref":"objects/class.html","tf":0.00484027105517909},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.013289036544850499},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.004223864836325237},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00911854103343465},"functions/":{"ref":"functions/","tf":0.004026170105686965},"pattern/":{"ref":"pattern/","tf":0.0033003300330033004},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/":{"ref":"templates/","tf":0.007073386383731211},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.020689655172413793},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.017699115044247787},"templates/operators.html":{"ref":"templates/operators.html","tf":0.00461361014994233}}},"=":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}}},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"/":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"/":{"docs":{},"y":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"y":{"docs":{},"r":{"docs":{},":":{"1":{"0":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"2":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.008595988538681949}}},"4":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"9":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},"docs":{}},"7":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"8":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"c":{"docs":{},"c":{"docs":{},"/":{"docs":{},"g":{"docs":{},"c":{"docs":{},"c":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}}},"y":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"/":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"/":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"/":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"y":{"docs":{},"r":{"docs":{},":":{"4":{"9":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"docs":{}},"8":{"4":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"g":{"docs":{},"y":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},":":{"docs":{},"?":{"docs":{},"?":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"errors/main.html":{"ref":"errors/main.html","tf":0.005504587155963303},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.015759312320916905},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}}}}}}}}}}}}}}},"x":{"8":{"6":{"docs":{},"_":{"6":{"4":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}}}},":":{"docs":{"./":{"ref":"./","tf":0.02088167053364269},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.010347376201034738},"primitives/types.html":{"ref":"primitives/types.html","tf":0.013571151609150834},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.029092983456930975},"primitives/control.html":{"ref":"primitives/control.html","tf":0.006570302233902759},"advanced/":{"ref":"advanced/","tf":0.005856515373352855},"advanced/references.html":{"ref":"advanced/references.html","tf":0.02009273570324575},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.014416775884665793},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.01466275659824047},"advanced/best.html":{"ref":"advanced/best.html","tf":0.02512562814070352},"modules/":{"ref":"modules/","tf":0.010801080108010801},"types/struct.html":{"ref":"types/struct.html","tf":0.024545454545454544},"types/enum.html":{"ref":"types/enum.html","tf":0.021436227224008574},"types/aka.html":{"ref":"types/aka.html","tf":0.022857142857142857},"objects/":{"ref":"objects/","tf":0.008333333333333333},"objects/class.html":{"ref":"objects/class.html","tf":0.028073572120038724},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.029900332225913623},"objects/methods.html":{"ref":"objects/methods.html","tf":0.028272251308900525},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.024287222808870117},"objects/traits.html":{"ref":"objects/traits.html","tf":0.010131712259371834},"objects/cast.html":{"ref":"objects/cast.html","tf":0.01391304347826087},"functions/":{"ref":"functions/","tf":0.018621036738802214},"pattern/":{"ref":"pattern/","tf":0.0242024202420242},"errors/main.html":{"ref":"errors/main.html","tf":0.01834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.022922636103151862},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0213903743315508},"errors/option.html":{"ref":"errors/option.html","tf":0.03234501347708895},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.02617801047120419},"templates/":{"ref":"templates/","tf":0.02475685234305924},"templates/special.html":{"ref":"templates/special.html","tf":0.029766123316796598},"templates/cte.html":{"ref":"templates/cte.html","tf":0.027008310249307478},"templates/values.html":{"ref":"templates/values.html","tf":0.03762135922330097},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.013793103448275862},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.017699115044247787},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.021505376344086023},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.023166023166023165},"templates/operators.html":{"ref":"templates/operators.html","tf":0.03460207612456748}},"=":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0029563932002956393},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.003993154592127781},"primitives/control.html":{"ref":"primitives/control.html","tf":0.009198423127463863},"modules/":{"ref":"modules/","tf":0.0027002700270027003},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"types/enum.html":{"ref":"types/enum.html","tf":0.003215434083601286},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.005808325266214908},"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.0049504950495049506},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0074866310160427805},"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/special.html":{"ref":"templates/special.html","tf":0.004252303330970942},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},":":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"modules/":{"ref":"modules/","tf":0.0009000900090009},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0018001800180018},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}},")":{"docs":{},",":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}},".":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"functions/":{"ref":"functions/","tf":0.0005032712632108706}},",":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}},"l":{"docs":{},"n":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}}}}}}}},",":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},">":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.005912786400591279},"primitives/types.html":{"ref":"primitives/types.html","tf":0.002714230321830167},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.021106674272675412},"primitives/control.html":{"ref":"primitives/control.html","tf":0.009198423127463863},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.004392386530014641},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0077279752704791345},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.005242463958060288},"advanced/best.html":{"ref":"advanced/best.html","tf":0.022613065326633167},"modules/":{"ref":"modules/","tf":0.008100810081008101},"types/struct.html":{"ref":"types/struct.html","tf":0.015454545454545455},"types/enum.html":{"ref":"types/enum.html","tf":0.021436227224008574},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714},"objects/class.html":{"ref":"objects/class.html","tf":0.008712487899322363},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.013612565445026177},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.020591341077085535},"objects/traits.html":{"ref":"objects/traits.html","tf":0.010131712259371834},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0052173913043478265},"functions/":{"ref":"functions/","tf":0.02415702063412179},"pattern/":{"ref":"pattern/","tf":0.009900990099009901},"errors/main.html":{"ref":"errors/main.html","tf":0.011009174311926606},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0042780748663101605},"errors/option.html":{"ref":"errors/option.html","tf":0.008086253369272238},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.015706806282722512},"templates/":{"ref":"templates/","tf":0.007957559681697613},"templates/special.html":{"ref":"templates/special.html","tf":0.014174344436569808},"templates/cte.html":{"ref":"templates/cte.html","tf":0.01662049861495845},"templates/values.html":{"ref":"templates/values.html","tf":0.019417475728155338},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861},"templates/operators.html":{"ref":"templates/operators.html","tf":0.01845444059976932}},"=":{"docs":{"./":{"ref":"./","tf":0.013921113689095127},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0057670126874279125}}},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"functions/":{"ref":"functions/","tf":0.0005032712632108706}},")":{"docs":{},"?":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}},">":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"=":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}}}},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182}}},",":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},"`":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}},"e":{"docs":{},"s":{"docs":{},"s":{"1":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},"docs":{}}},"3":{"docs":{},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"docs":{}}},"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.005173688100517369},"primitives/types.html":{"ref":"primitives/types.html","tf":0.002714230321830167},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0034227039361095267},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"modules/":{"ref":"modules/","tf":0.017101710171017102},"types/struct.html":{"ref":"types/struct.html","tf":0.004545454545454545},"types/enum.html":{"ref":"types/enum.html","tf":0.013933547695605574},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.00484027105517909},"objects/methods.html":{"ref":"objects/methods.html","tf":0.009424083769633508},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"functions/":{"ref":"functions/","tf":0.0055359838953195776},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}},",":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}}},"p":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.005912786400591279},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.010630758327427357},"templates/cte.html":{"ref":"templates/cte.html","tf":0.00554016620498615},"templates/values.html":{"ref":"templates/values.html","tf":0.007281553398058253}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},",":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}}},"u":{"docs":{},"r":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}},"a":{"docs":{},"c":{"docs":{},"y":{"docs":{},",":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202}}}},"i":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}}}}}},"h":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"errors/main.html":{"ref":"errors/main.html","tf":0.005504587155963303}}}}}},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}}}}}}}}}}}}},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931}},"d":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0034227039361095267},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}},"r":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}},",":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}}}}},"_":{"docs":{},"o":{"docs":{},"n":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0022818026240730175}}}}},"i":{"docs":{},"t":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"functions/":{"ref":"functions/","tf":0.001509813789632612}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}},"o":{"docs":{},"n":{"docs":{"functions/":{"ref":"functions/","tf":0.0010065425264217413}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"functions/":{"ref":"functions/","tf":5.000503271263211}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}}}}},"i":{"docs":{},"c":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":5.004392386530014},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.03014416775884666},"advanced/best.html":{"ref":"advanced/best.html","tf":0.017587939698492462},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}},"s":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}},"docs":{}}},"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0034897246994959287},"advanced/":{"ref":"advanced/","tf":0.007320644216691069},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":10.019659239842726},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.013289036544850499},"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.001509813789632612}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.005242463958060288},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144}}},".":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}}}}}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}}}},"d":{"docs":{},",":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}}},"g":{"docs":{},"n":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}}}}}},"l":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}}},"o":{"docs":{},"w":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.004392386530014641},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"advanced/best.html":{"ref":"advanced/best.html","tf":0.010050251256281407},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/main.html":{"ref":"errors/main.html","tf":0.005504587155963303},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}},"c":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.005856515373352855},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}}}}}}},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.009569377990430622},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0061823802163833074},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0027002700270027003},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714},"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.0027502750275027505},"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.003872216844143272},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0032085561497326204}}}}}},"m":{"docs":{},"d":{"6":{"4":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635}}},"docs":{}},"docs":{}},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"modules/":{"ref":"modules/","tf":0.0009000900090009},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions/":{"ref":"functions/","tf":0.001509813789632612},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}}}}}}}}}},"p":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635}}},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}},"l":{"docs":{},"i":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"c":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}}},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}}}}}}}}},")":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"g":{"docs":{},"u":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"e":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/":{"ref":"templates/","tf":0.008841732979664015}},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}},"s":{"docs":{},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"templates/":{"ref":"templates/","tf":0.004420866489832007}}},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},",":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}}}}}}}}},"i":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"pattern/":{"ref":"pattern/","tf":0.0033003300330033004}}},"y":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.006203955021326095},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.00463678516228748},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"templates/cte.html":{"ref":"templates/cte.html","tf":0.004155124653739612},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"s":{"1":{"docs":{},".":{"3":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"5":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104}}},",":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},")":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}},"o":{"docs":{},"w":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182}}}}},"e":{"docs":{},"a":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0026399155227032735}},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}}}}}}}}},"t":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0046529662659945716},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"types/enum.html":{"ref":"types/enum.html","tf":0.006430868167202572},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"objects/cast.html":{"ref":"objects/cast.html","tf":0.006956521739130435},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}},"e":{"docs":{},"s":{"1":{"docs":{},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},":":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}}}},"o":{"docs":{},"m":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"modules/":{"ref":"modules/","tf":0.0009000900090009}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{},",":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}}}}}},"x":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.002852253280091272},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0019387359441644049},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0026399155227032735},"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}}}}}}}}},".":{"0":{"docs":{},",":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714}}}},"1":{"docs":{},")":{"docs":{},";":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714}}}}},"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"p":{"docs":{},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0057670126874279125}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}}}},"i":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},"x":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.013289036544850499}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"x":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"v":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}},"e":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},".":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}}},"r":{"docs":{},"t":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.004223864836325237},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367}}},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}}},"i":{"docs":{},"l":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.004434589800443459},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}}}}},"n":{"docs":{},"y":{"docs":{},"m":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}},"u":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}},"s":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}}}},"d":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"modules/":{"ref":"modules/","tf":0.0009000900090009}}},")":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}}}},"y":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}},"t":{"docs":{},"h":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"y":{"docs":{"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"_":{"docs":{},")":{"docs":{},";":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}}}}}}}}}}},";":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0052173913043478265},"pattern/":{"ref":"pattern/","tf":0.0011001100110011}},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175}}}}}}}}},"s":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0016501650165016502}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.020618556701030927},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.01466275659824047},"types/struct.html":{"ref":"types/struct.html","tf":0.007272727272727273},"types/enum.html":{"ref":"types/enum.html","tf":0.006430868167202572},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"errors/main.html":{"ref":"errors/main.html","tf":0.009174311926605505},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0074866310160427805},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.015706806282722512},"templates/operators.html":{"ref":"templates/operators.html","tf":0.008073817762399077}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0057670126874279125}},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}},"e":{"docs":{},"t":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"docs":{}}},"docs":{}}}}}}}},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.005256241787122208},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"functions/":{"ref":"functions/","tf":0.001509813789632612},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827},"templates/":{"ref":"templates/","tf":0.0017683465959328027}}}}},"u":{"docs":{},"m":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/":{"ref":"objects/","tf":0.004166666666666667}}}}},"i":{"docs":{},"d":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}},".":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}}}}}}}}},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0034602076124567475}},".":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}},")":{"docs":{},";":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"x":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}}},";":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},",":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"modules/":{"ref":"modules/","tf":0.0018001800180018},"objects/":{"ref":"objects/","tf":0.0125},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471}}},":":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"x":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}}},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}},")":{"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}},"x":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0018001800180018}}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0018001800180018}}}}}}}}},"y":{"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0027002700270027003}}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"a":{"docs":{},"z":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0018001800180018}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.005808325266214908},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.016611295681063124},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0062827225130890054},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/operators.html":{"ref":"templates/operators.html","tf":0.010380622837370242}}}}}}},"k":{"docs":{},"a":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}},"docs":{}}},"docs":{"types/":{"ref":"types/","tf":0.047619047619047616},"types/aka.html":{"ref":"types/aka.html","tf":10.077142857142857},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},".":{"docs":{"types/":{"ref":"types/","tf":0.047619047619047616}}},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}}}}},"s":{"docs":{},".":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}}}},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}},"i":{"docs":{},"m":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"=":{"3":{"docs":{},".":{"1":{"4":{"0":{"0":{"0":{"0":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{},"\"":{"docs":{},",":{"docs":{"templates/":{"ref":"templates/","tf":0.0017683465959328027}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}}},"b":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0031019775106630476},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/":{"ref":"objects/","tf":0.0125},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.004252303330970942},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.00461361014994233}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.004640371229698376},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.006335797254487857},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"i":{"docs":{},"c":{"docs":{"primitives/":{"ref":"primitives/","tf":3.463768115942029},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"objects/":{"ref":"objects/","tf":0.008333333333333333},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}}},"s":{"docs":{},",":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}}}},"c":{"docs":{},"k":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}},"d":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/best.html":{"ref":"advanced/best.html","tf":0.007537688442211055},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},",":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.014831717056474614},"modules/":{"ref":"modules/","tf":0.011701170117011701},"types/enum.html":{"ref":"types/enum.html","tf":0.007502679528403001},"objects/class.html":{"ref":"objects/class.html","tf":0.006776379477250726},"objects/methods.html":{"ref":"objects/methods.html","tf":0.008376963350785341},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.016367476240760296},"objects/cast.html":{"ref":"objects/cast.html","tf":0.01217391304347826},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"pattern/":{"ref":"pattern/","tf":0.0022002200220022},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0034626038781163434},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.010344827586206896},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},"(":{"1":{"docs":{},")":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"docs":{}},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},"_":{"docs":{},"a":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634}},")":{"docs":{},";":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}},"y":{"docs":{},"r":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"modules/":{"ref":"modules/","tf":0.0018001800180018}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0021119324181626186},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931}}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},")":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},"*":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},"}":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931}},"\"":{"docs":{},"s":{"8":{"docs":{},")":{"docs":{},";":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931}}}}},"docs":{}}}},";":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"z":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.004223864836325237},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}},".":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}}}}}}},"e":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"functions/":{"ref":"functions/","tf":0.0005032712632108706}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.003695491500369549},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0042780748663101605},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"functions/":{"ref":"functions/","tf":0.0010065425264217413}},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.004434589800443459},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.004052684903748734},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0032085561497326204},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.007722007722007722}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}},"n":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}}},"s":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/best.html":{"ref":"advanced/best.html","tf":5.007537688442211},"modules/":{"ref":"modules/","tf":0.0018001800180018},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0023264831329972858},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}},")":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}},",":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},".":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0053590568060021436}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/":{"ref":"templates/","tf":0.0017683465959328027}},"s":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}},".":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}}},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.005256241787122208},"modules/":{"ref":"modules/","tf":0.0009000900090009},"pattern/":{"ref":"pattern/","tf":0.0027502750275027505},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}},"e":{"docs":{},"f":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}},"l":{"docs":{},"i":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.009198423127463863},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.019801980198019802},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"templates/operators.html":{"ref":"templates/operators.html","tf":0.008073817762399077}}}}}},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0031019775106630476},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}}}}}}},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.002852253280091272},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429}}}}},"o":{"docs":{},"l":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0034602076124567475}},")":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238}},"s":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"advanced/":{"ref":"advanced/","tf":0.007320644216691069},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.014416775884665793},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.019933554817275746},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}},"docs":{}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}}},"s":{"docs":{},".":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}}}}}},"d":{"docs":{},"i":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.003993154592127781},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155}}},"y":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"6":{"docs":{},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"docs":{}}},"docs":{},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642}}},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367}}}}},"t":{"docs":{},"h":{"docs":{"modules/":{"ref":"modules/","tf":0.0027002700270027003},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"x":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}}},")":{"docs":{},";":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},",":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"d":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182}},"s":{"docs":{},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0052173913043478265}}},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/":{"ref":"objects/","tf":0.004166666666666667}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}}}},".":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}},"i":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},"x":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"x":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671}}}}}},"o":{"docs":{},"p":{"docs":{},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.00461361014994233}}}}}}}},",":{"docs":{"objects/":{"ref":"objects/","tf":0.008333333333333333},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},"t":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.004223864836325237},"errors/main.html":{"ref":"errors/main.html","tf":0.01651376146788991},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.03868194842406877},"errors/catching.html":{"ref":"errors/catching.html","tf":0.008556149732620321}}},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}}},"c":{"3":{"2":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.002714230321830167},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}},"]":{"docs":{},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}},")":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},".":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}},"docs":{}},"8":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0031019775106630476},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"(":{"docs":{},"r":{"docs":{},")":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}},"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"pattern/":{"ref":"pattern/","tf":0.0033003300330033004},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.01540216771249287},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.007863695937090432},"advanced/best.html":{"ref":"advanced/best.html","tf":0.017587939698492462},"modules/":{"ref":"modules/","tf":0.0054005400540054005},"types/enum.html":{"ref":"types/enum.html","tf":0.010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.013552758954501452},"objects/methods.html":{"ref":"objects/methods.html","tf":0.016753926701570682},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.007391763463569166},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"functions/":{"ref":"functions/","tf":0.0055359838953195776},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0032085561497326204},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/":{"ref":"templates/","tf":0.021220159151193633},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/cte.html":{"ref":"templates/cte.html","tf":0.00554016620498615},"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.021739130434782608},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0057670126874279125}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}},"e":{"docs":{},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},")":{"docs":{},".":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}}},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"r":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.003215434083601286},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}},".":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714}}}}},"s":{"docs":{},".":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"templates/":{"ref":"templates/","tf":0.004420866489832007},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}}}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}},"s":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.010471204188481676}},".":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}},"m":{"docs":{},"e":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}},"s":{"docs":{},"e":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"functions/":{"ref":"functions/","tf":0.001509813789632612},"pattern/":{"ref":"pattern/","tf":0.0044004400440044},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0032085561497326204},"errors/option.html":{"ref":"errors/option.html","tf":0.01078167115902965},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.004252303330970942},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002770083102493075},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},")":{"docs":{},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"s":{"docs":{},")":{"docs":{},",":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}},"t":{"1":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0031019775106630476},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0053590568060021436},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.003695881731784583},"objects/cast.html":{"ref":"objects/cast.html","tf":0.017391304347826087},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}},"!":{"docs":{},"i":{"6":{"4":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"docs":{}},"docs":{}},"(":{"docs":{},"&":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}}}}},"{":{"docs":{},"&":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"}":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"}":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}}}}}},"t":{"docs":{"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}}},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}},"e":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":3.3368115942028984},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/":{"ref":"objects/","tf":0.004166666666666667}}},"b":{"docs":{},"l":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"functions/":{"ref":"functions/","tf":0.0010065425264217413}}}}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263}}},"t":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}},"'":{"docs":{},"t":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"functions/":{"ref":"functions/","tf":0.001509813789632612},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827},"errors/catching.html":{"ref":"errors/catching.html","tf":10.034224598930482},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},".":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},"?":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}}}}}}}}}}}}},",":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}},"r":{"docs":{},"e":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0011001100110011}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}}}}},"h":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"primitives/":{"ref":"primitives/","tf":0.043478260869565216},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0029563932002956393},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0031019775106630476},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216},"types/":{"ref":"types/","tf":0.047619047619047616},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"functions/":{"ref":"functions/","tf":0.0025163563160543532},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"objects/common_traits.html":{"ref":"objects/common_traits.html","tf":0.05263157894736842}},",":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},".":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}},"s":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}},",":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}}},")":{"docs":{},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}}},"e":{"docs":{},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"n":{"docs":{},"g":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/":{"ref":"advanced/","tf":0.004392386530014641},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0061823802163833074},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}},",":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}}}}},"r":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0034897246994959287}},"e":{"docs":{},"r":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}},"s":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.0022002200220022},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"s":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}}},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"i":{"docs":{},"c":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}},"e":{"docs":{},",":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0066518847006651885},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0034227039361095267},"primitives/control.html":{"ref":"primitives/control.html","tf":0.00788436268068331},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"types/enum.html":{"ref":"types/enum.html","tf":0.004287245444801715},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714},"objects/":{"ref":"objects/","tf":0.008333333333333333},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.0022002200220022},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0032085561497326204},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0034626038781163434},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.003942181340341655},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},":":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}},")":{"docs":{},",":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}}}},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}},"n":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.004640371229698376},"hello-world/":{"ref":"hello-world/","tf":0.019801980198019802},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":10.072164948453608},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}},"s":{"1":{"docs":{},".":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464}}}},"docs":{},".":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464}}}}}}},"o":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173},"objects/common_traits.html":{"ref":"objects/common_traits.html","tf":5.157894736842105},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"l":{"docs":{},"i":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}}},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},",":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.013921113689095127},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.008130081300813009},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0081426909654905},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.004563605248146035},"primitives/control.html":{"ref":"primitives/control.html","tf":0.003942181340341655},"advanced/":{"ref":"advanced/","tf":0.008784773060029283},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0077279752704791345},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.00655307994757536},"advanced/best.html":{"ref":"advanced/best.html","tf":0.007537688442211055},"modules/":{"ref":"modules/","tf":0.010801080108010801},"types/struct.html":{"ref":"types/struct.html","tf":0.006363636363636364},"types/enum.html":{"ref":"types/enum.html","tf":0.007502679528403001},"types/aka.html":{"ref":"types/aka.html","tf":0.008571428571428572},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.009966777408637873},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0062827225130890054},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.003695881731784583},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.006039255158530448},"pattern/":{"ref":"pattern/","tf":0.0033003300330033004},"errors/main.html":{"ref":"errors/main.html","tf":0.007339449541284404},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.005305039787798408},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.019390581717451522},"templates/values.html":{"ref":"templates/values.html","tf":3.353964401294498},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.007722007722007722},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}},"s":{"docs":{},",":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901}}}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"d":{"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},",":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}}}}},"a":{"docs":{},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0057670126874279125}},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}}},"t":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}}},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.009569377990430622},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}}}},"i":{"docs":{},"c":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}}}},"t":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}}},"o":{"docs":{},"n":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"s":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502}},"s":{"docs":{},":":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}},"r":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}}},"u":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},"e":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"objects/":{"ref":"objects/","tf":0.008333333333333333},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}},"a":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}},"s":{"docs":{},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/":{"ref":"primitives/","tf":3.4202898550724634},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"functions/":{"ref":"functions/","tf":0.0005032712632108706}},"s":{"1":{"docs":{},".":{"docs":{"primitives/":{"ref":"primitives/","tf":0.043478260869565216}}}},"docs":{},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}},"u":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}},",":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}}},"r":{"docs":{},"n":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/control.html":{"ref":"primitives/control.html","tf":0.01576872536136662},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.009708737864077669}},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"docs":{}}},"docs":{},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}},"y":{"docs":{},",":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"primitives/types.html":{"ref":"primitives/types.html","tf":0.007367196587824738},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.003942181340341655},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/struct.html":{"ref":"types/struct.html","tf":0.007272727272727273},"types/enum.html":{"ref":"types/enum.html","tf":0.003215434083601286},"objects/":{"ref":"objects/","tf":0.0125},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/cast.html":{"ref":"objects/cast.html","tf":0.006956521739130435},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.0027502750275027505},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/option.html":{"ref":"errors/option.html","tf":0.008086253369272238},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.007722007722007722},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0034602076124567475}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.004640371229698376}}}}},".":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}},"s":{"docs":{},",":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}},".":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}}},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}},":":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}}}},"o":{"docs":{},"l":{"docs":{"primitives/":{"ref":"primitives/","tf":0.043478260869565216},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":5.003942181340341},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}},"s":{"docs":{},"t":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},"docs":{}}},"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.003215434083601286},"types/aka.html":{"ref":"types/aka.html","tf":0.008571428571428572},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"functions/":{"ref":"functions/","tf":0.0025163563160543532},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},".":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}},"n":{"docs":{},"t":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},")":{"docs":{},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}},",":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}}}},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"n":{"docs":{},"u":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901}},"e":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}},"i":{"docs":{},"d":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"modules/":{"ref":"modules/","tf":0.0009000900090009},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}},"e":{"docs":{},"r":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}}}},"s":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}}}},"t":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.004392386530014641},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671},"functions/":{"ref":"functions/","tf":0.0010065425264217413}},"s":{"docs":{},",":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"types/struct.html":{"ref":"types/struct.html","tf":0.005454545454545455},"types/enum.html":{"ref":"types/enum.html","tf":0.003215434083601286},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.008712487899322363},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0021119324181626186}},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"2":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"3":{"docs":{},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"docs":{}}},"docs":{},"s":{"1":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},"docs":{}}},"docs":{}}},"docs":{}},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}},"o":{"docs":{},"r":{"1":{"docs":{},".":{"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},"4":{"docs":{},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},"docs":{}}},"docs":{}}},"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.021297192642787996},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.006335797254487857},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/":{"ref":"templates/","tf":0.002652519893899204}},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0021119324181626186}}},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.003872216844143272},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}},"s":{"docs":{},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},".":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}}}},"t":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}}}}}},"f":{"docs":{},"u":{"docs":{},"s":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/":{"ref":"modules/","tf":0.0036003600360036},"functions/":{"ref":"functions/","tf":0.0005032712632108706}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}},".":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}},"i":{"docs":{},"n":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"advanced/":{"ref":"advanced/","tf":0.005856515373352855},"advanced/copies.html":{"ref":"advanced/copies.html","tf":6.728250244379276},"advanced/best.html":{"ref":"advanced/best.html","tf":0.03768844221105527},"types/struct.html":{"ref":"types/struct.html","tf":0.004545454545454545},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"functions/":{"ref":"functions/","tf":0.007045797684952189},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"traits/copiable.html":{"ref":"traits/copiable.html","tf":10.044247787610619}}}}}},"y":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}}},"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}}},"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635}}}}}}},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}},",":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.008797653958944282},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182}}},")":{"docs":{"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0010065425264217413}}}},"\"":{"docs":{},"s":{"8":{"docs":{},")":{"docs":{"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}}}},"docs":{}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"primitives/":{"ref":"primitives/","tf":0.043478260869565216}}}}},"l":{"docs":{},"l":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}},"i":{"docs":{},"d":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}},"e":{"docs":{},"c":{"docs":{},"t":{"2":{"docs":{},":":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}},"o":{"docs":{},"r":{"docs":{"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}}}},")":{"docs":{},";":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}}},":":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.021505376344086023}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"modules/":{"ref":"modules/","tf":0.0027002700270027003},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.005256241787122208}}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}}},"r":{"docs":{},"s":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"e":{"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}},"p":{"docs":{},"l":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"l":{"docs":{},"i":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}},",":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}}}},"e":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"objects/common_traits.html":{"ref":"objects/common_traits.html","tf":0.05263157894736842},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.017699115044247787}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"1":{"3":{"docs":{},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825}},".":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974}}},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901}}}}}},"s":{"docs":{},"s":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},"5":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"docs":{}}},"7":{"docs":{},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/":{"ref":"types/","tf":0.047619047619047616},"objects/":{"ref":"objects/","tf":0.025},"objects/class.html":{"ref":"objects/class.html","tf":10.02323330106486},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.019933554817275746},"objects/methods.html":{"ref":"objects/methods.html","tf":0.011518324607329843},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.04171066525871172},"objects/traits.html":{"ref":"objects/traits.html","tf":0.03951367781155015},"objects/cast.html":{"ref":"objects/cast.html","tf":0.01391304347826087},"functions/":{"ref":"functions/","tf":0.003019627579265224},"pattern/":{"ref":"pattern/","tf":0.010451045104510451},"errors/main.html":{"ref":"errors/main.html","tf":0.012844036697247707},"templates/":{"ref":"templates/","tf":0.009725906277630416},"templates/special.html":{"ref":"templates/special.html","tf":0.01559177888022679},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.027586206896551724},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.021739130434782608},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.021505376344086023},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.009652509652509652},"templates/operators.html":{"ref":"templates/operators.html","tf":0.00922722029988466}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},".":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},".":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.005808325266214908},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.005807814149947202},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0031678986272439284},"objects/traits.html":{"ref":"objects/traits.html","tf":0.004052684903748734},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}}}}}},")":{"docs":{},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}},"i":{"docs":{},"m":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806}},"d":{"docs":{},",":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}}}},"r":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"u":{"docs":{},"r":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.010065425264217413},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.010471204188481676},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}},"e":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}}}},"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"2":{"docs":{},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},",":{"docs":{"functions/":{"ref":"functions/","tf":0.001509813789632612},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0010065425264217413},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}},"u":{"docs":{},"e":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00825082508250825}},")":{"docs":{},";":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0022002200220022}}}}}}}}},"f":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0034897246994959287},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.008571428571428572},"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.02617801047120419},"templates/":{"ref":"templates/","tf":0.0035366931918656055},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.007722007722007722}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}}},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"templates/":{"ref":"templates/","tf":0.002652519893899204}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"types/":{"ref":"types/","tf":0.047619047619047616},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}}}}}},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}},"t":{"docs":{},"e":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"templates/cte.html":{"ref":"templates/cte.html","tf":0.004847645429362881},"templates/values.html":{"ref":"templates/values.html","tf":0.013349514563106795}}}},"p":{"docs":{},"u":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}}},".":{"docs":{},"i":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}}}},"+":{"docs":{},"+":{"docs":{},",":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}}}},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.004223864836325237},"objects/traits.html":{"ref":"objects/traits.html","tf":0.014184397163120567},"pattern/":{"ref":"pattern/","tf":0.01155115511551155}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},",":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}}},"d":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}},"e":{"docs":{},"b":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.004640371229698376}}}}},"u":{"docs":{},"g":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642}},"u":{"docs":{},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"pattern/":{"ref":"pattern/","tf":0.010451045104510451},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}}}}}}},"o":{"docs":{},"r":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.006776379477250726},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}},"s":{"1":{"docs":{},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},"docs":{}},")":{"docs":{},".":{"docs":{"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}},",":{"docs":{"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"docs":{}}},"docs":{}}}}}}},"o":{"docs":{},"y":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.012584704743465635},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0031678986272439284},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}}}},"b":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"i":{"docs":{},"t":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}},"v":{"docs":{"./":{"ref":"./","tf":0.009280742459396751}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.004640371229698376}},"p":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.016260162601626018},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.011979463776383342},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"modules/":{"ref":"modules/","tf":0.013501350135013501},"types/struct.html":{"ref":"types/struct.html","tf":0.0036363636363636364},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/class.html":{"ref":"objects/class.html","tf":0.003872216844143272},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0021119324181626186},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0055359838953195776},"pattern/":{"ref":"pattern/","tf":0.007700770077007701},"errors/main.html":{"ref":"errors/main.html","tf":0.005504587155963303},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.003543586109142452},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"docs":{}}},"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},"s":{"docs":{},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},")":{"docs":{},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197}}},",":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}}},"o":{"docs":{},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}},"s":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}},"m":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238}}},"s":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}}}}},"f":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.009608277900960829},"primitives/types.html":{"ref":"primitives/types.html","tf":0.011244668476153548},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.023958927552766685},"primitives/control.html":{"ref":"primitives/control.html","tf":0.013140604467805518},"advanced/":{"ref":"advanced/","tf":0.007320644216691069},"advanced/references.html":{"ref":"advanced/references.html","tf":0.02009273570324575},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.01310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.011730205278592375},"advanced/best.html":{"ref":"advanced/best.html","tf":0.007537688442211055},"modules/":{"ref":"modules/","tf":0.011701170117011701},"types/struct.html":{"ref":"types/struct.html","tf":0.00909090909090909},"types/enum.html":{"ref":"types/enum.html","tf":0.010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.022857142857142857},"objects/":{"ref":"objects/","tf":0.008333333333333333},"objects/class.html":{"ref":"objects/class.html","tf":0.006776379477250726},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.013289036544850499},"objects/methods.html":{"ref":"objects/methods.html","tf":0.015706806282722512},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.011087645195353749},"objects/traits.html":{"ref":"objects/traits.html","tf":0.013171225937183385},"objects/cast.html":{"ref":"objects/cast.html","tf":0.01217391304347826},"functions/":{"ref":"functions/","tf":0.01660795168595873},"pattern/":{"ref":"pattern/","tf":0.009900990099009901},"errors/main.html":{"ref":"errors/main.html","tf":0.012844036697247707},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0071633237822349575},"errors/catching.html":{"ref":"errors/catching.html","tf":0.009625668449197862},"errors/option.html":{"ref":"errors/option.html","tf":0.01078167115902965},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.010471204188481676},"templates/":{"ref":"templates/","tf":0.01768346595932803},"templates/special.html":{"ref":"templates/special.html","tf":0.020552799433026223},"templates/cte.html":{"ref":"templates/cte.html","tf":0.01731301939058172},"templates/values.html":{"ref":"templates/values.html","tf":0.019417475728155338},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861},"templates/operators.html":{"ref":"templates/operators.html","tf":0.02306805074971165}},"i":{"docs":{},"n":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0029563932002956393},"primitives/types.html":{"ref":"primitives/types.html","tf":0.004265219077161691},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.007415858528237307},"primitives/control.html":{"ref":"primitives/control.html","tf":0.003942181340341655},"advanced/":{"ref":"advanced/","tf":0.005856515373352855},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0054005400540054005},"types/":{"ref":"types/","tf":3.4285714285714284},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"types/enum.html":{"ref":"types/enum.html","tf":0.0053590568060021436},"types/aka.html":{"ref":"types/aka.html","tf":0.008571428571428572},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0062827225130890054},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00911854103343465},"functions/":{"ref":"functions/","tf":0.001509813789632612},"errors/main.html":{"ref":"errors/main.html","tf":0.005504587155963303},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.004420866489832007},"templates/special.html":{"ref":"templates/special.html","tf":0.004252303330970942},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.0048543689320388345},"objects/common_traits.html":{"ref":"objects/common_traits.html","tf":0.05263157894736842},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.006920415224913495}},"i":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.004847645429362881},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}},"o":{"docs":{},"n":{"1":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"docs":{}}},"docs":{},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},".":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}},")":{"docs":{},".":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}},"s":{"docs":{},".":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.009697661152310326},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.004545454545454545},"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/traits.html":{"ref":"objects/traits.html","tf":0.004052684903748734},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.0033003300330033004},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.005791505791505791}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}},")":{"docs":{},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464}}}}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}},"e":{"docs":{},"g":{"docs":{"functions/":{"ref":"functions/","tf":0.004026170105686965}},"a":{"docs":{},"t":{"docs":{},"e":{"1":{"docs":{},".":{"3":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"docs":{}}},"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"docs":{},")":{"docs":{},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0010065425264217413},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}}},"s":{"docs":{},".":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"objects/":{"ref":"objects/","tf":0.004166666666666667}}}}}}}}},"i":{"docs":{},"v":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/copies.html":{"ref":"advanced/copies.html","tf":3.3450635386119254},"functions/":{"ref":"functions/","tf":0.0005032712632108706}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}}},"l":{"docs":{},"i":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.00463678516228748},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.017699115044247787}}}}}}}},"a":{"docs":{},"l":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}},"o":{"docs":{},"r":{"docs":{},"y":{"1":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"docs":{}}},"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"modules/":{"ref":"modules/","tf":0.0018001800180018}}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"i":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}},"l":{"docs":{},"i":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"y":{"docs":{},".":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},"?":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671},"functions/":{"ref":"functions/","tf":0.0010065425264217413}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}},"c":{"docs":{},"t":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"traits/disposable.html":{"ref":"traits/disposable.html","tf":5.101449275362318}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}},",":{"docs":{"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"1":{"docs":{},".":{"docs":{"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}},"docs":{}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0031019775106630476},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.008797653958944282},"modules/":{"ref":"modules/","tf":0.0027002700270027003},"types/":{"ref":"types/","tf":0.047619047619047616},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0042780748663101605},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002770083102493075},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}}},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}}},"g":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"i":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},"d":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}}}},"o":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.016241299303944315}},".":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}},"i":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"modules/":{"ref":"modules/","tf":0.0009000900090009}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.004640371229698376}}},".":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901}}},"s":{"docs":{},".":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0034602076124567475}},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},",":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"'":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}}},",":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}},".":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}}},".":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}}},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"modules/":{"ref":"modules/","tf":0.0027002700270027003},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}},"p":{"docs":{},"k":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.01160092807424594}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.004434589800443459},"primitives/types.html":{"ref":"primitives/types.html","tf":5.001163241566498},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/":{"ref":"advanced/","tf":0.013177159590043924},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.01310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.020527859237536656},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.029900332225913623},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.004392386530014641},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216}}},"s":{"docs":{},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}},".":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}}}},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}}},"y":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.007502679528403001}},")":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},";":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}}}}}},";":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}},"s":{"docs":{},".":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.013177159590043924},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.007863695937090432},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.008797653958944282},"advanced/best.html":{"ref":"advanced/best.html","tf":0.01507537688442211},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.016611295681063124},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"functions/":{"ref":"functions/","tf":0.0025163563160543532},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.010344827586206896},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.017699115044247787},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}}}},"u":{"docs":{},"e":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},"r":{"docs":{},"e":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},"y":{"docs":{},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182}}}}},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974}}}}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.017699115044247787}}},"y":{"docs":{},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/cast.html":{"ref":"objects/cast.html","tf":3.3437681159420287},"pattern/":{"ref":"pattern/","tf":0.0022002200220022},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},"i":{"docs":{},"c":{"docs":{},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}}}}}}}},"g":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"functions/":{"ref":"functions/","tf":0.001509813789632612}}},",":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}},":":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}}}}}}}}}},")":{"docs":{},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"]":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"e":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"a":{"docs":{},"s":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}},"s":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"l":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}}}}}},"c":{"docs":{},"h":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0031019775106630476},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.00463678516228748},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}}}}}},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0031019775106630476},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"functions/":{"ref":"functions/","tf":0.004026170105686965},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825},"templates/":{"ref":"templates/","tf":0.0017683465959328027}}}}}},"d":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"e":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}},"u":{"docs":{},"m":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":10.006430868167202},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},")":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}},"e":{"docs":{},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"types/":{"ref":"types/","tf":0.09523809523809523},"types/enum.html":{"ref":"types/enum.html","tf":0.03751339764201501},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},"docs":{}}},"docs":{},")":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}},".":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}}}}}}}},".":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}}},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.003942181340341655},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}},"r":{"docs":{},"i":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"errors/option.html":{"ref":"errors/option.html","tf":0.013477088948787063}},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.020618556701030927},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.005173688100517369},"primitives/types.html":{"ref":"primitives/types.html","tf":0.005040713454827452},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0022818026240730175},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/":{"ref":"advanced/","tf":0.005856515373352855},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0061823802163833074},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216},"advanced/best.html":{"ref":"advanced/best.html","tf":0.007537688442211055},"modules/":{"ref":"modules/","tf":0.0036003600360036},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"types/enum.html":{"ref":"types/enum.html","tf":0.006430868167202572},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.009966777408637873},"objects/methods.html":{"ref":"objects/methods.html","tf":0.009424083769633508},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.009503695881731784},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0060790273556231},"functions/":{"ref":"functions/","tf":0.006039255158530448},"pattern/":{"ref":"pattern/","tf":0.0049504950495049506},"errors/main.html":{"ref":"errors/main.html","tf":5.022018348623853},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/cte.html":{"ref":"templates/cte.html","tf":0.006232686980609419},"templates/values.html":{"ref":"templates/values.html","tf":0.006067961165048544}},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.004434589800443459},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"advanced/":{"ref":"advanced/","tf":0.004392386530014641},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"modules/":{"ref":"modules/","tf":0.0027002700270027003},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},".":{"docs":{},".":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}}},":":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0027002700270027003},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.004751847940865892},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}},"s":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},":":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"functions/":{"ref":"functions/","tf":0.001509813789632612},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}},")":{"docs":{},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},".":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},";":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}}}}}},")":{"docs":{},";":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0053475935828877},"errors/option.html":{"ref":"errors/option.html","tf":0.008086253369272238}}},".":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}},".":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.01160092807424594},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0029563932002956393},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}},"t":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827}},"s":{"docs":{},")":{"docs":{},".":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}}}}},",":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}},"r":{"docs":{},"y":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}}}},"t":{"docs":{},"h":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}},"docs":{}}},"docs":{}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.020618556701030927},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.003695491500369549},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0019387359441644049},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0022818026240730175},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.007320644216691069},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188},"modules/":{"ref":"modules/","tf":0.0054005400540054005},"types/enum.html":{"ref":"types/enum.html","tf":0.007502679528403001},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"functions/":{"ref":"functions/","tf":0.003019627579265224},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.010471204188481676},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"e":{"1":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"docs":{}}},"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"objects/":{"ref":"objects/","tf":0.004166666666666667},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0038774718883288098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.005256241787122208},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0061823802163833074},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188},"advanced/best.html":{"ref":"advanced/best.html","tf":0.010050251256281407},"modules/":{"ref":"modules/","tf":0.0063006300630063005},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"types/enum.html":{"ref":"types/enum.html","tf":0.006430868167202572},"types/aka.html":{"ref":"types/aka.html","tf":0.011428571428571429},"objects/class.html":{"ref":"objects/class.html","tf":0.003872216844143272},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"objects/traits.html":{"ref":"objects/traits.html","tf":0.008105369807497468},"objects/cast.html":{"ref":"objects/cast.html","tf":0.008695652173913044},"functions/":{"ref":"functions/","tf":0.0055359838953195776},"pattern/":{"ref":"pattern/","tf":0.0088008800880088},"errors/main.html":{"ref":"errors/main.html","tf":0.007339449541284404},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0106951871657754},"errors/option.html":{"ref":"errors/option.html","tf":0.008086253369272238},"templates/":{"ref":"templates/","tf":0.011494252873563218},"templates/special.html":{"ref":"templates/special.html","tf":0.009213323883770375},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0034626038781163434},"templates/values.html":{"ref":"templates/values.html","tf":0.0048543689320388345},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},":":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},")":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}},",":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}},".":{"docs":{"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}},"c":{"docs":{},"t":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"functions/":{"ref":"functions/","tf":0.0005032712632108706}},"l":{"docs":{},"i":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/control.html":{"ref":"primitives/control.html","tf":0.003942181340341655},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.011461318051575931},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825},"templates/cte.html":{"ref":"templates/cte.html","tf":0.004847645429362881},"templates/values.html":{"ref":"templates/values.html","tf":3.338187702265372}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}},")":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803}}}}}}},"p":{"docs":{},"t":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}}},"r":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}},"e":{"docs":{},",":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}}}}},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"n":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0005032712632108706}},"l":{"docs":{},"i":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}},"y":{"docs":{},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}}}},".":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.003695491500369549},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.01426126640045636},"primitives/control.html":{"ref":"primitives/control.html","tf":0.022339027595269383},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.006600660066006601},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0057306590257879654},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/values.html":{"ref":"templates/values.html","tf":0.013349514563106795},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0034602076124567475}},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"docs":{}}},"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}},"docs":{}}},"docs":{},"s":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.009569377990430622},"modules/":{"ref":"modules/","tf":0.0009000900090009},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},")":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}},"*":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0032085561497326204}},")":{"docs":{},"?":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}},"?":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.020618556701030927},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/":{"ref":"objects/","tf":0.008333333333333333},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.03853211009174312},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.01002865329512894},"errors/catching.html":{"ref":"errors/catching.html","tf":0.01818181818181818},"errors/option.html":{"ref":"errors/option.html","tf":3.3548966756513923},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.020942408376963352}},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}},"3":{"docs":{},".":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}},"docs":{}}},"docs":{},",":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0042780748663101605},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}}},".":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0032085561497326204},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825}}},"s":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}},"4":{"docs":{},".":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}},"docs":{}}},"docs":{},",":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}},".":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}}}},")":{"docs":{},".":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.003695491500369549},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"functions/":{"ref":"functions/","tf":0.0010065425264217413}},"s":{"docs":{},".":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}},"t":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.017191977077363897},"errors/catching.html":{"ref":"errors/catching.html","tf":0.006417112299465241}},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}},")":{"docs":{},",":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}},".":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"modules/":{"ref":"modules/","tf":0.0009000900090009}},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}},"/":{"docs":{},"_":{"docs":{},".":{"docs":{},"y":{"docs":{},"r":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"y":{"docs":{},"r":{"docs":{"modules/":{"ref":"modules/","tf":0.0027002700270027003}},":":{"docs":{},"(":{"4":{"docs":{},",":{"9":{"docs":{},")":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"docs":{}}},"docs":{}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},".":{"docs":{},"y":{"docs":{},"r":{"docs":{"modules/":{"ref":"modules/","tf":0.0054005400540054005}},":":{"docs":{},"(":{"4":{"docs":{},",":{"9":{"docs":{},")":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"docs":{}}},"8":{"docs":{},",":{"5":{"docs":{},")":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"docs":{}}},"docs":{}}}}}}}}}},":":{"docs":{},":":{"docs":{},"_":{"docs":{},";":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/":{"ref":"modules/","tf":0.0072007200720072}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0063006300630063005}}},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"modules/":{"ref":"modules/","tf":0.0018001800180018}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}},";":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"modules/":{"ref":"modules/","tf":0.012601260126012601}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.004500450045004501}}},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0027002700270027003}}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"modules/":{"ref":"modules/","tf":0.0036003600360036}}}}}}},";":{"docs":{"modules/":{"ref":"modules/","tf":0.0036003600360036}}},"}":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"e":{"docs":{},"m":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}},"h":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.004434589800443459},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"pattern/":{"ref":"pattern/","tf":0.0038503850385038503},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},")":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},".":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},",":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}},",":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}},".":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"g":{"docs":{},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"!":{"docs":{},"(":{"docs":{},"\"":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"!":{"docs":{},"\"":{"docs":{},")":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}},"*":{"docs":{},"\"":{"docs":{},")":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0031019775106630476},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},"s":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}}},"s":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0022818026240730175},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/option.html":{"ref":"errors/option.html","tf":0.01078167115902965}}},"y":{"docs":{},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}}}},"p":{"docs":{},"s":{"docs":{},"i":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}}},"f":{"3":{"2":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0029563932002956393},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},")":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},")":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},";":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},"(":{"3":{"docs":{},".":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{},")":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"}":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"docs":{}},"6":{"4":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0021119324181626186},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},")":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}},";":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0021119324181626186}}},"}":{"docs":{"templates/":{"ref":"templates/","tf":0.0017683465959328027}},")":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.006067961165048544}}}}},"docs":{}},"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"functions/":{"ref":"functions/","tf":0.0050327126321087065},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.009652509652509652}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/catching.html":{"ref":"errors/catching.html","tf":0.011764705882352941},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"s":{"docs":{},".":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}},",":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803}}}}}}},"u":{"docs":{},"r":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.015759312320916905},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0032085561497326204}},"e":{"docs":{},",":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901}}}},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"r":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}}}}}}},"l":{"docs":{},"s":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"e":{"docs":{},".":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}},"c":{"docs":{},"t":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0005032712632108706}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0031678986272439284},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},")":{"docs":{},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"modules/":{"ref":"modules/","tf":0.0144014401440144},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"objects/common_traits.html":{"ref":"objects/common_traits.html","tf":0.05263157894736842},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}}},"s":{"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},".":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"t":{"docs":{},"e":{"docs":{},"r":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"4":{"docs":{},".":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"docs":{}}},"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.014174344436569808}},".":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}},"s":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"docs":{}}},"docs":{},".":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}}},")":{"docs":{},".":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0019387359441644049},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.003942181340341655},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.005242463958060288},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"modules/":{"ref":"modules/","tf":0.0036003600360036},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.004026170105686965},"pattern/":{"ref":"pattern/","tf":0.0044004400440044},"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/special.html":{"ref":"templates/special.html","tf":0.005669737774627924},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}},")":{"docs":{},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},".":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}}}},"t":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"x":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.006863780359028511},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"i":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}}}},"e":{"docs":{},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},"d":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"types/struct.html":{"ref":"types/struct.html","tf":0.023636363636363636},"types/enum.html":{"ref":"types/enum.html","tf":0.011789924973204717},"objects/":{"ref":"objects/","tf":0.008333333333333333},"objects/class.html":{"ref":"objects/class.html","tf":0.027105517909002903},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.013289036544850499},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0026399155227032735},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.0049504950495049506},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},"s":{"1":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},"docs":{}}},"2":{"docs":{},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"docs":{}}},"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0036363636363636364},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},")":{"docs":{},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}},"v":{"docs":{},"e":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/":{"ref":"objects/","tf":0.004166666666666667}},"e":{"docs":{},",":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}},".":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.01160092807424594},"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.011086474501108648},"primitives/types.html":{"ref":"primitives/types.html","tf":0.007367196587824738},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.00513405590416429},"primitives/control.html":{"ref":"primitives/control.html","tf":0.011826544021024968},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.008784773060029283},"advanced/references.html":{"ref":"advanced/references.html","tf":0.012364760432766615},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"modules/":{"ref":"modules/","tf":0.0054005400540054005},"types/":{"ref":"types/","tf":0.047619047619047616},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"types/enum.html":{"ref":"types/enum.html","tf":0.0053590568060021436},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714},"objects/":{"ref":"objects/","tf":0.008333333333333333},"objects/class.html":{"ref":"objects/class.html","tf":0.00484027105517909},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0026399155227032735},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00911854103343465},"objects/cast.html":{"ref":"objects/cast.html","tf":0.010434782608695653},"functions/":{"ref":"functions/","tf":0.006039255158530448},"pattern/":{"ref":"pattern/","tf":0.00935093509350935},"errors/main.html":{"ref":"errors/main.html","tf":0.005504587155963303},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.006417112299465241},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.010471204188481676},"templates/":{"ref":"templates/","tf":0.014146772767462422},"templates/special.html":{"ref":"templates/special.html","tf":0.009213323883770375},"templates/cte.html":{"ref":"templates/cte.html","tf":0.007617728531855956},"templates/values.html":{"ref":"templates/values.html","tf":0.010922330097087379},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.010344827586206896},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0034602076124567475}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},":":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}},"s":{"docs":{},":":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}}},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}},"c":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"t":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}},"m":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"templates/special.html":{"ref":"templates/special.html","tf":0.003543586109142452},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"s":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}}}}},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0027002700270027003}}}}}},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104}}},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},",":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}}}},"g":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}}},"e":{"docs":{},"t":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635}}}}}}},"b":{"docs":{},"l":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"types/":{"ref":"types/","tf":0.047619047619047616},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}},"c":{"docs":{},"u":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"s":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}},"o":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.005912786400591279},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0034897246994959287},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.017683970336565887},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.017001545595054096},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.011795543905635648},"modules/":{"ref":"modules/","tf":0.017101710171017102},"types/enum.html":{"ref":"types/enum.html","tf":0.007502679528403001},"types/aka.html":{"ref":"types/aka.html","tf":0.03428571428571429},"objects/":{"ref":"objects/","tf":0.0125},"objects/class.html":{"ref":"objects/class.html","tf":0.010648596321393998},"objects/methods.html":{"ref":"objects/methods.html","tf":0.007329842931937173},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.02375923970432946},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0060790273556231},"objects/cast.html":{"ref":"objects/cast.html","tf":0.019130434782608695},"functions/":{"ref":"functions/","tf":0.019124308002013084},"pattern/":{"ref":"pattern/","tf":0.006600660066006601},"errors/main.html":{"ref":"errors/main.html","tf":0.02018348623853211},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.034224598930481284},"errors/option.html":{"ref":"errors/option.html","tf":0.016172506738544475},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.010471204188481676},"templates/":{"ref":"templates/","tf":0.01768346595932803},"templates/special.html":{"ref":"templates/special.html","tf":0.03401842664776754},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0332409972299169},"templates/values.html":{"ref":"templates/values.html","tf":0.03398058252427184},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.010344827586206896},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.009652509652509652}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"modules/":{"ref":"modules/","tf":0.0018001800180018},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},"y":{"docs":{},"r":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}},"(":{"2":{"docs":{},")":{"docs":{},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}},"docs":{}},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"_":{"docs":{},"a":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088}},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"modules/":{"ref":"modules/","tf":0.0018001800180018},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.017699115044247787},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/catching.html":{"ref":"errors/catching.html","tf":0.008556149732620321}}}}},"!":{"0":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"1":{"2":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"2":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"3":{"0":{"0":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.002770083102493075}}},"docs":{}},"docs":{}},"4":{"2":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"docs":{}},"docs":{},"(":{"docs":{},"i":{"3":{"2":{"docs":{},",":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}},"docs":{}},"docs":{}},"&":{"docs":{},"a":{"docs":{},")":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}},"x":{"docs":{},")":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}},"[":{"docs":{},"i":{"3":{"2":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"]":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"docs":{}},"docs":{}}},"f":{"3":{"2":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}},"docs":{}},"docs":{},"o":{"docs":{},"o":{"docs":{},"!":{"docs":{},"i":{"3":{"2":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}},"docs":{}},"docs":{}}}}}},"i":{"3":{"2":{"docs":{"templates/":{"ref":"templates/","tf":0.004420866489832007},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}},"docs":{}},"docs":{}},"{":{"1":{"4":{"docs":{},"}":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"docs":{}},"2":{"docs":{},"}":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"3":{"8":{"docs":{},"}":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"docs":{}},"5":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"!":{"docs":{},"i":{"3":{"2":{"docs":{},"}":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}},"docs":{}},"docs":{}}}}}},"i":{"3":{"2":{"docs":{},",":{"docs":{"templates/":{"ref":"templates/","tf":0.0017683465959328027}}}},"docs":{}},"docs":{}},"\"":{"docs":{},"h":{"docs":{},"i":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},"n":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.00554016620498615}}},"|":{"docs":{},"x":{"docs":{},",":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"|":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}},"\"":{"docs":{},"h":{"docs":{},"i":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},"u":{"6":{"4":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},"docs":{}},"docs":{}}},")":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.013921113689095127},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"?":{"docs":{},",":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}}},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}}}},"e":{"docs":{},"w":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"docs":{"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}}}},"docs":{"hello-world/":{"ref":"hello-world/","tf":0.019801980198019802},"primitives/":{"ref":"primitives/","tf":0.043478260869565216},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.002714230321830167},"primitives/functions.html":{"ref":"primitives/functions.html","tf":10.034227039361095},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.013910355486862442},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.011795543905635648},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"advanced/best.html":{"ref":"advanced/best.html","tf":0.022613065326633167},"modules/":{"ref":"modules/","tf":0.0144014401440144},"types/struct.html":{"ref":"types/struct.html","tf":0.0036363636363636364},"types/enum.html":{"ref":"types/enum.html","tf":0.004287245444801715},"objects/class.html":{"ref":"objects/class.html","tf":0.00484027105517909},"objects/methods.html":{"ref":"objects/methods.html","tf":0.005235602094240838},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.004223864836325237},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":5.036738802214393},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.045871559633027525},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.022922636103151862},"errors/catching.html":{"ref":"errors/catching.html","tf":0.017112299465240642},"errors/option.html":{"ref":"errors/option.html","tf":0.008086253369272238},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":3.4171029668411865},"templates/":{"ref":"templates/","tf":0.01237842617152962},"templates/special.html":{"ref":"templates/special.html","tf":0.01771793054571226},"templates/cte.html":{"ref":"templates/cte.html","tf":0.022853185595567867},"templates/values.html":{"ref":"templates/values.html","tf":0.007281553398058253},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.011583011583011582},"templates/operators.html":{"ref":"templates/operators.html","tf":0.010380622837370242}},",":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0034227039361095267},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"functions/":{"ref":"functions/","tf":0.004529441368897836},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/main.html":{"ref":"errors/main.html","tf":0.005504587155963303},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0042780748663101605},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.00513405590416429},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.004026170105686965},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0032085561497326204},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0035366931918656055},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},"s":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"docs":{}}},"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"functions/":{"ref":"functions/","tf":0.0010065425264217413}}},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0010065425264217413},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}},")":{"docs":{},",":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}},")":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088}}},"n":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}}}}}}},"l":{"docs":{},"l":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"modules/":{"ref":"modules/","tf":0.0009000900090009}},"i":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":5.0026281208935615}},"s":{"2":{"docs":{},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}},"docs":{},".":{"docs":{"primitives/":{"ref":"primitives/","tf":0.043478260869565216}}}},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"a":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.002714230321830167},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}},"g":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0026399155227032735}}}}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},"s":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471}}}},"n":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"functions/":{"ref":"functions/","tf":0.0050327126321087065},"templates/special.html":{"ref":"templates/special.html","tf":0.002834868887313962},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}},")":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}},"g":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.009652509652509652}},"+":{"docs":{},"+":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}},"c":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635},"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"modules/":{"ref":"modules/","tf":0.0018001800180018},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002770083102493075},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}},"t":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}},".":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.002834868887313962}},"!":{"docs":{},"{":{"docs":{},"[":{"docs":{},"i":{"3":{"2":{"docs":{},"]":{"docs":{},"}":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}},"docs":{}},"docs":{}}},"i":{"3":{"2":{"docs":{},"}":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"docs":{}},"docs":{}},"x":{"docs":{},"}":{"docs":{},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}}}}}},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},".":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},"}":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}}}},"v":{"docs":{},"e":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.004392386530014641},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0018001800180018},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"n":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"modules/":{"ref":"modules/","tf":0.0027002700270027003},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"templates/special.html":{"ref":"templates/special.html","tf":0.002834868887313962}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},".":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}},"n":{"docs":{},"u":{"docs":{},".":{"docs":{},"y":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"@":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}}}}}}}}}}}}}},"y":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"/":{"9":{"docs":{},".":{"3":{"docs":{},".":{"0":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635}}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"/":{"9":{"docs":{},".":{"3":{"docs":{},".":{"0":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"/":{"docs":{},"y":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},".":{"docs":{},"y":{"docs":{},"r":{"docs":{},"\"":{"docs":{},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},":":{"8":{"2":{"0":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"c":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},".":{"6":{"docs":{},":":{"docs":{},"?":{"docs":{},"?":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}},"docs":{}}}}}}}}}}}},"y":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.02320185614849188},"hello-world/":{"ref":"hello-world/","tf":0.0297029702970297},"modules/":{"ref":"modules/","tf":0.004500450045004501},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},".":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901}}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.015521064301552107},"modules/":{"ref":"modules/","tf":0.0063006300630063005},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.008571428571428572},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}},"o":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}},"o":{"docs":{},"d":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/best.html":{"ref":"advanced/best.html","tf":0.022613065326633167},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}},",":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704}}}}},"a":{"docs":{},"l":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}},"s":{"docs":{},"p":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}},"o":{"docs":{},"w":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}},"e":{"docs":{},"p":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}},"3":{"docs":{},".":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}},"4":{"docs":{},".":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}},"docs":{}}},"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":5.038681948424069},"errors/catching.html":{"ref":"errors/catching.html","tf":0.023529411764705882},"traits/disposable.html":{"ref":"traits/disposable.html","tf":5.007246376811594}},"s":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}},"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}},"docs":{},")":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}},",":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}},",":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},".":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}},",":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0071633237822349575},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0057306590257879654},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}}}},".":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/":{"ref":"objects/","tf":0.004166666666666667},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}},"e":{"docs":{},",":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}},"b":{"docs":{},"a":{"docs":{},"g":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}}},"i":{"docs":{},"n":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}},")":{"docs":{},".":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}},"v":{"docs":{},"e":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}},"l":{"docs":{},"o":{"docs":{"hello-world/":{"ref":"hello-world/","tf":5.0594059405940595},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}},".":{"docs":{},"y":{"docs":{},"r":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.0297029702970297}}}}}}}},"r":{"docs":{},"e":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"types/enum.html":{"ref":"types/enum.html","tf":0.003215434083601286},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}}}},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}}}},"a":{"docs":{},"p":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"functions/":{"ref":"functions/","tf":0.0010065425264217413}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"objects/":{"ref":"objects/","tf":0.004166666666666667}}},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}}}}},"x":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}},"n":{"docs":{},"c":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216}}}},"i":{"docs":{},"r":{"docs":{"objects/":{"ref":"objects/","tf":0.008333333333333333},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.010559662090813094},"objects/traits.html":{"ref":"objects/traits.html","tf":0.004052684903748734},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502}},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},"s":{"docs":{},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}},"i":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},"g":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.004640371229698376},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},"l":{"docs":{},"i":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"advanced/best.html":{"ref":"advanced/best.html","tf":0.01507537688442211},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}},".":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}}}}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{"modules/":{"ref":"modules/","tf":0.0027002700270027003}}},"y":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"docs":{}}},"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}},"l":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"errors/main.html":{"ref":"errors/main.html","tf":5.005504587155963},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}},"docs":{}}},"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},")":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.021739130434782608},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},".":{"docs":{"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},"d":{"docs":{"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}}}},"v":{"docs":{},"e":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}},"s":{"docs":{},"h":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":10.03225806451613}},"e":{"1":{"docs":{},".":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}}},"docs":{},",":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"!":{"docs":{},"{":{"docs":{},"&":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},",":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}}}},"u":{"docs":{},"g":{"docs":{},"e":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}},"i":{"1":{"6":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0019387359441644049}}},"docs":{}},"3":{"2":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.005173688100517369},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0058162078324932144},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.018824871648602397},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/":{"ref":"advanced/","tf":0.005856515373352855},"advanced/references.html":{"ref":"advanced/references.html","tf":0.00463678516228748},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.014545454545454545},"types/enum.html":{"ref":"types/enum.html","tf":0.004287245444801715},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.003695881731784583},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.008555611474584801},"pattern/":{"ref":"pattern/","tf":0.007700770077007701},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/":{"ref":"templates/","tf":0.0035366931918656055},"templates/special.html":{"ref":"templates/special.html","tf":0.004252303330970942},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0034626038781163434},"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}},")":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.00912721049629207},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0061823802163833074},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714},"objects/class.html":{"ref":"objects/class.html","tf":0.008712487899322363},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.009424083769633508},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"functions/":{"ref":"functions/","tf":0.007045797684952189},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/main.html":{"ref":"errors/main.html","tf":0.005504587155963303},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0032085561497326204},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.016147635524798153}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},",":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}},")":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.00513405590416429},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"pattern/":{"ref":"pattern/","tf":0.0049504950495049506},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.002834868887313962},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}},";":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/class.html":{"ref":"objects/class.html","tf":0.007744433688286544},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.009966777408637873},"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0021119324181626186},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0057670126874279125}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}},"?":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}},"]":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.00655307994757536},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188},"advanced/best.html":{"ref":"advanced/best.html","tf":0.007537688442211055}},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}},"]":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}},"]":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}},")":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704}}},"}":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"|":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.010471204188481676}}},"}":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.007281553398058253}},")":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}}}}}}},"(":{"1":{"docs":{},")":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"4":{"2":{"docs":{},")":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"docs":{}},"docs":{}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}},"docs":{}},"6":{"4":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0023264831329972858},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},")":{"docs":{},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},".":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"}":{"docs":{},")":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263}}}}},"docs":{}},"8":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0034897246994959287}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"hello-world/":{"ref":"hello-world/","tf":0.019801980198019802},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0066518847006651885},"primitives/types.html":{"ref":"primitives/types.html","tf":0.006591702210158977},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.006274957216200799},"primitives/control.html":{"ref":"primitives/control.html","tf":0.006570302233902759},"advanced/":{"ref":"advanced/","tf":0.010248901903367497},"advanced/references.html":{"ref":"advanced/references.html","tf":0.00463678516228748},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.009174311926605505},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.011730205278592375},"modules/":{"ref":"modules/","tf":0.0315031503150315},"types/struct.html":{"ref":"types/struct.html","tf":0.00909090909090909},"types/enum.html":{"ref":"types/enum.html","tf":0.004287245444801715},"types/aka.html":{"ref":"types/aka.html","tf":0.014285714285714285},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.003872216844143272},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.004751847940865892},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0070921985815602835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.008555611474584801},"pattern/":{"ref":"pattern/","tf":0.0088008800880088},"errors/main.html":{"ref":"errors/main.html","tf":0.005504587155963303},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0071633237822349575},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0074866310160427805},"errors/option.html":{"ref":"errors/option.html","tf":0.008086253369272238},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.010471204188481676},"templates/":{"ref":"templates/","tf":0.007957559681697613},"templates/special.html":{"ref":"templates/special.html","tf":0.007087172218284904},"templates/cte.html":{"ref":"templates/cte.html","tf":0.00554016620498615},"templates/values.html":{"ref":"templates/values.html","tf":0.007281553398058253},"objects/common_traits.html":{"ref":"objects/common_traits.html","tf":0.05263157894736842},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.010344827586206896},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.03225806451612903},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.009652509652509652},"templates/operators.html":{"ref":"templates/operators.html","tf":0.008073817762399077}},"a":{"docs":{},"n":{"docs":{},"t":{"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}},"docs":{}}},"docs":{},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/common_traits.html":{"ref":"objects/common_traits.html","tf":0.05263157894736842}}},")":{"docs":{},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"5":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}},"s":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}},")":{"docs":{},".":{"docs":{"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}}}}}},",":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}}},"s":{"docs":{},"s":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.010050251256281407},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},".":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{"./":{"ref":"./","tf":0.004640371229698376},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}},"l":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0121580547112462},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"templates/special.html":{"ref":"templates/special.html","tf":0.008504606661941885},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.013793103448275862},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.017699115044247787},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.014492753623188406},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}},"i":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216},"advanced/best.html":{"ref":"advanced/best.html","tf":0.01507537688442211},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.004287245444801715},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0020130850528434826}},"l":{"docs":{},"i":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},",":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}},",":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/traits.html":{"ref":"objects/traits.html","tf":0.025329280648429583},"templates/special.html":{"ref":"templates/special.html","tf":0.004961020552799433},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}},".":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155}}}}}}}}}}}}},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"functions/":{"ref":"functions/","tf":0.0010065425264217413}},":":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.003695491500369549},"advanced/":{"ref":"advanced/","tf":0.005856515373352855},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.00655307994757536},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"functions/":{"ref":"functions/","tf":0.001509813789632612},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}}}},"u":{"docs":{},"t":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}}}},"n":{"docs":{},"c":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635}}},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}}}}},"m":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}},"a":{"docs":{},"s":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}}}}},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"modules/":{"ref":"modules/","tf":0.0036003600360036},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.025522041763341066}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}},"2":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}},"2":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}},"/":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"/":{"docs":{},".":{"docs":{},".":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"/":{"docs":{},"g":{"docs":{},"c":{"docs":{},"c":{"docs":{},"/":{"docs":{},"x":{"8":{"6":{"docs":{},"_":{"6":{"4":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{"objects/":{"ref":"objects/","tf":0.0125},"objects/class.html":{"ref":"objects/class.html","tf":0.00968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.008376963350785341},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.021505376344086023},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}},"e":{"1":{"docs":{},".":{"2":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}}},".":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.014492753623188406}}},"s":{"docs":{},",":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}},".":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}},"i":{"docs":{"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/special.html":{"ref":"templates/special.html","tf":0.003543586109142452}},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"2":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}},"docs":{}}},"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}},"docs":{},".":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}}}}},"t":{"docs":{},"i":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}}},"i":{"docs":{},"d":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0034227039361095267},"primitives/control.html":{"ref":"primitives/control.html","tf":0.003942181340341655},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/best.html":{"ref":"advanced/best.html","tf":0.007537688442211055},"modules/":{"ref":"modules/","tf":0.004500450045004501},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.005235602094240838},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0021119324181626186},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"objects/cast.html":{"ref":"objects/cast.html","tf":0.006956521739130435},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"errors/option.html":{"ref":"errors/option.html","tf":0.008086253369272238},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.017241379310344827},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}}}},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},"t":{"docs":{"./":{"ref":"./","tf":10.004640371229698},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}},"i":{"docs":{},"o":{"docs":{},"n":{"2":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}},"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},"v":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}}},"g":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.006203955021326095},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"s":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}},"r":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.007281553398058253}}}},"n":{"docs":{},"d":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}}},"f":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464}}}}}}},"e":{"docs":{},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"functions/":{"ref":"functions/","tf":0.001509813789632612},"templates/":{"ref":"templates/","tf":0.01237842617152962},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}},"o":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}},"r":{"docs":{},"m":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0052173913043478265},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},",":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"i":{"docs":{},"t":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.006570302233902759},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":10.001583949313622},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"docs":{}}},"docs":{},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},")":{"docs":{},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0038774718883288098},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825}},"i":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.014042867701404288},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197}}},"s":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}},"s":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0031019775106630476},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.004287245444801715},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197}},")":{"docs":{},"*":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}}}}},"l":{"docs":{},"u":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/":{"ref":"modules/","tf":0.0018001800180018}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"functions/":{"ref":"functions/","tf":0.0005032712632108706}},"x":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/":{"ref":"objects/","tf":0.004166666666666667},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}},"i":{"docs":{},"c":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}},"i":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}}},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"t":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"o":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714}}}}}}}}}}}},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},"e":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}},",":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},".":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}},"n":{"docs":{},"t":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.003993154592127781},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.005454545454545455},"types/enum.html":{"ref":"types/enum.html","tf":0.006430868167202572},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.009213323883770375},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},")":{"docs":{},"*":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"s":{"docs":{},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},",":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0029563932002956393},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"functions/":{"ref":"functions/","tf":0.0010065425264217413}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}}}}}}}},"t":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"modules/":{"ref":"modules/","tf":0.0018001800180018},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"modules/":{"ref":"modules/","tf":0.0009000900090009}}},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}},"e":{"docs":{},"r":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.02759526938239159}}}},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}},")":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}},".":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0019387359441644049}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}}},"s":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}},"!":{"docs":{},"{":{"docs":{},"x":{"docs":{},"}":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263}},"{":{"docs":{},"t":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263}}}}}}}},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}}}},"f":{"docs":{},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}}}}}}},"p":{"docs":{},"v":{"4":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.004287245444801715}},".":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}},";":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}}},"docs":{}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}}}}}}}}}}},")":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}},";":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}}},"[":{"0":{"docs":{},"]":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"docs":{}},"'":{"docs":{},"m":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806}}}}},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}}}},"y":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"1":{"docs":{},".":{"2":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}},"docs":{}}},"docs":{}}},"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.005912786400591279},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0031019775106630476},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"primitives/control.html":{"ref":"primitives/control.html","tf":0.006570302233902759},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0061823802163833074},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.009174311926605505},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.008797653958944282},"modules/":{"ref":"modules/","tf":0.0027002700270027003},"types/struct.html":{"ref":"types/struct.html","tf":0.0036363636363636364},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.008712487899322363},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"functions/":{"ref":"functions/","tf":0.003019627579265224},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806},"templates/values.html":{"ref":"templates/values.html","tf":0.007281553398058253},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},"s":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}}},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}}},".":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},"n":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"objects/":{"ref":"objects/","tf":0.004166666666666667},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002770083102493075},"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}}}}}}}}},";":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}}},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"n":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.002770083102493075}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0032085561497326204},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.009280742459396751},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}},"e":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"objects/":{"ref":"objects/","tf":0.008333333333333333},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}},".":{"docs":{"./":{"ref":"./","tf":0.004640371229698376},"primitives/":{"ref":"primitives/","tf":0.043478260869565216},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}},")":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"s":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197}}},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.002852253280091272},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"r":{"docs":{},"g":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"modules/":{"ref":"modules/","tf":0.0009000900090009}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}}},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"functions/":{"ref":"functions/","tf":0.011575239053850024},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.010471204188481676},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},",":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"1":{"docs":{},".":{"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}},"docs":{}}},"docs":{}}},"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"advanced/":{"ref":"advanced/","tf":0.016105417276720352},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.008797653958944282},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},".":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182}}}}}},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{"primitives/":{"ref":"primitives/","tf":0.043478260869565216},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144}}}},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}},"k":{"docs":{},"s":{"docs":{},")":{"docs":{},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}}}},"v":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}},"f":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"f":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}},"t":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}}}}},"'":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.002714230321830167}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}},"s":{"docs":{},"s":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}},"i":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},"b":{"docs":{},"c":{"6":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}},"docs":{}},"g":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}},"c":{"1":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}},"docs":{}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}},"_":{"9":{"docs":{},".":{"3":{"docs":{},".":{"0":{"docs":{},"_":{"docs":{},"a":{"docs":{},"m":{"docs":{},"d":{"6":{"4":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}},"p":{"1":{"0":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}},"docs":{}},"docs":{}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}}}}},"p":{"docs":{},"c":{"3":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}},"docs":{}},"f":{"docs":{},"r":{"6":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}},"docs":{}}}}},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},",":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}},"i":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}},".":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}},":":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}},"s":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}},"n":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.041237113402061855},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.003993154592127781},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/":{"ref":"advanced/","tf":0.004392386530014641},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0036003600360036},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.004223864836325237},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0052173913043478265},"functions/":{"ref":"functions/","tf":0.003019627579265224},"pattern/":{"ref":"pattern/","tf":0.0027502750275027505},"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"templates/":{"ref":"templates/","tf":0.0035366931918656055},"templates/special.html":{"ref":"templates/special.html","tf":0.007795889440113395},"templates/cte.html":{"ref":"templates/cte.html","tf":0.004155124653739612},"templates/values.html":{"ref":"templates/values.html","tf":0.006067961165048544},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},"s":{"docs":{},".":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}}},"u":{"docs":{},"x":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}},"k":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}}},"f":{"docs":{},"e":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}},"e":{"1":{"docs":{},".":{"5":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0058162078324932144},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.004392386530014641},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"templates/cte.html":{"ref":"templates/cte.html","tf":0.004847645429362881}},"a":{"docs":{},"l":{"1":{"docs":{},".":{"2":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"docs":{}}},"3":{"docs":{},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}},"docs":{}}},"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.009569377990430622},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},"s":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},")":{"docs":{},"?":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}}}}}}}},"t":{"docs":{},"l":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}},"v":{"docs":{},"e":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}},"s":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0058162078324932144},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0034227039361095267},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.004287245444801715},"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}},".":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}}},"e":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}},"d":{"docs":{},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"modules/":{"ref":"modules/","tf":0.0018001800180018}}},"p":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.040735873850197106},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.005256241787122208}}},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}}}}}},"s":{"2":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}},"docs":{}}},"docs":{}}},"docs":{},":":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}},",":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.005912786400591279},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0022818026240730175},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"modules/":{"ref":"modules/","tf":0.0009000900090009},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.006430868167202572}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}}}},",":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}}}},"n":{"docs":{},"g":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}},"e":{"docs":{},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},",":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}},"a":{"docs":{},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"s":{"docs":{},"s":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/":{"ref":"objects/","tf":0.004166666666666667},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}},"e":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},"t":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}},"w":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}},"e":{"docs":{},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},")":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}},"s":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}},"g":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}},"i":{"docs":{},"c":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.009569377990430622}}}},"s":{"docs":{},",":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}}}},"s":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901}}},"d":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"m":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"!":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}},"n":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"hello-world/":{"ref":"hello-world/","tf":0.019801980198019802},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.010347376201034738},"primitives/types.html":{"ref":"primitives/types.html","tf":0.008918185343156262},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.013120365088419851},"primitives/control.html":{"ref":"primitives/control.html","tf":0.011826544021024968},"advanced/":{"ref":"advanced/","tf":0.005856515373352855},"advanced/references.html":{"ref":"advanced/references.html","tf":0.00927357032457496},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.009174311926605505},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.011730205278592375},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.013501350135013501},"types/struct.html":{"ref":"types/struct.html","tf":0.01},"types/enum.html":{"ref":"types/enum.html","tf":0.006430868167202572},"types/aka.html":{"ref":"types/aka.html","tf":0.011428571428571429},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.003872216844143272},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.013289036544850499},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0062827225130890054},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.004751847940865892},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"objects/cast.html":{"ref":"objects/cast.html","tf":0.006956521739130435},"functions/":{"ref":"functions/","tf":0.011071967790639155},"pattern/":{"ref":"pattern/","tf":0.010451045104510451},"errors/main.html":{"ref":"errors/main.html","tf":0.007339449541284404},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.011461318051575931},"errors/catching.html":{"ref":"errors/catching.html","tf":0.012834224598930482},"errors/option.html":{"ref":"errors/option.html","tf":0.008086253369272238},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.01237842617152962},"templates/special.html":{"ref":"templates/special.html","tf":0.007795889440113395},"templates/cte.html":{"ref":"templates/cte.html","tf":0.009002770083102494},"templates/values.html":{"ref":"templates/values.html","tf":0.006067961165048544},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861},"templates/operators.html":{"ref":"templates/operators.html","tf":0.00922722029988466}},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0027002700270027003}},"y":{"docs":{},"r":{"docs":{"modules/":{"ref":"modules/","tf":0.008100810081008101},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},":":{"docs":{},"(":{"1":{"0":{"docs":{},",":{"1":{"2":{"docs":{},")":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}},"4":{"docs":{},")":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"docs":{}},"2":{"1":{"docs":{},")":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"docs":{}},"6":{"docs":{},")":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"9":{"docs":{},")":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"docs":{}}},"1":{"docs":{},",":{"7":{"docs":{},")":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}}},"docs":{}}},"2":{"docs":{},",":{"1":{"0":{"docs":{},")":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}},"1":{"docs":{},")":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"8":{"docs":{},")":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}},"docs":{}},"5":{"docs":{},")":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}},"6":{"docs":{},")":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"docs":{}}},"3":{"docs":{},",":{"1":{"1":{"docs":{},")":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}},"docs":{}},"4":{"docs":{},")":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"5":{"docs":{},")":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806}}}},"7":{"docs":{},")":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}},"docs":{}}},"4":{"docs":{},",":{"1":{"1":{"docs":{},")":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"7":{"docs":{},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"8":{"docs":{},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"docs":{}},"2":{"docs":{},")":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}},"3":{"docs":{},")":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}}}},"4":{"docs":{},")":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}},"9":{"docs":{},")":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353}}}},"docs":{}}},"5":{"docs":{},",":{"1":{"4":{"docs":{},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"docs":{}},"3":{"docs":{},")":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}}}},"docs":{}}},"6":{"docs":{},",":{"1":{"4":{"docs":{},")":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"docs":{}},"4":{"docs":{},")":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"docs":{}}},"7":{"docs":{},",":{"1":{"0":{"docs":{},")":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},"docs":{}},"2":{"docs":{},")":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}},"5":{"docs":{},")":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},"7":{"docs":{},")":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}},"8":{"docs":{},")":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704}}}},"9":{"docs":{},")":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353}}}},"docs":{}}},"8":{"docs":{},",":{"1":{"3":{"docs":{},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0010065425264217413}}}},"5":{"docs":{},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"docs":{}},"7":{"docs":{},")":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155}}}},"docs":{}}},"9":{"docs":{},",":{"1":{"7":{"docs":{},")":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},"docs":{}},"docs":{}}},"docs":{},",":{"1":{"6":{"docs":{},")":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}},"docs":{}},"5":{"docs":{},")":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}},"7":{"docs":{},")":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}},"docs":{}}},"2":{"0":{"docs":{},",":{"5":{"docs":{},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"docs":{}}},"1":{"docs":{},",":{"1":{"4":{"docs":{},")":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}},"docs":{}},"3":{"docs":{},")":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}},"4":{"docs":{},")":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}},"docs":{}}},"8":{"docs":{},",":{"1":{"0":{"docs":{},")":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},"5":{"docs":{},")":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"docs":{}},"9":{"docs":{},")":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},"docs":{}}},"docs":{},",":{"1":{"0":{"docs":{},")":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"docs":{}},"9":{"docs":{},")":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197}}}},"docs":{}}},"3":{"1":{"docs":{},",":{"4":{"5":{"docs":{},")":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"docs":{}},"docs":{}}},"docs":{},",":{"1":{"0":{"docs":{},")":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"functions/":{"ref":"functions/","tf":0.0010065425264217413}}}},"1":{"docs":{},")":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}},"3":{"docs":{},")":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}},"5":{"docs":{},")":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}},"6":{"docs":{},")":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"9":{"docs":{},")":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}},"docs":{}},"2":{"2":{"docs":{},")":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}},"4":{"docs":{},")":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"6":{"docs":{},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"8":{"docs":{},")":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"9":{"docs":{},")":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"docs":{}},"4":{"7":{"docs":{},")":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}}},"docs":{}},"5":{"docs":{},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002770083102493075}}}},"9":{"docs":{},")":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}},"docs":{}}},"4":{"docs":{},",":{"1":{"0":{"docs":{},")":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"1":{"docs":{},")":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}},"3":{"docs":{},")":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}}},"5":{"docs":{},")":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}},"docs":{}},"2":{"0":{"docs":{},")":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"docs":{}},"6":{"docs":{},")":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"docs":{}}},"5":{"docs":{},",":{"1":{"0":{"docs":{},")":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}},"1":{"docs":{},")":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"3":{"docs":{},")":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}}}},"docs":{},")":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"2":{"9":{"docs":{},")":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}},"docs":{},")":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}},"4":{"docs":{},")":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}},"5":{"docs":{},")":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.004847645429362881}}}},"7":{"docs":{},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"8":{"docs":{},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"docs":{}}},"6":{"docs":{},",":{"1":{"0":{"docs":{},")":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"2":{"docs":{},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"4":{"docs":{},")":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},"docs":{}},"3":{"docs":{},")":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},"6":{"docs":{},")":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"9":{"docs":{},")":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}}}},"docs":{}}},"7":{"docs":{},",":{"1":{"6":{"docs":{},")":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"docs":{}},"2":{"docs":{},")":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}},"5":{"docs":{},")":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"7":{"docs":{},")":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"docs":{}}},"8":{"docs":{},",":{"1":{"0":{"docs":{},")":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}},"3":{"docs":{},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"4":{"docs":{},")":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}},"5":{"docs":{},")":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}},"docs":{}},"2":{"4":{"docs":{},")":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"docs":{},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"5":{"docs":{},")":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},"7":{"docs":{},")":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}},"docs":{}}},"9":{"docs":{},",":{"5":{"docs":{},")":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202}}}},"7":{"docs":{},")":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}}},"docs":{}}},"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"+":{"0":{"docs":{},"x":{"3":{"docs":{},"e":{"docs":{},")":{"docs":{},":":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}},";":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0060790273556231}}},"l":{"docs":{},"i":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}},")":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"types/enum.html":{"ref":"types/enum.html","tf":0.003215434083601286},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}}}}}},")":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},".":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}},"z":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642}}}}},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.007537688442211055}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}},"(":{"0":{"docs":{},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"1":{"docs":{},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"9":{"8":{"docs":{},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"docs":{}},"docs":{},"[":{"docs":{},"[":{"1":{"docs":{},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182}}}},"9":{"docs":{},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"docs":{}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}}}}}}}}}}}}}},"u":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}}}},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}},"(":{"docs":{},"[":{"docs":{},"c":{"3":{"2":{"docs":{},"]":{"docs":{},")":{"docs":{},")":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}}},"docs":{}},"docs":{}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}}}}}},"a":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}},")":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},"}":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}}},"(":{"docs":{},")":{"docs":{},"]":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"functions/":{"ref":"functions/","tf":0.001509813789632612},"errors/main.html":{"ref":"errors/main.html","tf":0.007339449541284404},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},"]":{"docs":{},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}},"(":{"1":{"2":{"docs":{},",":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931}}}},"docs":{}},"4":{"2":{"docs":{},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"docs":{}},"docs":{},"i":{"3":{"2":{"docs":{},")":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}}}}}}}},"docs":{}},"docs":{"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.017699115044247787}}},")":{"docs":{"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}},"y":{"docs":{},")":{"docs":{},"=":{"docs":{},">":{"3":{"4":{"docs":{},"}":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}}},"docs":{}},"docs":{}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}}}}}}}}}},"v":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}},"x":{"docs":{},"(":{"docs":{},"[":{"docs":{},"i":{"3":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"docs":{},"c":{"3":{"2":{"docs":{},"]":{"docs":{},")":{"docs":{},":":{"docs":{},":":{"docs":{},"x":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}}},"docs":{}},"docs":{}}}},")":{"docs":{},":":{"docs":{},":":{"docs":{},"x":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}}},"docs":{}},"docs":{}},"c":{"3":{"2":{"docs":{},"]":{"docs":{},")":{"docs":{},":":{"docs":{},":":{"docs":{},"x":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}}},"docs":{}},"docs":{}}},"i":{"3":{"2":{"docs":{},",":{"docs":{},"c":{"3":{"2":{"docs":{},")":{"docs":{},":":{"docs":{},":":{"docs":{},"x":{"docs":{"templates/":{"ref":"templates/","tf":0.0017683465959328027}}}}}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"f":{"3":{"2":{"docs":{},")":{"docs":{},":":{"docs":{},":":{"docs":{},"x":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}},"docs":{}},"docs":{}}}}}},",":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}},"k":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.004640371229698376},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.005173688100517369},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.007320644216691069},"advanced/references.html":{"ref":"advanced/references.html","tf":0.00463678516228748},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.01466275659824047},"advanced/best.html":{"ref":"advanced/best.html","tf":0.01256281407035176},"modules/":{"ref":"modules/","tf":0.0027002700270027003},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0034626038781163434},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"n":{"docs":{},"i":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/":{"ref":"templates/","tf":0.0017683465959328027}}},"a":{"docs":{},"g":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"modules/":{"ref":"modules/","tf":0.0027002700270027003},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.009174311926605505},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}},"t":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"y":{"docs":{},",":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},")":{"docs":{},".":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}},".":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}},",":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}},"c":{"docs":{},"h":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"pattern/":{"ref":"pattern/","tf":5.027502750275027},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},"i":{"docs":{},"n":{"docs":{},")":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"g":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"docs":{}}},"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825}}}}}},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},"h":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"i":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}}}}}}},"d":{"docs":{},"e":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0019387359441644049},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"advanced/best.html":{"ref":"advanced/best.html","tf":0.007537688442211055},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0031678986272439284},"objects/cast.html":{"ref":"objects/cast.html","tf":0.006956521739130435},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},",":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},"l":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}},"x":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}},"_":{"1":{"0":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}},"docs":{}},"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}},"i":{"docs":{},"m":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}},"u":{"docs":{},"m":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}}}}}}},"r":{"docs":{},"k":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}},"y":{"docs":{},"b":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635}}}}}}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"advanced/":{"ref":"advanced/","tf":0.007320644216691069},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.011730205278592375},"types/struct.html":{"ref":"types/struct.html","tf":0.0036363636363636364},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}},"y":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.003215434083601286}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}}},"s":{"docs":{},")":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}}}},"a":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.005040713454827452},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0061823802163833074},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0021119324181626186},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/":{"ref":"modules/","tf":0.0018001800180018}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}}}}}}},"t":{"2":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}},"docs":{}}},"docs":{}}},"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}},"h":{"docs":{},"o":{"docs":{},"d":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}},"4":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"docs":{}}},"docs":{}}},"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":10.036649214659686},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.016367476240760296},"objects/traits.html":{"ref":"objects/traits.html","tf":0.02634245187436677},"functions/":{"ref":"functions/","tf":0.0035228988424760945},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.021739130434782608},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.007722007722007722},"templates/operators.html":{"ref":"templates/operators.html","tf":0.011534025374855825}},",":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},".":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367}}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353}}}}}}}},"s":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}},"5":{"docs":{},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"docs":{}}},"docs":{},",":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},".":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}}},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}},"i":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.00461361014994233}},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}},"d":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"_":{"1":{"0":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}},"docs":{}},"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}},"i":{"docs":{},"m":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},"u":{"docs":{},"m":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}}},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}},")":{"docs":{},";":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.003695491500369549},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}},"o":{"docs":{},"v":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}}}},"d":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"modules/":{"ref":"modules/","tf":0.011701170117011701},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0060790273556231},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"u":{"docs":{},"l":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0029563932002956393},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"modules/":{"ref":"modules/","tf":10.05940594059406},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},"e":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"modules/":{"ref":"modules/","tf":0.0054005400540054005},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}},"s":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"3":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"docs":{},")":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}},",":{"docs":{"objects/common_traits.html":{"ref":"objects/common_traits.html","tf":0.05263157894736842}}}},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"modules/":{"ref":"modules/","tf":0.0054005400540054005},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"modules/":{"ref":"modules/","tf":0.0027002700270027003}}}},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0018001800180018},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}},"i":{"docs":{},"f":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}},"i":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0077279752704791345},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"types/struct.html":{"ref":"types/struct.html","tf":0.004545454545454545},"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}},".":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}},"r":{"docs":{},")":{"docs":{},"*":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},",":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}}}}}}}},"e":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}},")":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},",":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}},",":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197}}},")":{"docs":{},",":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}},".":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}}},"v":{"docs":{},"e":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.009569377990430622},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"functions/":{"ref":"functions/","tf":0.0025163563160543532}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}},"s":{"docs":{},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464}},"p":{"docs":{},"l":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/":{"ref":"templates/","tf":0.005305039787798408},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}},"s":{"docs":{},")":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}}}}}}}}},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.003695491500369549},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0019387359441644049},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.017569546120058566},"advanced/references.html":{"ref":"advanced/references.html","tf":0.013910355486862442},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.009174311926605505},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.017595307917888565},"advanced/best.html":{"ref":"advanced/best.html","tf":0.01256281407035176},"types/struct.html":{"ref":"types/struct.html","tf":0.01090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/class.html":{"ref":"objects/class.html","tf":0.005808325266214908},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.013289036544850499},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"functions/":{"ref":"functions/","tf":0.009562154001006542},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0034602076124567475}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}}}},"2":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}},"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}}}},"3":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}},"4":{"docs":{},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}}}},"docs":{},",":{"docs":{"primitives/":{"ref":"primitives/","tf":0.043478260869565216},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}},"l":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":5.008130081300813},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0034897246994959287},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/":{"ref":"advanced/","tf":0.029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.012364760432766615},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.011795543905635648},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.008797653958944282},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"types/struct.html":{"ref":"types/struct.html","tf":0.007272727272727273},"objects/mutability.html":{"ref":"objects/mutability.html","tf":10.03654485049834},"objects/methods.html":{"ref":"objects/methods.html","tf":0.015706806282722512},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0026399155227032735},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"e":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}}},"docs":{}}},"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/struct.html":{"ref":"types/struct.html","tf":0.006363636363636364},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.009966777408637873},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353}}},")":{"docs":{},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}}},"d":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{"functions/":{"ref":"functions/","tf":0.001509813789632612}}}}}}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}},"e":{"docs":{},"x":{"docs":{},",":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}}},"c":{"docs":{},"h":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}},",":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}}}},"y":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}},"e":{"docs":{},")":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.00461361014994233}},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.00461361014994233}}}}}}}}}}}},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.004434589800443459},"primitives/types.html":{"ref":"primitives/types.html","tf":0.005040713454827452},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.00513405590416429},"modules/":{"ref":"modules/","tf":0.010801080108010801},"types/struct.html":{"ref":"types/struct.html","tf":0.006363636363636364},"types/enum.html":{"ref":"types/enum.html","tf":0.004287245444801715},"objects/class.html":{"ref":"objects/class.html","tf":0.013552758954501452},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"objects/cast.html":{"ref":"objects/cast.html","tf":0.010434782608695653},"functions/":{"ref":"functions/","tf":0.0025163563160543532},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/main.html":{"ref":"errors/main.html","tf":0.007339449541284404},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.005305039787798408},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},"d":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}}}}}}}}}},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},")":{"docs":{},",":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0018001800180018},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}},".":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"./":{"ref":"./","tf":0.013921113689095127},"primitives/":{"ref":"primitives/","tf":0.043478260869565216}}}},"u":{"docs":{},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}}},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.004640371229698376},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0022818026240730175},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}}}},"w":{"docs":{"./":{"ref":"./","tf":0.004640371229698376},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0019387359441644049},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},"l":{"docs":{},"i":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/control.html":{"ref":"primitives/control.html","tf":0.005256241787122208},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"advanced/best.html":{"ref":"advanced/best.html","tf":0.010050251256281407},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},"l":{"docs":{},"i":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}},"y":{"docs":{},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}},"x":{"docs":{},"t":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/":{"ref":"templates/","tf":0.0017683465959328027}}}},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}},"o":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.004640371229698376},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"n":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}},"e":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"t":{"docs":{},"e":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0034227039361095267},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/best.html":{"ref":"advanced/best.html","tf":0.010050251256281407},"modules/":{"ref":"modules/","tf":0.004500450045004501},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.006430868167202572},"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0031678986272439284},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"functions/":{"ref":"functions/","tf":0.003019627579265224},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/main.html":{"ref":"errors/main.html","tf":0.005504587155963303},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/special.html":{"ref":"templates/special.html","tf":0.002834868887313962},"templates/cte.html":{"ref":"templates/cte.html","tf":0.006232686980609419},"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263}},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0010065425264217413}}}},"h":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},",":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"objects/":{"ref":"objects/","tf":0.004166666666666667},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},"i":{"docs":{},"c":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"objects/":{"ref":"objects/","tf":0.004166666666666667}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}}}},"o":{"docs":{},"n":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}}}},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"functions/":{"ref":"functions/","tf":0.001509813789632612},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"y":{"docs":{},",":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0038774718883288098},"primitives/control.html":{"ref":"primitives/control.html","tf":0.003942181340341655},"objects/":{"ref":"objects/","tf":0.004166666666666667},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}},"s":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}},"l":{"docs":{},"l":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},",":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}},".":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}}}}}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},",":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"]":{"docs":{},",":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}},"o":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.019801980198019802},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.007722007722007722}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"1":{"docs":{},".":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}},"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"modules/":{"ref":"modules/","tf":0.0018001800180018},"objects/":{"ref":"objects/","tf":10.054166666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.011616650532429816},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.016611295681063124},"objects/methods.html":{"ref":"objects/methods.html","tf":0.013612565445026177},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.005279831045406547},"objects/cast.html":{"ref":"objects/cast.html","tf":0.03304347826086956},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.03103448275862069},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.014492753623188406},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.021505376344086023},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.013513513513513514},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},"s":{"1":{"docs":{},".":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}}},"docs":{},")":{"docs":{},";":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}},".":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}}},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"functions/":{"ref":"functions/","tf":0.0005032712632108706}},"s":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"modules/":{"ref":"modules/","tf":0.0009000900090009},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}},".":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}}}}}}},"n":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0029563932002956393},"primitives/types.html":{"ref":"primitives/types.html","tf":0.002714230321830167},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"primitives/control.html":{"ref":"primitives/control.html","tf":0.006570302233902759},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.004500450045004501},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.003872216844143272},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"objects/cast.html":{"ref":"objects/cast.html","tf":0.006956521739130435},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"pattern/":{"ref":"pattern/","tf":0.0027502750275027505},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/":{"ref":"templates/","tf":0.004420866489832007},"templates/special.html":{"ref":"templates/special.html","tf":0.0063784549964564135},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002770083102493075},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"e":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},",":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},"s":{"docs":{},".":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}},"c":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"e":{"docs":{},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.004640371229698376},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634}}},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0038774718883288098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/operator.html":{"ref":"primitives/operator.html","tf":5.100478468899522},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.004500450045004501},"types/struct.html":{"ref":"types/struct.html","tf":0.0036363636363636364},"types/enum.html":{"ref":"types/enum.html","tf":0.0053590568060021436},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0062827225130890054},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"functions/":{"ref":"functions/","tf":0.003019627579265224},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.01002865329512894},"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.006232686980609419},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.014492753623188406},"templates/operators.html":{"ref":"templates/operators.html","tf":5.033448673587082}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/":{"ref":"advanced/","tf":0.004392386530014641},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0036363636363636364},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671},"functions/":{"ref":"functions/","tf":0.0005032712632108706}},"s":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},",":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}}}},",":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},",":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},".":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827}}}}}}}},"o":{"docs":{},"r":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"3":{"docs":{},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"6":{"docs":{},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"docs":{},"s":{"1":{"docs":{},".":{"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.019138755980861243},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}},".":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0010065425264217413},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}}}}}}},"q":{"docs":{},"u":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.008073817762399077}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}}}}}}}},"o":{"docs":{},"n":{"1":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"docs":{}}},"docs":{"hello-world/":{"ref":"hello-world/","tf":0.019801980198019802},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0038774718883288098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/option.html":{"ref":"errors/option.html","tf":3.3872416891284813},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002770083102493075}},"n":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464}}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"modules/":{"ref":"modules/","tf":0.0018001800180018}}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},"y":{"docs":{},",":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}}}},")":{"docs":{},":":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.006920415224913495}}},"y":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0034602076124567475}},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}}}}}}}}},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.00461361014994233}},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"s":{"docs":{},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0034602076124567475}}}}}}}},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"objects/":{"ref":"objects/","tf":0.016666666666666666},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}},"\"":{"docs":{},"s":{"8":{"docs":{"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}}},"docs":{}}},")":{"docs":{"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"1":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}},"docs":{}}},"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.0022002200220022},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}},"g":{"docs":{},"a":{"docs":{},"n":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}},"u":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901}}}}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}},"o":{"docs":{},"f":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0042780748663101605},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},",":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"modules/":{"ref":"modules/","tf":0.0009000900090009},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"e":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}},".":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}},"i":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},"x":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.010512483574244415},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.021119324181626188},"objects/traits.html":{"ref":"objects/traits.html","tf":0.015197568389057751},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"functions/":{"ref":"functions/","tf":0.001509813789632612},"pattern/":{"ref":"pattern/","tf":0.006600660066006601},"errors/main.html":{"ref":"errors/main.html","tf":0.005504587155963303},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.00791974656810982},"objects/traits.html":{"ref":"objects/traits.html","tf":0.010131712259371834},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},"e":{"1":{"docs":{},".":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}},"docs":{},"n":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0021119324181626186},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367}},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/operators.html":{"ref":"templates/operators.html","tf":5.012687427912342}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"docs":{}}},"docs":{},")":{"docs":{},".":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}}},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144}}}}}},"k":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},")":{"docs":{},",":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}},",":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}},"(":{"docs":{},")":{"docs":{"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}}}}}},"p":{"1":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182}},".":{"docs":{},"i":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},"x":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182}}}}},"2":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0036363636363636364}},".":{"docs":{},"i":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275}}}}},"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"pattern/":{"ref":"pattern/","tf":0.0033003300330033004}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.005454545454545455},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.009652509652509652}},"a":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635}},"e":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}},"b":{"docs":{},"l":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":5.007722007722008}},"e":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"docs":{}}},"docs":{},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},".":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},";":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}},"e":{"docs":{},"d":{"1":{"docs":{},".":{"5":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},".":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"t":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.009652509652509652}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}}},"r":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":0.003942181340341655},"advanced/":{"ref":"advanced/","tf":0.005856515373352855},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/":{"ref":"objects/","tf":0.008333333333333333},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.0048543689320388345}},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197}},".":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}}}},"s":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/":{"ref":"objects/","tf":0.008333333333333333},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}},"s":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.017113519680547633},"advanced/references.html":{"ref":"advanced/references.html","tf":0.00463678516228748},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.007863695937090432},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.003019627579265224},"templates/":{"ref":"templates/","tf":0.013262599469496022},"templates/special.html":{"ref":"templates/special.html","tf":0.007795889440113395},"templates/cte.html":{"ref":"templates/cte.html","tf":0.004847645429362881},"templates/values.html":{"ref":"templates/values.html","tf":0.006067961165048544},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"e":{"docs":{},"r":{"1":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}},"docs":{}}},"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}},"docs":{}}},"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"modules/":{"ref":"modules/","tf":0.0009000900090009},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"functions/":{"ref":"functions/","tf":0.001509813789632612},"templates/special.html":{"ref":"templates/special.html","tf":0.002834868887313962},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"s":{"1":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"docs":{}}},"2":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}},"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"docs":{}}},"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0034626038781163434}}},")":{"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},".":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}}}},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},")":{"docs":{},"*":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},")":{"docs":{},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.00791974656810982},"objects/traits.html":{"ref":"objects/traits.html","tf":0.004052684903748734},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353}}}}}}}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}},"s":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0018001800180018}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.007339449541284404}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}},"s":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0077279752704791345},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.001509813789632612},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"t":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"modules/":{"ref":"modules/","tf":0.0054005400540054005},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}},")":{"docs":{},"*":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"m":{"docs":{},"y":{"docs":{},"/":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"1":{"docs":{},".":{"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"docs":{}}},"docs":{}}},"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"pattern/":{"ref":"pattern/","tf":5.024752475247524},"errors/catching.html":{"ref":"errors/catching.html","tf":0.006417112299465241},"errors/option.html":{"ref":"errors/option.html","tf":0.018867924528301886},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},"*":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0027502750275027505}}},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},"*":{"docs":{},")":{"docs":{},"?":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0033003300330033004},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},"*":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},")":{"docs":{},"?":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},"?":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803}}}}}},"s":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0016501650165016502}}},",":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.004640371229698376}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/references.html":{"ref":"advanced/references.html","tf":0.00463678516228748},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.008797653958944282},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},".":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}}}},"n":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}},"u":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}}}},"r":{"docs":{},"e":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0066518847006651885},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0019387359441644049},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.003993154592127781},"primitives/control.html":{"ref":"primitives/control.html","tf":0.003942181340341655},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.009569377990430622},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0036003600360036},"types/":{"ref":"types/","tf":0.047619047619047616},"types/struct.html":{"ref":"types/struct.html","tf":0.005454545454545455},"types/enum.html":{"ref":"types/enum.html","tf":0.0053590568060021436},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.009966777408637873},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.005065856129685917},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0032085561497326204},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/":{"ref":"templates/","tf":0.0035366931918656055},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002770083102493075},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"objects/common_traits.html":{"ref":"objects/common_traits.html","tf":0.05263157894736842},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}},")":{"docs":{},".":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/":{"ref":"advanced/","tf":0.004392386530014641},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},"s":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}},"c":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"i":{"docs":{},"s":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}},"e":{"docs":{},"d":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0031019775106630476},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}}}},"e":{"docs":{},"r":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.001509813789632612}},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"s":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},"y":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}},"e":{"docs":{},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}}}},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}}}},"s":{"docs":{},"s":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/":{"ref":"primitives/","tf":3.463768115942029},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.005173688100517369},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0022818026240730175},"primitives/control.html":{"ref":"primitives/control.html","tf":0.003942181340341655},"advanced/":{"ref":"advanced/","tf":0.005856515373352855},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/":{"ref":"objects/","tf":0.008333333333333333},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0026399155227032735},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.004434589800443459},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"m":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},")":{"docs":{},".":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}}}},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}},")":{"docs":{},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},":":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"modules/":{"ref":"modules/","tf":0.0009000900090009},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}},"y":{"docs":{},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}},"t":{"docs":{},"i":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.004640371229698376},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},"t":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}}}}},"o":{"docs":{},"f":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464}}}},"t":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"functions/":{"ref":"functions/","tf":0.0025163563160543532},"errors/main.html":{"ref":"errors/main.html","tf":0.011009174311926606}},"e":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"s":{"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}}}},"h":{"docs":{},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.0011001100110011}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/control.html":{"ref":"primitives/control.html","tf":0.005256241787122208},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"objects/traits.html":{"ref":"objects/traits.html","tf":0.030395136778115502},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.020689655172413793},"templates/operators.html":{"ref":"templates/operators.html","tf":0.00461361014994233}},"l":{"docs":{},"n":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.005912786400591279},"primitives/types.html":{"ref":"primitives/types.html","tf":0.005428460643660334},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.008556759840273816},"primitives/control.html":{"ref":"primitives/control.html","tf":0.011826544021024968},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0061823802163833074},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.007863695937090432},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"modules/":{"ref":"modules/","tf":0.0036003600360036},"types/struct.html":{"ref":"types/struct.html","tf":0.008181818181818182},"types/enum.html":{"ref":"types/enum.html","tf":0.00857449088960343},"types/aka.html":{"ref":"types/aka.html","tf":0.02857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.00968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/methods.html":{"ref":"objects/methods.html","tf":0.007329842931937173},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.004052684903748734},"objects/cast.html":{"ref":"objects/cast.html","tf":0.010434782608695653},"functions/":{"ref":"functions/","tf":0.011575239053850024},"pattern/":{"ref":"pattern/","tf":0.01595159515951595},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.015759312320916905},"errors/catching.html":{"ref":"errors/catching.html","tf":0.028877005347593583},"errors/option.html":{"ref":"errors/option.html","tf":0.016172506738544475},"templates/":{"ref":"templates/","tf":0.009725906277630416},"templates/special.html":{"ref":"templates/special.html","tf":0.011339475549255847},"templates/cte.html":{"ref":"templates/cte.html","tf":0.009695290858725761},"templates/values.html":{"ref":"templates/values.html","tf":0.012135922330097087},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.013793103448275862},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.017699115044247787},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.021739130434782608},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.021505376344086023},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.009652509652509652},"templates/operators.html":{"ref":"templates/operators.html","tf":0.00461361014994233}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}},"(":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642}}}}},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/traits.html":{"ref":"objects/traits.html","tf":0.013171225937183385},"functions/":{"ref":"functions/","tf":0.0005032712632108706}},"e":{"docs":{},")":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367}}},",":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.005065856129685917},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}},".":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155}}},";":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0070921985815602835}}},"}":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}}},".":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}},",":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/operator.html":{"ref":"primitives/operator.html","tf":5.023923444976076},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"templates/":{"ref":"templates/","tf":0.002652519893899204}}},"y":{"1":{"docs":{},".":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}},"docs":{},".":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0019387359441644049},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"modules/":{"ref":"modules/","tf":0.0054005400540054005},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.0011001100110011}},"e":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0018001800180018}}},"s":{"docs":{},")":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}},"c":{"docs":{},"i":{"docs":{"modules/":{"ref":"modules/","tf":0.0036003600360036},"objects/class.html":{"ref":"objects/class.html","tf":0.003872216844143272},"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671},"objects/traits.html":{"ref":"objects/traits.html","tf":0.004052684903748734}}},"y":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}},"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}},"docs":{}}},"docs":{},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":5.005025125628141},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}},"e":{"1":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}},"docs":{},",":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}}}}},"v":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},")":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635}}},"s":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"modules/":{"ref":"modules/","tf":0.0009000900090009},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},",":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}},"e":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}},"b":{"docs":{"modules/":{"ref":"modules/","tf":0.010801080108010801},"objects/class.html":{"ref":"objects/class.html","tf":0.013552758954501452},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.016611295681063124},"objects/methods.html":{"ref":"objects/methods.html","tf":0.016753926701570682},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.028511087645195353},"objects/traits.html":{"ref":"objects/traits.html","tf":0.022289766970618033},"objects/cast.html":{"ref":"objects/cast.html","tf":0.010434782608695653},"functions/":{"ref":"functions/","tf":0.0055359838953195776},"pattern/":{"ref":"pattern/","tf":0.0038503850385038503},"errors/main.html":{"ref":"errors/main.html","tf":0.005504587155963303},"templates/":{"ref":"templates/","tf":0.004420866489832007},"templates/special.html":{"ref":"templates/special.html","tf":0.007795889440113395},"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.020689655172413793},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.017699115044247787},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.014492753623188406},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.005791505791505791},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0265282583621684}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"modules/":{"ref":"modules/","tf":0.0072007200720072},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}},")":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0027002700270027003},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}}}},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},",":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"2":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},"4":{"docs":{},"d":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.003695491500369549},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0023264831329972858},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"types/struct.html":{"ref":"types/struct.html","tf":0.01090909090909091},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.006600660066006601},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}},"i":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},"y":{"docs":{},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},"e":{"docs":{},"r":{"1":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"docs":{}}},"docs":{}}},"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.005428460643660334},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/struct.html":{"ref":"types/struct.html","tf":0.004545454545454545},"objects/":{"ref":"objects/","tf":0.008333333333333333},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0052173913043478265},"functions/":{"ref":"functions/","tf":0.011575239053850024},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":3.3699825479930188},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002770083102493075},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}}},"s":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"objects/":{"ref":"objects/","tf":0.004166666666666667},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/":{"ref":"objects/","tf":0.008333333333333333}}},")":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0010065425264217413},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}},"s":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}}}},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0034602076124567475}}}}}}},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.006363636363636364},"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},")":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}},")":{"docs":{},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}}},"t":{"docs":{},"i":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}},"l":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"primitives/control.html":{"ref":"primitives/control.html","tf":0.005256241787122208},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"modules/":{"ref":"modules/","tf":0.0027002700270027003},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0031678986272439284},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/main.html":{"ref":"errors/main.html","tf":0.009174311926605505},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.010471204188481676},"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}},"e":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}}},")":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}}}},"i":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.009569377990430622}}}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},",":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}},"y":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"h":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"functions/":{"ref":"functions/","tf":0.0010065425264217413}},",":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},")":{"docs":{},",":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}}},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}}}}},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},".":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}}}}}}}}},"i":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.005912786400591279}},")":{"docs":{},";":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}},"e":{"docs":{},"r":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}},"l":{"docs":{},"i":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"m":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},"c":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}}}}}}},"r":{"docs":{"./":{"ref":"./","tf":0.004640371229698376},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}},"e":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704}},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}}}},"r":{"docs":{},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"v":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.004563605248146035},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}}},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}},"l":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"pattern/":{"ref":"pattern/","tf":0.0011001100110011}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}}}}}}}}},"f":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/references.html":{"ref":"advanced/references.html","tf":0.02472952086553323},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502}},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":5.007320644216691},"advanced/references.html":{"ref":"advanced/references.html","tf":10.046367851622875},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"modules/":{"ref":"modules/","tf":0.004500450045004501},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/aka.html":{"ref":"types/aka.html","tf":0.011428571428571429},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.013289036544850499},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.004026170105686965},"pattern/":{"ref":"pattern/","tf":0.0038503850385038503},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},"e":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}},"2":{"docs":{},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"docs":{}}},"docs":{},"s":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}},"docs":{}}},"docs":{},")":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},",":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}},",":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.00463678516228748},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}},".":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}},"d":{"docs":{},",":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}}}}}},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}},".":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.010131712259371834}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}}}}}}}}}},"l":{"docs":{"modules/":{"ref":"modules/","tf":0.0018001800180018},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}},"v":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}}},"a":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"errors/option.html":{"ref":"errors/option.html","tf":0.008086253369272238}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"advanced/references.html":{"ref":"advanced/references.html","tf":0.00463678516228748},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/":{"ref":"objects/","tf":0.008333333333333333},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.004640371229698376}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"i":{"docs":{},"c":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}},"u":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.005256241787122208},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"2":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}},"docs":{}}},"docs":{}}},"docs":{}},".":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"modules/":{"ref":"modules/","tf":0.0027002700270027003},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.001509813789632612}},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}},"u":{"docs":{},"t":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"docs":{}}},"docs":{}}}}}}},"r":{"docs":{},"t":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.007722007722007722}},":":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197}}},"s":{"docs":{},":":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0022818026240730175},"primitives/control.html":{"ref":"primitives/control.html","tf":0.003942181340341655},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.004545454545454545},"types/aka.html":{"ref":"types/aka.html","tf":0.008571428571428572},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0021119324181626186},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0052173913043478265},"functions/":{"ref":"functions/","tf":0.004529441368897836},"pattern/":{"ref":"pattern/","tf":0.0022002200220022},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0071633237822349575},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0074866310160427805},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.005305039787798408},"templates/special.html":{"ref":"templates/special.html","tf":0.005669737774627924},"templates/cte.html":{"ref":"templates/cte.html","tf":0.004155124653739612},"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},")":{"docs":{},";":{"docs":{},"}":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}},"i":{"docs":{},"t":{"docs":{},"v":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}}},"t":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}},"}":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}}}}},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0023264831329972858},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825}}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"1":{"docs":{},".":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}},"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.004434589800443459},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0031019775106630476},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.010838562464346835},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.004392386530014641},"advanced/references.html":{"ref":"advanced/references.html","tf":0.00927357032457496},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0027002700270027003},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0052173913043478265},"functions/":{"ref":"functions/","tf":0.0055359838953195776},"pattern/":{"ref":"pattern/","tf":0.0022002200220022},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0034602076124567475}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.007339449541284404},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803}},"n":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}},"docs":{},".":{"docs":{"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}},"e":{"docs":{},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}},"l":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}},"l":{"docs":{},"i":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}},"s":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},")":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}},")":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},",":{"docs":{"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}}}}}}},"c":{"docs":{},"h":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"templates/operators.html":{"ref":"templates/operators.html","tf":0.008073817762399077}},"e":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0034602076124567475}},"e":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/operators.html":{"ref":"templates/operators.html","tf":0.006920415224913495}},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},",":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"2":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},"docs":{}}},"docs":{}}},"docs":{}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}}}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}},"u":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.009280742459396751},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"e":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}},"l":{"docs":{},"e":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}},".":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"g":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0058162078324932144},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502}},"e":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}},"s":{"1":{"docs":{},".":{"3":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}}},"i":{"docs":{},"s":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}}}}},"d":{"docs":{},"i":{"docs":{},"u":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}},"s":{"docs":{},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}}}}}},"!":{"docs":{},"(":{"docs":{},"i":{"3":{"2":{"docs":{},")":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}}}},"docs":{}},"docs":{}}},"t":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.002834868887313962},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}},"s":{"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}}},".":{"docs":{},".":{"docs":{},"}":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}},")":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"s":{"3":{"2":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"docs":{}},"8":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}},"docs":{"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"objects/":{"ref":"objects/","tf":0.004166666666666667}}}},"i":{"docs":{"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}}}},"r":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}},",":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}}}}},"v":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"m":{"docs":{},"e":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.003695491500369549},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0019387359441644049},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"modules/":{"ref":"modules/","tf":0.0027002700270027003},"types/struct.html":{"ref":"types/struct.html","tf":0.005454545454545455},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"functions/":{"ref":"functions/","tf":0.0025163563160543532},"pattern/":{"ref":"pattern/","tf":0.0027502750275027505},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0057306590257879654},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}},"t":{"docs":{},"i":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}}}}},"y":{"docs":{},",":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}},"w":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"e":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0021119324181626186},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}},"m":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}}},"n":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"functions/":{"ref":"functions/","tf":0.001509813789632612},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}},"i":{"docs":{},"c":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}},"s":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}},"i":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088}}}},"t":{"docs":{"./":{"ref":"./","tf":0.004640371229698376},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0023264831329972858},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.003993154592127781},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.00484027105517909},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"templates/":{"ref":"templates/","tf":0.00618921308576481},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}},",":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"x":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},"s":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}},")":{"docs":{},".":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.001509813789632612},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"templates/special.html":{"ref":"templates/special.html","tf":0.004961020552799433},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}},"u":{"docs":{},"r":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}},"g":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}}},"l":{"docs":{},"f":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.017424975798644726},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.009424083769633508},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.01795142555438226},"objects/traits.html":{"ref":"objects/traits.html","tf":0.010131712259371834},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"functions/":{"ref":"functions/","tf":0.0025163563160543532},"pattern/":{"ref":"pattern/","tf":0.0038503850385038503},"errors/main.html":{"ref":"errors/main.html","tf":0.005504587155963303},"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/special.html":{"ref":"templates/special.html","tf":0.004961020552799433},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.013793103448275862},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.017699115044247787},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861},"templates/operators.html":{"ref":"templates/operators.html","tf":0.011534025374855825}},")":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.006335797254487857},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"functions/":{"ref":"functions/","tf":0.001509813789632612},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027}}},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}},"_":{"docs":{},"x":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671}},")":{"docs":{},";":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.00484027105517909},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}},",":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}},"a":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}},")":{"docs":{},";":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}},".":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"u":{"docs":{},"s":{"docs":{},")":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}}}},"y":{"docs":{},",":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}},"i":{"docs":{"functions/":{"ref":"functions/","tf":0.0010065425264217413}}},"u":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"!":{"docs":{},"(":{"docs":{},"&":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},")":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}},"v":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"!":{"docs":{},"(":{"docs":{},"&":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},")":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}},"z":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}},"a":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},")":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0034602076124567475}}},",":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"i":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.00461361014994233}}},"x":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},":":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}},":":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}},"n":{"docs":{},"d":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}},"s":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},"t":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},".":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},"i":{"docs":{},"z":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":5.007722007722008}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"1":{"docs":{},".":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"docs":{}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},".":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}}},"e":{"docs":{},".":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}}},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.005173688100517369},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}},"docs":{}}}}}}},"r":{"docs":{},"e":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}}},"p":{"docs":{},"e":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.00791974656810982},"objects/traits.html":{"ref":"objects/traits.html","tf":0.014184397163120567},"pattern/":{"ref":"pattern/","tf":0.0038503850385038503}},",":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}},"o":{"docs":{},"w":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188}}}},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}},".":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},"u":{"docs":{},"d":{"docs":{"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"functions/":{"ref":"functions/","tf":0.001509813789632612},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"i":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353}}}}}}}}},",":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}}}},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/":{"ref":"objects/","tf":0.004166666666666667},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}},"u":{"docs":{},"l":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}},"g":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0023264831329972858},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"modules/":{"ref":"modules/","tf":0.0018001800180018},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}}}}},"z":{"docs":{},"e":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.004265219077161691},"types/struct.html":{"ref":"types/struct.html","tf":0.00909090909090909},"objects/":{"ref":"objects/","tf":0.020833333333333332},"objects/cast.html":{"ref":"objects/cast.html","tf":0.008695652173913044},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002770083102493075}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}}},"o":{"docs":{},"f":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"docs":{}}},"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275}}}}}},"d":{"docs":{},"e":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"b":{"docs":{},"l":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635}},"e":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.004640371229698376},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}},"h":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},".":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635},"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.008869179600886918},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0061823802163833074},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.007502679528403001},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/":{"ref":"objects/","tf":0.008333333333333333},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/traits.html":{"ref":"objects/traits.html","tf":0.004052684903748734},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.0033003300330033004},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"n":{"docs":{},"d":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}},"r":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/best.html":{"ref":"advanced/best.html","tf":0.01256281407035176}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}}}}},"l":{"docs":{},"v":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0034897246994959287},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.009569377990430622},"types/struct.html":{"ref":"types/struct.html","tf":0.004545454545454545},"types/enum.html":{"ref":"types/enum.html","tf":0.00964630225080386},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0052173913043478265},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"errors/option.html":{"ref":"errors/option.html","tf":0.008086253369272238},"templates/special.html":{"ref":"templates/special.html","tf":0.002834868887313962}},"i":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.002852253280091272},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.009569377990430622},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"primitives/":{"ref":"primitives/","tf":0.043478260869565216}}}}}}},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},")":{"docs":{},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}}}}},"a":{"docs":{},"l":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"templates/":{"ref":"templates/","tf":0.0035366931918656055},"templates/special.html":{"ref":"templates/special.html","tf":0.002834868887313962},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806},"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263}},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"docs":{}}},"docs":{},".":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},",":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0029282576866764276}}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.007320644216691069},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/":{"ref":"templates/","tf":0.004420866489832007},"templates/special.html":{"ref":"templates/special.html","tf":0.002834868887313962},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}}}}},"r":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464}},"t":{"docs":{"./":{"ref":"./","tf":0.004640371229698376},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.009569377990430622},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.004640371229698376},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.008130081300813009},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0038774718883288098},"primitives/control.html":{"ref":"primitives/control.html","tf":0.006570302233902759},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}}}}},"e":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0034227039361095267},"primitives/control.html":{"ref":"primitives/control.html","tf":0.003942181340341655},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636}},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}}}},"d":{"docs":{},",":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}},".":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}},"u":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"c":{"docs":{},"k":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0042780748663101605}},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"objects/":{"ref":"objects/","tf":0.004166666666666667}}},")":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}}},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}}},":":{"docs":{},":":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}},"i":{"docs":{},"o":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0023264831329972858},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0034227039361095267},"primitives/control.html":{"ref":"primitives/control.html","tf":0.005256241787122208},"advanced/":{"ref":"advanced/","tf":0.004392386530014641},"advanced/references.html":{"ref":"advanced/references.html","tf":0.00463678516228748},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.009174311926605505},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.011730205278592375},"modules/":{"ref":"modules/","tf":0.0027002700270027003},"types/struct.html":{"ref":"types/struct.html","tf":0.007272727272727273},"types/enum.html":{"ref":"types/enum.html","tf":0.004287245444801715},"types/aka.html":{"ref":"types/aka.html","tf":0.014285714285714285},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0050327126321087065},"pattern/":{"ref":"pattern/","tf":0.0044004400440044},"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0057670126874279125}},";":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.004434589800443459},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0031019775106630476},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0021119324181626186},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0060790273556231},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0035228988424760945},"pattern/":{"ref":"pattern/","tf":0.0022002200220022},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0071633237822349575},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0074866310160427805},"errors/option.html":{"ref":"errors/option.html","tf":0.008086253369272238},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.010471204188481676},"templates/":{"ref":"templates/","tf":0.007073386383731211},"templates/special.html":{"ref":"templates/special.html","tf":0.004961020552799433},"templates/cte.html":{"ref":"templates/cte.html","tf":0.004847645429362881},"templates/values.html":{"ref":"templates/values.html","tf":0.006067961165048544},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}},",":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931}}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"9":{"4":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"3":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"p":{"9":{"4":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"3":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"o":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}}}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},";":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"l":{"docs":{},";":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},",":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}}}}}}}}}}},";":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"s":{"docs":{},";":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.010344827586206896}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},")":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}},";":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},";":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}},"docs":{}}},"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}},".":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931}}},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}},")":{"docs":{},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},".":{"docs":{"objects/common_traits.html":{"ref":"objects/common_traits.html","tf":0.05263157894736842},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"e":{"docs":{},"p":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104}},"s":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"_":{"docs":{},"b":{"docs":{},"i":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.004640371229698376},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}},"c":{"docs":{},"k":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}}},"a":{"docs":{},"m":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.017241379310344827}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":10.020689655172413}},"e":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}},"docs":{}}},"docs":{},";":{"docs":{"functions/":{"ref":"functions/","tf":0.0010065425264217413},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}},",":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}}}}},")":{"docs":{},";":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}},".":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}},":":{"docs":{},".":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.010344827586206896}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.004640371229698376},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0023264831329972858},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.005856515373352855},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}},"s":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},".":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"1":{"docs":{},".":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}},"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.013793103448275862}},",":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}},".":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}}}}}}}}}}},",":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}}},"c":{"docs":{},"t":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"l":{"docs":{},"i":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"functions/":{"ref":"functions/","tf":0.0010065425264217413}}}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"types/struct.html":{"ref":"types/struct.html","tf":0.012727272727272728},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.005669737774627924},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},"u":{"docs":{},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.005242463958060288},"types/":{"ref":"types/","tf":0.047619047619047616},"types/struct.html":{"ref":"types/struct.html","tf":10.038181818181819},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"pattern/":{"ref":"pattern/","tf":0.0022002200220022},"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},"e":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"4":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"docs":{}}},"5":{"docs":{},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"docs":{}}},"docs":{},"s":{"docs":{},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},",":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/":{"ref":"types/","tf":0.047619047619047616},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}}}}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}}}}}}},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}}}}}},"o":{"docs":{},"p":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.030927835051546393},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104}},"s":{"docs":{},",":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}},",":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"r":{"docs":{},"e":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.006203955021326095},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"objects/cast.html":{"ref":"objects/cast.html","tf":0.017391304347826087},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/option.html":{"ref":"errors/option.html","tf":0.008086253369272238}},"d":{"docs":{},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}},"u":{"docs":{},"d":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.01160092807424594}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}},"s":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}},"e":{"docs":{},"r":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367}}}}},"r":{"docs":{},"e":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}},"i":{"docs":{},"t":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}}},"e":{"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}},"b":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"modules/":{"ref":"modules/","tf":0.0054005400540054005},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}},"c":{"docs":{},"h":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0023264831329972858},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"c":{"docs":{},"e":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},"e":{"docs":{},"d":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}},"s":{"docs":{},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}}}}}}},"d":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}}}},"s":{"docs":{},"s":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.02148997134670487},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}}}}}},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}},"c":{"docs":{},"i":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/":{"ref":"objects/","tf":0.004166666666666667},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}}},"s":{"docs":{},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.004563605248146035},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"modules/":{"ref":"modules/","tf":0.0288028802880288},"types/enum.html":{"ref":"types/enum.html","tf":0.003215434083601286},"types/aka.html":{"ref":"types/aka.html","tf":0.011428571428571429},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0025163563160543532},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.010471204188481676},"templates/":{"ref":"templates/","tf":0.011494252873563218},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.011583011583011582}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0035366931918656055},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}},"s":{"1":{"docs":{},".":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}},"docs":{},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"modules/":{"ref":"modules/","tf":0.0027002700270027003},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"templates/":{"ref":"templates/","tf":0.0017683465959328027}}},")":{"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},"*":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"x":{"1":{"docs":{},".":{"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}},"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}},"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.002714230321830167},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.007415858528237307},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.005242463958060288},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/":{"ref":"objects/","tf":0.008333333333333333},"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671},"functions/":{"ref":"functions/","tf":0.0025163563160543532},"pattern/":{"ref":"pattern/","tf":0.0022002200220022},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/":{"ref":"templates/","tf":0.009725906277630416},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806},"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"templates/":{"ref":"templates/","tf":0.0017683465959328027}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"templates/":{"ref":"templates/","tf":0.0017683465959328027}}}}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.002714230321830167},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}},",":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}},")":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"1":{"docs":{},".":{"5":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}},"docs":{}}},"docs":{}}},"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.005173688100517369},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.006274957216200799},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"functions/":{"ref":"functions/","tf":0.001509813789632612},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":5.04727793696275},"errors/catching.html":{"ref":"errors/catching.html","tf":0.025668449197860963},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.021739130434782608}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}},"s":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}},")":{"docs":{},".":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}}}},"r":{"docs":{},"e":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},".":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.01240791004265219},"primitives/control.html":{"ref":"primitives/control.html","tf":0.003942181340341655},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.007320644216691069},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.007087172218284904},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002770083102493075},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},"s":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},")":{"docs":{},",":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}}},"c":{"2":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704}}},"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.022613065326633167}},")":{"docs":{},";":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704}}}},";":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}}}}}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}}}}}}},"t":{"2":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"3":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"docs":{"./":{"ref":"./","tf":0.004640371229698376},"primitives/types.html":{"ref":"primitives/types.html","tf":0.002714230321830167},"templates/":{"ref":"templates/","tf":0.010610079575596816},"templates/special.html":{"ref":"templates/special.html","tf":0.002834868887313962},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}},"b":{"docs":{},"l":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0046529662659945716},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.009569377990430622},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"e":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}}},":":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}}}},"k":{"docs":{},"e":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0019387359441644049},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.004026170105686965},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/special.html":{"ref":"templates/special.html","tf":0.004961020552799433},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}},"n":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"s":{"docs":{},".":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}},"l":{"docs":{},"k":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/":{"ref":"objects/","tf":0.004166666666666667},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"t":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}},"'":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806}}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},".":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}},"e":{"docs":{},"n":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}},"m":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"e":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}}}}},"s":{"docs":{},"e":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},",":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},"k":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}}}},"s":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}},".":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}},"r":{"docs":{},"d":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/special.html":{"ref":"templates/special.html","tf":0.002834868887313962}},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}},".":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.020618556701030927},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0023264831329972858},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.008797653958944282},"types/struct.html":{"ref":"types/struct.html","tf":0.004545454545454545},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0021119324181626186},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.0033003300330033004},"errors/main.html":{"ref":"errors/main.html","tf":0.04220183486238532},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0057306590257879654},"errors/catching.html":{"ref":"errors/catching.html","tf":0.016042780748663103},"errors/option.html":{"ref":"errors/option.html","tf":0.01078167115902965},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.020942408376963352},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.006920415224913495}},"n":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"errors/main.html":{"ref":"errors/main.html","tf":0.005504587155963303},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0057306590257879654},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0042780748663101605},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}}}},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}}}},"e":{"docs":{},"e":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"modules/":{"ref":"modules/","tf":0.0027002700270027003},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"a":{"docs":{},"d":{"docs":{},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}}},"u":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"modules/":{"ref":"modules/","tf":0.0036003600360036},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0060790273556231},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.001509813789632612},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}},"r":{"docs":{},"s":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}}}},"s":{"docs":{},",":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"templates/":{"ref":"templates/","tf":0.004420866489832007},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.01038781163434903},"templates/values.html":{"ref":"templates/values.html","tf":3.338187702265372},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0019387359441644049},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002770083102493075},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0023264831329972858},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0034626038781163434},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}},"s":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104}}}},")":{"docs":{},".":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}},"l":{"docs":{},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}}}}},"o":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}}},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0019387359441644049},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.0022002200220022},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"s":{"docs":{},".":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},")":{"docs":{},".":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}}},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}},"p":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.010344827586206896}}}}}}}},"m":{"docs":{},"l":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}},"w":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.004265219077161691},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.003942181340341655},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"modules/":{"ref":"modules/","tf":0.0054005400540054005},"types/struct.html":{"ref":"types/struct.html","tf":0.0036363636363636364},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0025163563160543532},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/":{"ref":"templates/","tf":0.005305039787798408},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.005791505791505791},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}},"e":{"docs":{},"l":{"docs":{},"v":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}},"2":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"5":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}},"3":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}},"4":{"docs":{},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}},"docs":{"./":{"ref":"./","tf":0.004640371229698376},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.016999260901699925},"primitives/types.html":{"ref":"primitives/types.html","tf":5.034509499806126},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.012549914432401598},"primitives/control.html":{"ref":"primitives/control.html","tf":0.017082785808147174},"advanced/":{"ref":"advanced/","tf":0.027818448023426062},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0077279752704791345},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.01703800786369594},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.01466275659824047},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/":{"ref":"types/","tf":3.3809523809523805},"types/struct.html":{"ref":"types/struct.html","tf":0.015454545454545455},"types/enum.html":{"ref":"types/enum.html","tf":0.022508038585209004},"types/aka.html":{"ref":"types/aka.html","tf":0.008571428571428572},"objects/":{"ref":"objects/","tf":0.016666666666666666},"objects/class.html":{"ref":"objects/class.html","tf":0.003872216844143272},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.013289036544850499},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0026399155227032735},"objects/traits.html":{"ref":"objects/traits.html","tf":0.004052684903748734},"objects/cast.html":{"ref":"objects/cast.html","tf":3.359420289855072},"functions/":{"ref":"functions/","tf":0.011071967790639155},"pattern/":{"ref":"pattern/","tf":0.013751375137513752},"errors/main.html":{"ref":"errors/main.html","tf":0.011009174311926606},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/option.html":{"ref":"errors/option.html","tf":3.365678346810422},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.02475685234305924},"templates/special.html":{"ref":"templates/special.html","tf":5.026222537207654},"templates/cte.html":{"ref":"templates/cte.html","tf":0.009002770083102494},"templates/values.html":{"ref":"templates/values.html","tf":0.012135922330097087},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.013513513513513514},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}},"s":{"1":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}},"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"2":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"3":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}},"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"docs":{}}},"docs":{"types/":{"ref":"types/","tf":0.047619047619047616}}}},"docs":{},",":{"docs":{"primitives/":{"ref":"primitives/","tf":0.043478260869565216},"primitives/types.html":{"ref":"primitives/types.html","tf":0.002714230321830167},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}},")":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.004265219077161691},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/":{"ref":"advanced/","tf":0.004392386530014641},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},":":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/":{"ref":"types/","tf":0.047619047619047616}}}},")":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},"?":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"functions/":{"ref":"functions/","tf":0.0010065425264217413}}},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.002714230321830167},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.008571428571428572},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/option.html":{"ref":"errors/option.html","tf":0.008086253369272238},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.004961020552799433},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0019387359441644049},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/option.html":{"ref":"errors/option.html","tf":0.008086253369272238},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.002834868887313962},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"i":{"docs":{},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.008695652173913044},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}},"s":{"docs":{},";":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}},"n":{"docs":{},"f":{"docs":{},"o":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}},"docs":{}}},"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"types/enum.html":{"ref":"types/enum.html","tf":0.003215434083601286},"objects/cast.html":{"ref":"objects/cast.html","tf":0.01565217391304348}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0052173913043478265}}},";":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}},"o":{"docs":{},"f":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0023264831329972858},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}}}},"d":{"docs":{},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}},"docs":{}}},"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},".":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.020618556701030927},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"pattern/":{"ref":"pattern/","tf":0.014301430143014302},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/values.html":{"ref":"templates/values.html","tf":0.00849514563106796},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}},"s":{"1":{"docs":{},".":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"docs":{}}}},"r":{"docs":{},"m":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"i":{"docs":{},"n":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0031678986272439284},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":10.061892130857649},"templates/special.html":{"ref":"templates/special.html","tf":5.024805102763997},"templates/cte.html":{"ref":"templates/cte.html","tf":5.029085872576177},"templates/values.html":{"ref":"templates/values.html","tf":0.02669902912621359},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"e":{"1":{"docs":{},".":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}},"l":{"docs":{},")":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}},")":{"docs":{},"*":{"docs":{},")":{"docs":{},"?":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},"*":{"docs":{},")":{"docs":{},"?":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}},"s":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}},"4":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},")":{"docs":{},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}},".":{"docs":{"templates/":{"ref":"templates/","tf":0.002652519893899204}}}},",":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471}}},".":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}},"t":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}},"l":{"docs":{},"l":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"x":{"docs":{},"t":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}},"r":{"docs":{},"i":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0061823802163833074},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.009174311926605505},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0034602076124567475}},"v":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"functions/":{"ref":"functions/","tf":0.001509813789632612},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}},"i":{"docs":{},"t":{"1":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}},"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}},"docs":{}}},"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/traits.html":{"ref":"objects/traits.html","tf":10.045592705167174},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.009213323883770375},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"objects/common_traits.html":{"ref":"objects/common_traits.html","tf":5.105263157894737},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.013793103448275862},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.02654867256637168},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.028985507246376812},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}},"s":{"1":{"docs":{},".":{"docs":{"objects/common_traits.html":{"ref":"objects/common_traits.html","tf":0.05263157894736842}}}},"docs":{},")":{"docs":{},".":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}}},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},".":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"objects/common_traits.html":{"ref":"objects/common_traits.html","tf":0.05263157894736842}}}},",":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0070921985815602835},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.017699115044247787},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},".":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}},"c":{"docs":{},"e":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0042780748663101605}}}}},"u":{"docs":{},"e":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806},"templates/values.html":{"ref":"templates/values.html","tf":0.007281553398058253},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}},"e":{"docs":{},"e":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"modules/":{"ref":"modules/","tf":0.0018001800180018},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0027002700270027003}}},".":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"a":{"docs":{},"t":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/":{"ref":"templates/","tf":0.0035366931918656055},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},"_":{"0":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"docs":{}}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0077549437766576195},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.00655307994757536},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.00605060506050605},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"e":{"1":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"docs":{}}},"4":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"docs":{}}},"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}},"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},"s":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182}}},".":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}}}}},"e":{"docs":{},"s":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}}}}},")":{"docs":{"templates/":{"ref":"templates/","tf":0.007073386383731211},"templates/special.html":{"ref":"templates/special.html","tf":0.010630758327427357},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}}}}}},"=":{"docs":{},"[":{"docs":{},"i":{"3":{"2":{"docs":{},"]":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}},"docs":{}},"docs":{}}},"i":{"3":{"2":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}},",":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}},".":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"docs":{}},"docs":{}}},"}":{"docs":{"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},")":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"c":{"docs":{},"p":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},",":{"docs":{"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}}}}}}}}},"u":{"1":{"6":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238}}},"docs":{}},"3":{"2":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0019387359441644049},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}},")":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"docs":{}},"6":{"4":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}},"}":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},".":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}}},"docs":{}},"8":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0023264831329972858}}},"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"templates/":{"ref":"templates/","tf":0.008841732979664015},"templates/special.html":{"ref":"templates/special.html","tf":0.004961020552799433},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.005791505791505791}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/":{"ref":"advanced/","tf":0.005856515373352855},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}},"e":{"docs":{},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}}}},"n":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"functions/":{"ref":"functions/","tf":0.0025163563160543532},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.004847645429362881}}}}}},"o":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.009280742459396751}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0034227039361095267},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.00655307994757536},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}},"o":{"docs":{},"n":{"1":{"docs":{},".":{"5":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"docs":{}}},"6":{"docs":{},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"docs":{}}},"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.004545454545454545}}}},"t":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"objects/":{"ref":"objects/","tf":0.008333333333333333},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"e":{"docs":{},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}}}},"w":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}}}}}},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/":{"ref":"objects/","tf":0.004166666666666667},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},"w":{"docs":{},"o":{"docs":{},"n":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":3.3438045375218146}},"e":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0019387359441644049},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}},")":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}}},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104}}}},"y":{"docs":{},"p":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.009569377990430622},"functions/":{"ref":"functions/","tf":0.001509813789632612},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0034602076124567475}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.015444015444015444}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}}}}}}},".":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}}},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}}}}}}},"s":{"docs":{"./":{"ref":"./","tf":0.004640371229698376},"hello-world/":{"ref":"hello-world/","tf":0.019801980198019802},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.008869179600886918},"primitives/types.html":{"ref":"primitives/types.html","tf":0.01202016285381931},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.008556759840273816},"primitives/control.html":{"ref":"primitives/control.html","tf":0.00788436268068331},"advanced/":{"ref":"advanced/","tf":0.008784773060029283},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0061823802163833074},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.00655307994757536},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.008100810081008101},"types/struct.html":{"ref":"types/struct.html","tf":0.008181818181818182},"types/enum.html":{"ref":"types/enum.html","tf":0.006430868167202572},"types/aka.html":{"ref":"types/aka.html","tf":0.005714285714285714},"objects/":{"ref":"objects/","tf":0.008333333333333333},"objects/class.html":{"ref":"objects/class.html","tf":0.008712487899322363},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.003695881731784583},"objects/traits.html":{"ref":"objects/traits.html","tf":0.004052684903748734},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0052173913043478265},"functions/":{"ref":"functions/","tf":0.010568696527428284},"pattern/":{"ref":"pattern/","tf":0.009900990099009901},"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.008556149732620321},"errors/option.html":{"ref":"errors/option.html","tf":0.018867924528301886},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.010471204188481676},"templates/":{"ref":"templates/","tf":0.020335985853227233},"templates/special.html":{"ref":"templates/special.html","tf":0.014174344436569808},"templates/cte.html":{"ref":"templates/cte.html","tf":0.013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.014563106796116505},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.010344827586206896},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.014492753623188406},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.021505376344086023},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.005791505791505791},"templates/operators.html":{"ref":"templates/operators.html","tf":0.011534025374855825}},"e":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}},"l":{"docs":{},",":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464}}}}}}},"d":{"docs":{},")":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/":{"ref":"objects/","tf":0.004166666666666667}}}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}},"r":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/":{"ref":"types/","tf":3.4285714285714284},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"modules/":{"ref":"modules/","tf":0.0009000900090009},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}},",":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0009000900090009},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}},"s":{"docs":{},"'":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}},"i":{"docs":{},"z":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0031019775106630476},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}},"e":{"docs":{},"}":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}},"a":{"docs":{},"g":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0005032712632108706}},"e":{"1":{"docs":{},".":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}},"docs":{},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}},"b":{"docs":{},"l":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"e":{"docs":{},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104}}}},"f":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},"f":{"docs":{},"c":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"m":{"docs":{},"l":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}}},"p":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}},")":{"docs":{"templates/":{"ref":"templates/","tf":0.00618921308576481},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},",":{"docs":{"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}},",":{"docs":{"templates/":{"ref":"templates/","tf":0.0017683465959328027}}}}}}}}}}},";":{"docs":{"templates/":{"ref":"templates/","tf":0.0017683465959328027}}},"=":{"docs":{},"\"":{"docs":{},",":{"docs":{"templates/":{"ref":"templates/","tf":0.002652519893899204}}}},"f":{"6":{"4":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}},".":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}},"docs":{}},"docs":{}},"i":{"3":{"2":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}},"docs":{}},"docs":{}}},"}":{"docs":{"templates/":{"ref":"templates/","tf":0.004420866489832007},"templates/special.html":{"ref":"templates/special.html","tf":0.002834868887313962},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},"{":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"v":{"docs":{"./":{"ref":"./","tf":0.004640371229698376},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.005791505791505791}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}},"r":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":5.042128603104213},"primitives/types.html":{"ref":"primitives/types.html","tf":0.002714230321830167},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0022818026240730175},"primitives/control.html":{"ref":"primitives/control.html","tf":0.009198423127463863},"advanced/":{"ref":"advanced/","tf":0.01171303074670571},"advanced/references.html":{"ref":"advanced/references.html","tf":0.010819165378670788},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.011795543905635648},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.011730205278592375},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"types/enum.html":{"ref":"types/enum.html","tf":0.003215434083601286},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0021119324181626186},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0052173913043478265},"functions/":{"ref":"functions/","tf":0.009058882737795673},"pattern/":{"ref":"pattern/","tf":0.01595159515951595},"errors/catching.html":{"ref":"errors/catching.html","tf":0.006417112299465241},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/cte.html":{"ref":"templates/cte.html","tf":0.004847645429362881},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}},"e":{"1":{"docs":{},".":{"2":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"docs":{}}},"3":{"docs":{},".":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"4":{"docs":{},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"docs":{}}},"docs":{},"s":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"primitives/":{"ref":"primitives/","tf":0.043478260869565216},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197}}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0029563932002956393},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0066518847006651885},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/references.html":{"ref":"advanced/references.html","tf":0.00927357032457496},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0066518847006651885},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},")":{"docs":{},".":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},",":{"docs":{"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}}}},"d":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.008504606661941885}},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.005256241787122208},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"functions/":{"ref":"functions/","tf":0.0005032712632108706}},"a":{"docs":{},"r":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}},")":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}},"*":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}},")":{"docs":{},"?":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}},"s":{"docs":{},")":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}}}}},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0026399155227032735},"objects/traits.html":{"ref":"objects/traits.html","tf":0.005065856129685917},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/":{"ref":"templates/","tf":0.004420866489832007}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}},".":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}},".":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}}},",":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502}}},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}}}},"u":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.017738359201773836},"primitives/types.html":{"ref":"primitives/types.html","tf":0.033346258239627766},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.018824871648602397},"primitives/control.html":{"ref":"primitives/control.html","tf":0.026281208935611037},"advanced/":{"ref":"advanced/","tf":0.007320644216691069},"advanced/references.html":{"ref":"advanced/references.html","tf":0.021638330757341576},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.010484927916120577},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.01466275659824047},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.014545454545454545},"types/enum.html":{"ref":"types/enum.html","tf":0.02465166130760986},"types/aka.html":{"ref":"types/aka.html","tf":0.008571428571428572},"objects/":{"ref":"objects/","tf":0.0125},"objects/class.html":{"ref":"objects/class.html","tf":0.00968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"objects/cast.html":{"ref":"objects/cast.html","tf":0.01217391304347826},"functions/":{"ref":"functions/","tf":0.00754906894816306},"pattern/":{"ref":"pattern/","tf":0.019251925192519254},"errors/catching.html":{"ref":"errors/catching.html","tf":0.006417112299465241},"errors/option.html":{"ref":"errors/option.html","tf":0.018867924528301886},"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/cte.html":{"ref":"templates/cte.html","tf":5.011772853185596},"templates/values.html":{"ref":"templates/values.html","tf":0.010922330097087379}},"e":{"1":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"3":{"docs":{},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"docs":{}}},"2":{"docs":{},".":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}},"3":{"docs":{},".":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}},"4":{"docs":{},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}},"5":{"docs":{},".":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}},"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}},"docs":{},")":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}},".":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.00513405590416429},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.008797653958944282},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0052173913043478265},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/option.html":{"ref":"errors/option.html","tf":0.008086253369272238}}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0019387359441644049},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"advanced/references.html":{"ref":"advanced/references.html","tf":0.00463678516228748},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"pattern/":{"ref":"pattern/","tf":0.0022002200220022},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0032085561497326204},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"s":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"2":{"docs":{},".":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"3":{"docs":{},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"docs":{}}},"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/aka.html":{"ref":"types/aka.html","tf":0.008571428571428572},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0034626038781163434},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0031019775106630476},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"modules/":{"ref":"modules/","tf":0.0009000900090009},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},"f":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},"i":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"2":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}},"docs":{}}},"docs":{"./":{"ref":"./","tf":0.009280742459396751},"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}},"b":{"docs":{},"o":{"docs":{},"s":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}}}}}},"e":{"docs":{},".":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}}}}}}},"i":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.003993154592127781},"primitives/control.html":{"ref":"primitives/control.html","tf":0.003942181340341655},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.006863780359028511},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.003019627579265224},"errors/option.html":{"ref":"errors/option.html","tf":0.008086253369272238},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.002834868887313962},"templates/values.html":{"ref":"templates/values.html","tf":0.0048543689320388345},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931}},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0022818026240730175},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"modules/":{"ref":"modules/","tf":0.0018001800180018},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.005256241787122208},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0025163563160543532},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"}":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},"e":{"docs":{},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"w":{"docs":{"./":{"ref":"./","tf":0.004640371229698376},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.007722007722007722}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"y":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635}}}},"i":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197}}}}}}},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},":":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}},"y":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.002714230321830167},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0022818026240730175},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"modules/":{"ref":"modules/","tf":0.0018001800180018},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},",":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642}}},"s":{"docs":{},".":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},"n":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"objects/":{"ref":"objects/","tf":0.004166666666666667},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"i":{"docs":{},"t":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104}}}}},"e":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}},"d":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}}},"l":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}},".":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.009966777408637873},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},"d":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}}}},"r":{"docs":{},"e":{"docs":{},",":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464}}},"b":{"docs":{},"i":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}},"a":{"docs":{},"t":{"docs":{},"'":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.0038503850385038503}}}},"l":{"docs":{},"e":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}}}}}}}}},"y":{"docs":{},",":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.003872216844143272},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},"s":{"docs":{},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}},"l":{"docs":{},"d":{"1":{"docs":{},".":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901}}}},"docs":{"hello-world/":{"ref":"hello-world/","tf":5.0594059405940595},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}}}},"d":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}},"s":{"docs":{},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/":{"ref":"objects/","tf":0.004166666666666667},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}},"t":{"docs":{},"h":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}},"r":{"docs":{},"i":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"types/struct.html":{"ref":"types/struct.html","tf":0.0036363636363636364},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.007537688442211055},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/option.html":{"ref":"errors/option.html","tf":0.01078167115902965},"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}},"i":{"docs":{},"n":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},".":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}},"d":{"docs":{},"e":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}},"t":{"docs":{},"h":{"docs":{},":":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}},"s":{"docs":{},"h":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}},"e":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.013793103448275862}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.005504587155963303},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},".":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}}},"a":{"docs":{},"p":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}},"y":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0023264831329972858},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0068454078722190535},"advanced/references.html":{"ref":"advanced/references.html","tf":0.02627511591962906},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.02621231979030144},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.020527859237536656},"types/struct.html":{"ref":"types/struct.html","tf":0.012727272727272728},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.013289036544850499},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"functions/":{"ref":"functions/","tf":0.004529441368897836},"pattern/":{"ref":"pattern/","tf":0.005500550055005501},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0032085561497326204},"templates/":{"ref":"templates/","tf":0.007073386383731211},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0057670126874279125}},"m":{"docs":{},"i":{"docs":{},"r":{"1":{"docs":{},":":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0031678986272439284},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}}},"docs":{"./":{"ref":"./","tf":0.0069605568445475635},"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/":{"ref":"primitives/","tf":0.043478260869565216},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0029563932002956393},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0019387359441644049},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"modules/":{"ref":"modules/","tf":0.0027002700270027003},"objects/":{"ref":"objects/","tf":0.008333333333333333},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.001509813789632612},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.005504587155963303},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838},"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"objects/common_traits.html":{"ref":"objects/common_traits.html","tf":0.05263157894736842}},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0019387359441644049},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/":{"ref":"objects/","tf":0.004166666666666667},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},")":{"docs":{},",":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}},".":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"n":{"docs":{},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},")":{"docs":{},".":{"docs":{},")":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}},";":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}},";":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"functions/":{"ref":"functions/","tf":0.0010065425264217413}}},"o":{"docs":{},"u":{"docs":{},".":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}}},".":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}},"t":{"docs":{},"o":{"docs":{},"!":{"docs":{},"(":{"docs":{},"&":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},")":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}},":":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.008571428571428572}}},"e":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}},"s":{"docs":{},",":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}}}},"|":{"docs":{"functions/":{"ref":"functions/","tf":0.001509813789632612},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},"=":{"docs":{},">":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}},"}":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}}}},"z":{"0":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}},"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.002852253280091272},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"l":{"docs":{},"i":{"docs":{},"b":{"1":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0069605568445475635}}}},"docs":{}}}},"]":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}},")":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/special.html":{"ref":"templates/special.html","tf":0.002834868887313962}}},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}},"}":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471}}},";":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"~":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.009569377990430622},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"/":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}},"/":{"docs":{},"g":{"docs":{},"y":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.004640371229698376}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.002320185614849188}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"s":{"docs":{},"/":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}},"=":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}}}},"!":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.014354066985645933},"objects/class.html":{"ref":"objects/class.html","tf":0.010648596321393998},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002770083102493075}},"!":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.019801980198019802},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"templates/":{"ref":"templates/","tf":0.0008841732979664014}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"s":{"8":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"docs":{}}},"'":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901}}}},"\"":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806}},")":{"docs":{},";":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806}}}},";":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188}}},"}":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"=":{"1":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"docs":{}}},"docs":{}}},"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0034602076124567475}},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"i":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}},"n":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}}},"o":{"docs":{},"f":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}}}},"?":{"docs":{},"\"":{"docs":{},";":{"docs":{"advanced/":{"ref":"advanced/","tf":0.004392386530014641}}}}},",":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},")":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"(":{"docs":{},"a":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}}},"e":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"\"":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.002714230321830167},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.003942181340341655},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"templates/":{"ref":"templates/","tf":0.004420866489832007},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.011730205278592375}}}}}}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.004434589800443459},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0031019775106630476},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188},"types/struct.html":{"ref":"types/struct.html","tf":0.0027272727272727275},"types/aka.html":{"ref":"types/aka.html","tf":0.02},"objects/class.html":{"ref":"objects/class.html","tf":0.006776379477250726},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"pattern/":{"ref":"pattern/","tf":0.00605060506050605},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0053475935828877},"errors/option.html":{"ref":"errors/option.html","tf":0.01078167115902965},"templates/special.html":{"ref":"templates/special.html","tf":0.004961020552799433},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002770083102493075},"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"\"":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}},")":{"docs":{},";":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}},";":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931}}}}}},"r":{"docs":{},"i":{"docs":{},"\"":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}}},")":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.00461361014994233}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}},";":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}}},"☺":{"docs":{},"\"":{"docs":{},"s":{"8":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"docs":{}}}},"!":{"docs":{},"\"":{"docs":{},")":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},";":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}},"i":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}},"'":{"docs":{},"m":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"advanced/":{"ref":"advanced/","tf":0.004392386530014641}}}},"h":{"docs":{},"u":{"docs":{},"\"":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}},"u":{"docs":{},"e":{"docs":{},"\"":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"2":{"docs":{},"\"":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"docs":{},"\"":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"\"":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},"\"":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"t":{"docs":{},"\"":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}},"u":{"docs":{},"n":{"docs":{},"\"":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"&":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},")":{"docs":{},",":{"docs":{},"&":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},")":{"docs":{},")":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"o":{"docs":{},"\"":{"docs":{},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}}},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"/":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"g":{"docs":{},"c":{"docs":{},"c":{"docs":{},"/":{"docs":{},"g":{"docs":{},"c":{"docs":{},"c":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}}},"y":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"/":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"/":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"/":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"y":{"docs":{},"r":{"docs":{},"\"":{"docs":{},",":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}}}}},"z":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}},"}":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"\"":{"docs":{},",":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974}}}}}}}}}}}}}}}}}}}}}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}},"(":{"docs":{},"\"":{"docs":{},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}},"'":{"3":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"4":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"5":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"7":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"8":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634}}}},"9":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088}}}},"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901}}}}}},"'":{"docs":{},";":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188}}}}},"=":{"docs":{},"'":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}},">":{"docs":{},"'":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},"d":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"'":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}},"e":{"docs":{},"f":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{},"'":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"'":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"'":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"'":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}},"'":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429}}},")":{"docs":{},";":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}},"c":{"8":{"docs":{},")":{"docs":{},";":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}},"docs":{}}}},"!":{"docs":{},"'":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}},".":{"docs":{},".":{"docs":{},"'":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}},")":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}},"\\":{"docs":{},"u":{"docs":{},"{":{"0":{"docs":{},"x":{"2":{"6":{"3":{"docs":{},"a":{"docs":{},"}":{"docs":{},"'":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"'":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}}}},"'":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"'":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}}},"}":{"docs":{},"'":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},")":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}},"☺":{"docs":{},"'":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"c":{"8":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}}}},"docs":{}}}},"(":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}},")":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}},":":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},";":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}},"b":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},"a":{"docs":{},"r":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634}}}},"z":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.004563605248146035}}}},"r":{"docs":{},"'":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"'":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"'":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}}}}},"i":{"3":{"2":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0022818026240730175}}}},"docs":{}},"docs":{},"f":{"docs":{},"'":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}},"n":{"docs":{},"'":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"'":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}},"s":{"docs":{},"'":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}}},"x":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.006274957216200799}},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}},"y":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}},"z":{"docs":{},"'":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}},")":{"docs":{},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"'":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}}}}}},"_":{"docs":{},"'":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}},")":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0016501650165016502},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0032085561497326204}},"?":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"'":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"'":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"'":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"'":{"docs":{"modules/":{"ref":"modules/","tf":0.0018001800180018}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"'":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"'":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367}}}}}}}},"{":{"docs":{},"'":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"a":{"docs":{},"'":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},"k":{"docs":{},"a":{"docs":{},"'":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"'":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"'":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}}},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},"'":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}}}},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"'":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}}}}},"|":{"docs":{},"'":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"functions/":{"ref":"functions/","tf":0.0010065425264217413}}}},"@":{"docs":{},"'":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},"o":{"docs":{},"f":{"docs":{},"'":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}},"*":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.020618556701030927},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0068454078722190535},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.009569377990430622},"modules/":{"ref":"modules/","tf":0.004500450045004501},"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.004223864836325237},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/special.html":{"ref":"templates/special.html","tf":0.004961020552799433},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"/":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.041237113402061855},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.00513405590416429},"modules/":{"ref":"modules/","tf":0.0027002700270027003},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/special.html":{"ref":"templates/special.html","tf":0.004252303330970942}}},"=":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},"*":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}},"e":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},".":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"modules/":{"ref":"modules/","tf":0.0009000900090009},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}},"/":{"docs":{},"a":{"docs":{},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901}}}}}}}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.002714230321830167},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"objects/":{"ref":"objects/","tf":0.008333333333333333},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}},"}":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}},")":{"docs":{},".":{"docs":{"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203}}}}}},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}}}},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.007722007722007722}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.009652509652509652}}}}}}},"{":{"0":{"docs":{},"}":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}}}},"1":{"docs":{},"}":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806}}}},"2":{"9":{"9":{"docs":{},"}":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}}}},"docs":{}},"docs":{},"}":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}}}},"3":{"0":{"0":{"docs":{},"}":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}}}},"docs":{}},"docs":{},"}":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.022818026240730177},"primitives/control.html":{"ref":"primitives/control.html","tf":0.02890932982917214},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.007320644216691069},"advanced/references.html":{"ref":"advanced/references.html","tf":0.02009273570324575},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.01310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.011730205278592375},"advanced/best.html":{"ref":"advanced/best.html","tf":0.007537688442211055},"modules/":{"ref":"modules/","tf":0.010801080108010801},"types/struct.html":{"ref":"types/struct.html","tf":0.00909090909090909},"types/enum.html":{"ref":"types/enum.html","tf":0.01929260450160772},"types/aka.html":{"ref":"types/aka.html","tf":0.022857142857142857},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.02516940948693127},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.019933554817275746},"objects/methods.html":{"ref":"objects/methods.html","tf":0.023036649214659685},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.03009503695881732},"objects/traits.html":{"ref":"objects/traits.html","tf":0.040526849037487336},"objects/cast.html":{"ref":"objects/cast.html","tf":0.020869565217391306},"functions/":{"ref":"functions/","tf":0.021640664318067437},"pattern/":{"ref":"pattern/","tf":0.0374037403740374},"errors/main.html":{"ref":"errors/main.html","tf":0.012844036697247707},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.01862464183381089},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0374331550802139},"errors/option.html":{"ref":"errors/option.html","tf":0.029649595687331536},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.020942408376963352},"templates/":{"ref":"templates/","tf":0.020335985853227233},"templates/special.html":{"ref":"templates/special.html","tf":0.028348688873139617},"templates/cte.html":{"ref":"templates/cte.html","tf":0.018005540166204988},"templates/values.html":{"ref":"templates/values.html","tf":0.02669902912621359},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.034482758620689655},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.035398230088495575},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.036231884057971016},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.021505376344086023},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.021235521235521235},"templates/operators.html":{"ref":"templates/operators.html","tf":0.03575547866205306}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}},"}":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"modules/":{"ref":"modules/","tf":0.0036003600360036},"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0062827225130890054},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.024287222808870117},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0121580547112462},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"functions/":{"ref":"functions/","tf":0.0025163563160543532},"pattern/":{"ref":"pattern/","tf":0.0038503850385038503},"errors/main.html":{"ref":"errors/main.html","tf":0.005504587155963303},"templates/":{"ref":"templates/","tf":0.0035366931918656055},"templates/special.html":{"ref":"templates/special.html","tf":0.0063784549964564135},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.013793103448275862},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.017699115044247787},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305},"templates/operators.html":{"ref":"templates/operators.html","tf":0.00922722029988466}},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},"=":{"docs":{},">":{"1":{"2":{"docs":{},",":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"3":{"2":{"docs":{},"}":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"docs":{}},"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}}},"\"":{"docs":{},",":{"docs":{"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}},"h":{"docs":{},"i":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},"&":{"docs":{},"f":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"3":{"2":{"docs":{},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"docs":{}},"docs":{}}}}}},"f":{"6":{"4":{"docs":{},"}":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}},"docs":{}},"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374}},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},"}":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},"o":{"docs":{},"o":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}},"t":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.011339475549255847},"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263}},",":{"docs":{"templates/":{"ref":"templates/","tf":0.0035366931918656055}}},"}":{"docs":{"templates/":{"ref":"templates/","tf":0.007073386383731211},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/values.html":{"ref":"templates/values.html","tf":0.007281553398058253}},"(":{"docs":{},"a":{"docs":{"templates/":{"ref":"templates/","tf":0.0017683465959328027}}}},";":{"docs":{"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},"}":{"docs":{},";":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}}},"u":{"6":{"4":{"docs":{},"}":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"docs":{}},"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.007281553398058253}},",":{"docs":{"templates/":{"ref":"templates/","tf":0.0017683465959328027}}},"}":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}}}},"n":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806}}},"j":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},"x":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263}},"}":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.006067961165048544}},"(":{"docs":{},"x":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0048543689320388345}}}}}}},"}":{"docs":{"hello-world/":{"ref":"hello-world/","tf":0.009900990099009901},"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.013303769401330377},"primitives/types.html":{"ref":"primitives/types.html","tf":0.011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.018824871648602397},"primitives/control.html":{"ref":"primitives/control.html","tf":0.01971090670170828},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.007320644216691069},"advanced/references.html":{"ref":"advanced/references.html","tf":0.017001545595054096},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.01310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.011730205278592375},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"modules/":{"ref":"modules/","tf":0.010801080108010801},"types/struct.html":{"ref":"types/struct.html","tf":0.00909090909090909},"types/enum.html":{"ref":"types/enum.html","tf":0.015005359056806002},"types/aka.html":{"ref":"types/aka.html","tf":0.022857142857142857},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.02516940948693127},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.019933554817275746},"objects/methods.html":{"ref":"objects/methods.html","tf":0.02198952879581152},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.026399155227032733},"objects/traits.html":{"ref":"objects/traits.html","tf":0.03546099290780142},"objects/cast.html":{"ref":"objects/cast.html","tf":0.020869565217391306},"functions/":{"ref":"functions/","tf":0.020130850528434826},"pattern/":{"ref":"pattern/","tf":0.03355335533553355},"errors/main.html":{"ref":"errors/main.html","tf":0.009174311926605505},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.014326647564469915},"errors/catching.html":{"ref":"errors/catching.html","tf":0.044919786096256686},"errors/option.html":{"ref":"errors/option.html","tf":0.03504043126684636},"templates/":{"ref":"templates/","tf":0.019451812555260833},"templates/special.html":{"ref":"templates/special.html","tf":0.028348688873139617},"templates/cte.html":{"ref":"templates/cte.html","tf":0.01731301939058172},"templates/values.html":{"ref":"templates/values.html","tf":0.025485436893203883},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.034482758620689655},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.035398230088495575},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.036231884057971016},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.021505376344086023},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.023166023166023165},"templates/operators.html":{"ref":"templates/operators.html","tf":0.03460207612456748}},";":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.003942181340341655},"functions/":{"ref":"functions/","tf":0.001509813789632612},"pattern/":{"ref":"pattern/","tf":0.0022002200220022}}},")":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.004287245444801715}}}},"&":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.009569377990430622},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"types/struct.html":{"ref":"types/struct.html","tf":0.0036363636363636364},"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0074866310160427805},"errors/option.html":{"ref":"errors/option.html","tf":0.005390835579514825},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}},",":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0053475935828877}}},")":{"docs":{},".":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}},".":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},";":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175}}}}}}},"x":{"docs":{},")":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},")":{"docs":{},";":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}},"!":{"docs":{},"{":{"docs":{},"u":{"docs":{},"}":{"docs":{},")":{"docs":{},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}}}}}}}},"a":{"docs":{},")":{"docs":{},")":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}},",":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667}}},"=":{"docs":{"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247}}}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},")":{"docs":{},";":{"docs":{"functions/":{"ref":"functions/","tf":0.0020130850528434826}}}}}}}},":":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},")":{"docs":{},";":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.003872216844143272},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},")":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0020942408376963353}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}}}},"(":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.005235602094240838}},",":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},")":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},")":{"docs":{"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894}}}}}}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}}}}}}}},"i":{"3":{"2":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619}}},"docs":{}},"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/catching.html":{"ref":"errors/catching.html","tf":0.009625668449197862}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},",":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},")":{"docs":{},".":{"docs":{"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175}}}}}}}},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"pattern/":{"ref":"pattern/","tf":0.0011001100110011}},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},")":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931}}},".":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}}}}}}}}}}}}},"&":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}},"b":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}},"a":{"docs":{},"r":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},",":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}},".":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175}}}},"z":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},";":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"objects/cast.html":{"ref":"objects/cast.html","tf":0.006956521739130435},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.005791505791505791}},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}},")":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}},"n":{"docs":{},"(":{"docs":{},"i":{"3":{"2":{"docs":{},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},"docs":{}},"docs":{}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"functions/":{"ref":"functions/","tf":0.0020130850528434826}}}}}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}}}}}}}}},"m":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202}}}}}}}}}}}}}}},"=":{"1":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"docs":{}}},"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.021433850702143386},"primitives/types.html":{"ref":"primitives/types.html","tf":0.02093834819697557},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.014831717056474614},"primitives/control.html":{"ref":"primitives/control.html","tf":0.01445466491458607},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.009569377990430622},"advanced/":{"ref":"advanced/","tf":0.017569546120058566},"advanced/references.html":{"ref":"advanced/references.html","tf":0.02627511591962906},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.02621231979030144},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.02932551319648094},"advanced/best.html":{"ref":"advanced/best.html","tf":0.010050251256281407},"types/struct.html":{"ref":"types/struct.html","tf":0.02181818181818182},"types/enum.html":{"ref":"types/enum.html","tf":0.031082529474812434},"types/aka.html":{"ref":"types/aka.html","tf":0.022857142857142857},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.022265246853823813},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.04983388704318937},"objects/methods.html":{"ref":"objects/methods.html","tf":0.014659685863874346},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.012143611404435059},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"objects/cast.html":{"ref":"objects/cast.html","tf":0.03130434782608696},"functions/":{"ref":"functions/","tf":0.025163563160543533},"pattern/":{"ref":"pattern/","tf":0.014301430143014302},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.010471204188481676},"templates/":{"ref":"templates/","tf":0.008841732979664015},"templates/special.html":{"ref":"templates/special.html","tf":0.007795889440113395},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806},"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.03103448275862069},"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.035398230088495575},"traits/disposable.html":{"ref":"traits/disposable.html","tf":0.007246376811594203},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.021505376344086023},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.021235521235521235},"templates/operators.html":{"ref":"templates/operators.html","tf":0.02306805074971165}},"=":{"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0022172949002217295},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.01466275659824047},"types/struct.html":{"ref":"types/struct.html","tf":0.008181818181818182},"types/enum.html":{"ref":"types/enum.html","tf":0.006430868167202572},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"pattern/":{"ref":"pattern/","tf":0.0044004400440044},"templates/operators.html":{"ref":"templates/operators.html","tf":0.016147635524798153}},"=":{"docs":{},"=":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0031678986272439284}}}}},">":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.003695881731784583},"objects/traits.html":{"ref":"objects/traits.html","tf":0.002026342451874367},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.004529441368897836},"pattern/":{"ref":"pattern/","tf":0.0176017601760176},"errors/catching.html":{"ref":"errors/catching.html","tf":0.008556149732620321},"errors/option.html":{"ref":"errors/option.html","tf":0.01078167115902965},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.010471204188481676},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.005791505791505791}}},",":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"x":{"8":{"6":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"docs":{}},"docs":{"hello-world/commentaires.html":{"ref":"hello-world/commentaires.html","tf":0.010309278350515464},"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.018477457501847747},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0081426909654905},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.009697661152310326},"primitives/control.html":{"ref":"primitives/control.html","tf":0.011826544021024968},"advanced/":{"ref":"advanced/","tf":0.02635431918008785},"advanced/references.html":{"ref":"advanced/references.html","tf":0.03245749613601236},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.01703800786369594},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.03225806451612903},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.016363636363636365},"types/enum.html":{"ref":"types/enum.html","tf":0.003215434083601286},"types/aka.html":{"ref":"types/aka.html","tf":0.02},"objects/class.html":{"ref":"objects/class.html","tf":0.00484027105517909},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.016611295681063124},"objects/methods.html":{"ref":"objects/methods.html","tf":0.009424083769633508},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0026399155227032735},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0052173913043478265},"functions/":{"ref":"functions/","tf":0.027679919476597887},"pattern/":{"ref":"pattern/","tf":0.009900990099009901},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"errors/option.html":{"ref":"errors/option.html","tf":0.008086253369272238},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.015706806282722512},"templates/":{"ref":"templates/","tf":0.008841732979664015},"templates/special.html":{"ref":"templates/special.html","tf":0.011339475549255847},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.012135922330097087},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861},"templates/operators.html":{"ref":"templates/operators.html","tf":0.008073817762399077}},")":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.009708737864077669}},";":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0029563932002956393},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0022818026240730175},"advanced/references.html":{"ref":"advanced/references.html","tf":0.00927357032457496},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263}}},")":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.001936108422071636},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.0033222591362126247},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.002077562326869806},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},".":{"0":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"1":{"docs":{},")":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},")":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}},"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"advanced/references.html":{"ref":"advanced/references.html","tf":0.00927357032457496},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}}}},"i":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},"t":{"docs":{},"o":{"docs":{},"!":{"docs":{},"(":{"docs":{},"&":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},")":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/references.html":{"ref":"advanced/references.html","tf":0.00463678516228748},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.007863695937090432},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.008797653958944282},"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}},":":{"docs":{"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857}},":":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}}}}}}}}}}}}}}}}}},"*":{"docs":{},"y":{"docs":{},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}},"!":{"docs":{},"(":{"docs":{},"i":{"3":{"2":{"docs":{},")":{"docs":{},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014}}}}}}}}},"docs":{}},"docs":{}}},"{":{"docs":{},"i":{"3":{"2":{"docs":{},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"docs":{}},"docs":{}}}},"}":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"[":{"0":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}},"]":{"docs":{"advanced/":{"ref":"advanced/","tf":0.005856515373352855},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.008797653958944282},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"[":{"0":{"docs":{},"]":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"1":{"docs":{},"]":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},"docs":{}}},",":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"1":{"0":{"docs":{},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}}},"2":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"]":{"docs":{},";":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}}},"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0023264831329972858},"advanced/":{"ref":"advanced/","tf":0.004392386530014641},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.01310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188}}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},"]":{"docs":{},";":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}}},"2":{"docs":{},",":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0029282576866764276},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}},"]":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"4":{"docs":{},"]":{"docs":{},"]":{"docs":{},";":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}}}},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0036363636363636364}}}},"7":{"docs":{},",":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}},"8":{"9":{"docs":{},",":{"docs":{"advanced/references.html":{"ref":"advanced/references.html","tf":0.0015455950540958269}}}},"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}}},"9":{"docs":{},",":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.023923444976076555}},"a":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}},"]":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}},"]":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}},")":{"docs":{},";":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}}}},"c":{"3":{"2":{"docs":{},"]":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"types/enum.html":{"ref":"types/enum.html","tf":0.007502679528403001},"objects/cast.html":{"ref":"objects/cast.html","tf":0.0034782608695652175},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"types/enum.html":{"ref":"types/enum.html","tf":0.003215434083601286},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}},")":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}},"}":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}},"h":{"docs":{},"i":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},";":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}},"docs":{}},"8":{"docs":{},"]":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}},",":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.0034482758620689655}}},")":{"docs":{"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},";":{"docs":{"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.008849557522123894},"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.010752688172043012},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}},"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"1":{"3":{"docs":{},",":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"3":{"2":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"]":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"advanced/":{"ref":"advanced/","tf":0.004392386530014641},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.005242463958060288},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072}}},".":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138}}},")":{"docs":{"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0042780748663101605},"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}},"]":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.005865102639296188}},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}},".":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}},";":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.002306805074971165}}}}},"docs":{}},"docs":{},"]":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"advanced/":{"ref":"advanced/","tf":0.010248901903367497},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0030911901081916537},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.007863695937090432},"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.011730205278592375},"advanced/best.html":{"ref":"advanced/best.html","tf":0.01507537688442211},"types/struct.html":{"ref":"types/struct.html","tf":0.0036363636363636364},"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}},"b":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}}}}}}},".":{"docs":{},"/":{"docs":{},"a":{"docs":{},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}}}}}},"[":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}}}},"docs":{},"c":{"8":{"docs":{},"]":{"docs":{},"]":{"docs":{},")":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}},",":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544}}}}}},"docs":{}},"[":{"docs":{},"i":{"3":{"2":{"docs":{},"]":{"docs":{},"]":{"docs":{},"]":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0029282576866764276}}}}}},"docs":{}},"docs":{}}},"i":{"3":{"2":{"docs":{},"]":{"docs":{},"]":{"docs":{"advanced/copies.html":{"ref":"advanced/copies.html","tf":0.002932551319648094}}}}},"docs":{}},"docs":{}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"]":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"]":{"docs":{"objects/cast.html":{"ref":"objects/cast.html","tf":0.0017391304347826088}}}}}}}}}},";":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}},"u":{"8":{"docs":{},"]":{"docs":{},",":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}},"docs":{},"]":{"docs":{},",":{"docs":{"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},"}":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}},"(":{"docs":{},"a":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}}},".":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}},";":{"docs":{"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}},"&":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},")":{"docs":{},"]":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}},"b":{"docs":{},")":{"docs":{},"]":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}}}}}}}},"z":{"docs":{},"]":{"docs":{},",":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}}}}},"x":{"docs":{},"]":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},")":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},"b":{"docs":{},"]":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},",":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}},"^":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.004434589800443459},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/":{"ref":"advanced/","tf":0.004392386530014641},"advanced/references.html":{"ref":"advanced/references.html","tf":0.00463678516228748},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.002621231979030144},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"types/enum.html":{"ref":"types/enum.html","tf":0.004287245444801715},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.010471204188481676},"functions/":{"ref":"functions/","tf":0.00754906894816306},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.010471204188481676},"templates/":{"ref":"templates/","tf":0.002652519893899204},"templates/special.html":{"ref":"templates/special.html","tf":0.002126151665485471},"templates/cte.html":{"ref":"templates/cte.html","tf":0.006925207756232687},"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"^":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"^":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0022818026240730175},"advanced/references.html":{"ref":"advanced/references.html","tf":0.0061823802163833074},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.006863780359028511},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"errors/main.html":{"ref":"errors/main.html","tf":0.005504587155963303},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"^":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}},"^":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0017113519680547634},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.005242463958060288},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}},"^":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"pattern/":{"ref":"pattern/","tf":0.00055005500550055}},"^":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}},"^":{"docs":{},"^":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.003215434083601286},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0010131712259371835}}}}}}}}}}},"_":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/class.html":{"ref":"objects/class.html","tf":0.008712487899322363},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0026399155227032735},"functions/":{"ref":"functions/","tf":0.0005032712632108706},"pattern/":{"ref":"pattern/","tf":0.007150715071507151},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0032085561497326204},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"pattern/":{"ref":"pattern/","tf":0.0016501650165016502}}},".":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098},"modules/":{"ref":"modules/","tf":0.0009000900090009}}},"_":{"docs":{},"a":{"docs":{},"_":{"docs":{},"_":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197}},";":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}},"b":{"docs":{},"_":{"docs":{},"_":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}},",":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}},"c":{"docs":{},"_":{"docs":{},"_":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197}}}}},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"_":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197}},")":{"docs":{},";":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}}},"_":{"docs":{},"_":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0021436227224008574}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"_":{"docs":{},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"m":{"docs":{},"a":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"_":{"docs":{},".":{"docs":{"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}}},"z":{"docs":{},"_":{"docs":{},"_":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"_":{"docs":{},"_":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"traits/copiable.html":{"ref":"traits/copiable.html","tf":0.02654867256637168}},"i":{"docs":{},"d":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}}},"w":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},"x":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.015488867376573089},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0062827225130890054},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.005807814149947202},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981}},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},".":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}},"y":{"1":{"3":{"3":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"3":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"c":{"docs":{},"s":{"docs":{},"t":{"docs":{},"x":{"docs":{},"s":{"docs":{},"c":{"3":{"2":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}},"8":{"3":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"3":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"s":{"docs":{},"t":{"docs":{},"x":{"docs":{},"a":{"9":{"docs":{},"c":{"3":{"2":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}},"docs":{}},"3":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"2":{"docs":{},"i":{"docs":{},"o":{"1":{"1":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"n":{"docs":{},"i":{"3":{"2":{"7":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"3":{"2":{"docs":{},"z":{"docs":{},"v":{"docs":{"templates/cte.html":{"ref":"templates/cte.html","tf":0.0006925207756232687}}}}},"docs":{}},"docs":{}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"docs":{}},"docs":{}}}},"3":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"6":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"8":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"2":{"5":{"docs":{},"_":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"_":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"f":{"docs":{},"p":{"8":{"3":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"3":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"x":{"docs":{},"p":{"3":{"2":{"docs":{},"x":{"3":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"1":{"0":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"3":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"6":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"n":{"docs":{},"u":{"8":{"3":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"z":{"docs":{},"v":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}},"docs":{}},"docs":{}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}},"docs":{}},"docs":{}}}}},"docs":{}}},"docs":{}},"docs":{}}}}}}},"docs":{}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"7":{"docs":{},"_":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"_":{"docs":{},"_":{"docs":{},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"f":{"docs":{},"x":{"docs":{},"p":{"9":{"docs":{},"x":{"3":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"3":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{},"u":{"8":{"docs":{},"z":{"docs":{},"u":{"docs":{},"s":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}}}}}},"docs":{}}}}}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"4":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"f":{"docs":{},"p":{"8":{"3":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"3":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"x":{"docs":{},"p":{"3":{"2":{"docs":{},"x":{"3":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"1":{"0":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"3":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"6":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"n":{"docs":{},"u":{"8":{"3":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"z":{"docs":{},"v":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}}}},"docs":{}},"docs":{}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}},"docs":{}},"docs":{}}}}},"docs":{}}},"docs":{}},"docs":{}}},"z":{"docs":{},"s":{"docs":{},"u":{"8":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}},"docs":{}}}}}}}},"docs":{}}}}},"docs":{}},"docs":{}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}},"docs":{}}}},"f":{"docs":{},"o":{"docs":{},"o":{"3":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"4":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},"f":{"docs":{},"x":{"docs":{},"p":{"9":{"docs":{},"x":{"3":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"3":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{},"c":{"8":{"docs":{},"z":{"docs":{},"x":{"docs":{},"p":{"9":{"docs":{},"x":{"3":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"3":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}}}}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}}}}}},"docs":{},"t":{"docs":{},"i":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}}}},"v":{"docs":{},"t":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}}}}}}}},"docs":{}}}}},"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.00484027105517909},"pattern/":{"ref":"pattern/","tf":0.0033003300330033004}},",":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}},"z":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},"a":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0031413612565445027}},",":{"docs":{"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547}}}}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"u":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.004223864836325237}}}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}}}}},"i":{"docs":{"functions/":{"ref":"functions/","tf":0.0010065425264217413},"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931}}},")":{"docs":{"pattern/":{"ref":"pattern/","tf":0.0027502750275027505},"errors/option.html":{"ref":"errors/option.html","tf":0.008086253369272238}},",":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}},".":{"docs":{"pattern/":{"ref":"pattern/","tf":0.00055005500550055}}}},"j":{"docs":{"traits/streamable.html":{"ref":"traits/streamable.html","tf":0.006896551724137931}}},"v":{"docs":{"traits/hashable.html":{"ref":"traits/hashable.html","tf":0.021505376344086023},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.007722007722007722}}},"u":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.003861003861003861}}}},"j":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0007390983000739098}}}}}}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"objects/":{"ref":"objects/","tf":0.016666666666666666},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101}},",":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}}}}},",":{"docs":{"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0014326647564469914}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.0019305019305019305}}}}},")":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"|":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0015509887553315238},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0022818026240730175},"primitives/control.html":{"ref":"primitives/control.html","tf":0.003942181340341655},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.019138755980861243},"modules/":{"ref":"modules/","tf":0.0009000900090009},"types/struct.html":{"ref":"types/struct.html","tf":0.019090909090909092},"types/enum.html":{"ref":"types/enum.html","tf":0.031082529474812434},"objects/class.html":{"ref":"objects/class.html","tf":0.006776379477250726},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0010471204188481676},"objects/cast.html":{"ref":"objects/cast.html","tf":0.03130434782608696},"functions/":{"ref":"functions/","tf":0.001509813789632612},"pattern/":{"ref":"pattern/","tf":0.00825082508250825},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.0028653295128939827},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0074866310160427805},"templates/":{"ref":"templates/","tf":0.004420866489832007},"templates/special.html":{"ref":"templates/special.html","tf":0.004961020552799433},"templates/cte.html":{"ref":"templates/cte.html","tf":0.0013850415512465374},"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263},"traits/serialize.html":{"ref":"traits/serialize.html","tf":0.005791505791505791},"templates/operators.html":{"ref":"templates/operators.html","tf":0.00461361014994233}},"|":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"functions/":{"ref":"functions/","tf":0.0020130850528434826},"pattern/":{"ref":"pattern/","tf":0.0011001100110011},"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263}}},"x":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}},",":{"docs":{"functions/":{"ref":"functions/","tf":0.0010065425264217413}}},"|":{"docs":{"functions/":{"ref":"functions/","tf":0.001509813789632612}},"=":{"docs":{},">":{"docs":{"functions/":{"ref":"functions/","tf":0.0005032712632108706}}}}}},"i":{"docs":{"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.010471204188481676}}}},"—":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0029563932002956393},"modules/":{"ref":"modules/","tf":0.0027002700270027003}},",":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}},"┃":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.011825572801182557},"primitives/types.html":{"ref":"primitives/types.html","tf":0.0011632415664986429},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.015972618368511125},"primitives/control.html":{"ref":"primitives/control.html","tf":0.00788436268068331},"advanced/":{"ref":"advanced/","tf":0.010248901903367497},"advanced/references.html":{"ref":"advanced/references.html","tf":0.00463678516228748},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.009174311926605505},"advanced/best.html":{"ref":"advanced/best.html","tf":0.0728643216080402},"modules/":{"ref":"modules/","tf":0.004500450045004501},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"types/enum.html":{"ref":"types/enum.html","tf":0.03858520900321544},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.002904162633107454},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.048167539267015703},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.04329461457233368},"objects/traits.html":{"ref":"objects/traits.html","tf":0.03343465045592705},"functions/":{"ref":"functions/","tf":0.0291897332662305},"pattern/":{"ref":"pattern/","tf":0.0027502750275027505},"errors/main.html":{"ref":"errors/main.html","tf":0.031192660550458717},"errors/catching.html":{"ref":"errors/catching.html","tf":0.006417112299465241},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.031413612565445025},"templates/":{"ref":"templates/","tf":0.01237842617152962},"templates/special.html":{"ref":"templates/special.html","tf":0.008504606661941885},"templates/cte.html":{"ref":"templates/cte.html","tf":0.15373961218836565},"templates/values.html":{"ref":"templates/values.html","tf":0.01820388349514563}}},"┗":{"docs":{},"━":{"docs":{},"━":{"docs":{},"━":{"docs":{},"━":{"docs":{},"━":{"docs":{},"┻":{"docs":{},"━":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.0014781966001478197},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0011409013120365088},"primitives/control.html":{"ref":"primitives/control.html","tf":0.001314060446780552},"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"types/enum.html":{"ref":"types/enum.html","tf":0.004287245444801715},"objects/methods.html":{"ref":"objects/methods.html","tf":0.0062827225130890054},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.004751847940865892},"objects/traits.html":{"ref":"objects/traits.html","tf":0.004052684903748734},"functions/":{"ref":"functions/","tf":0.0025163563160543532},"errors/main.html":{"ref":"errors/main.html","tf":0.003669724770642202},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/cte.html":{"ref":"templates/cte.html","tf":0.004847645429362881},"templates/values.html":{"ref":"templates/values.html","tf":0.0024271844660194173}}}},"━":{"docs":{"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/enum.html":{"ref":"types/enum.html","tf":0.0010718113612004287},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0010559662090813093},"functions/":{"ref":"functions/","tf":0.0010065425264217413},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/":{"ref":"templates/","tf":0.0008841732979664014},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}}}}}}}},"╋":{"docs":{"primitives/variables.html":{"ref":"primitives/variables.html","tf":0.003695491500369549},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.003993154592127781},"primitives/control.html":{"ref":"primitives/control.html","tf":0.002628120893561104},"advanced/":{"ref":"advanced/","tf":0.004392386530014641},"advanced/references.html":{"ref":"advanced/references.html","tf":0.00463678516228748},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.003931847968545216},"advanced/best.html":{"ref":"advanced/best.html","tf":0.007537688442211055},"modules/":{"ref":"modules/","tf":0.0018001800180018},"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182},"types/enum.html":{"ref":"types/enum.html","tf":0.007502679528403001},"types/aka.html":{"ref":"types/aka.html","tf":0.002857142857142857},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818},"objects/mutability.html":{"ref":"objects/mutability.html","tf":0.006644518272425249},"objects/methods.html":{"ref":"objects/methods.html","tf":0.010471204188481676},"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.008447729672650475},"objects/traits.html":{"ref":"objects/traits.html","tf":0.0070921985815602835},"functions/":{"ref":"functions/","tf":0.006542526421741319},"pattern/":{"ref":"pattern/","tf":0.0022002200220022},"errors/main.html":{"ref":"errors/main.html","tf":0.009174311926605505},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0021390374331550803},"errors/fptr_closure.html":{"ref":"errors/fptr_closure.html","tf":0.010471204188481676},"templates/":{"ref":"templates/","tf":0.0017683465959328027},"templates/special.html":{"ref":"templates/special.html","tf":0.001417434443656981},"templates/cte.html":{"ref":"templates/cte.html","tf":0.007617728531855956},"templates/values.html":{"ref":"templates/values.html","tf":0.0036407766990291263}}},";":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0019387359441644049},"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"pattern/":{"ref":"pattern/","tf":0.00055005500550055},"templates/values.html":{"ref":"templates/values.html","tf":0.0012135922330097086}}},"?":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.0007754943776657619},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"advanced/best.html":{"ref":"advanced/best.html","tf":0.002512562814070352},"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"errors/option.html":{"ref":"errors/option.html","tf":0.0026954177897574125}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}},"?":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"templates/special.html":{"ref":"templates/special.html","tf":0.0007087172218284905}}}}}}},"\\":{"docs":{},"u":{"docs":{},"{":{"0":{"docs":{},"x":{"docs":{},"b":{"docs":{},"}":{"docs":{},".":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}},"}":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"1":{"2":{"docs":{},"}":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"docs":{}},"docs":{}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}}}}}},"o":{"docs":{},"t":{"docs":{"primitives/types.html":{"ref":"primitives/types.html","tf":0.00038774718883288094}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"advanced/":{"ref":"advanced/","tf":0.0014641288433382138},"advanced/alias.html":{"ref":"advanced/alias.html","tf":0.001310615989515072},"advanced/best.html":{"ref":"advanced/best.html","tf":0.005025125628140704},"objects/methods.html":{"ref":"objects/methods.html","tf":0.004188481675392671},"functions/":{"ref":"functions/","tf":0.0010065425264217413}}}}}}},"i":{"docs":{},"t":{"docs":{"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}}}}},"%":{"docs":{"primitives/functions.html":{"ref":"primitives/functions.html","tf":0.0005704506560182544},"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}},"=":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}}}},"#":{"1":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"2":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"3":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"4":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"5":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"6":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"7":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"8":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"9":{"docs":{"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974}}},"docs":{},"(":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.009569377990430622}}},"[":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.009569377990430622}}},"{":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.009569377990430622}}}},")":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}}},"]":{"docs":{},",":{"docs":{"primitives/operator.html":{"ref":"primitives/operator.html","tf":0.004784688995215311}}}},"`":{"docs":{},"_":{"docs":{},"y":{"1":{"4":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"3":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"3":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"f":{"docs":{},"z":{"docs":{},"v":{"docs":{},"'":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}},"4":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"z":{"docs":{},"v":{"docs":{},"'":{"docs":{},":":{"docs":{"modules/":{"ref":"modules/","tf":0.0009000900090009}}}}}}}}}}}},"docs":{}}},"&":{"docs":{},"`":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}},"~":{"docs":{},"`":{"docs":{"templates/operators.html":{"ref":"templates/operators.html","tf":0.0011534025374855825}}}}},"└":{"docs":{},"─":{"docs":{},"─":{"docs":{"modules/":{"ref":"modules/","tf":0.0018001800180018}}}}},"├":{"docs":{},"─":{"docs":{},"─":{"docs":{"modules/":{"ref":"modules/","tf":0.0018001800180018}}}}},",":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091},"objects/":{"ref":"objects/","tf":0.004166666666666667},"templates/operators.html":{"ref":"templates/operators.html","tf":0.0034602076124567475}}},"@":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0009090909090909091}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"types/struct.html":{"ref":"types/struct.html","tf":0.0018181818181818182}}}}}}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0015839493136219642},"objects/traits.html":{"ref":"objects/traits.html","tf":0.00303951367781155},"pattern/":{"ref":"pattern/","tf":0.0011001100110011}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0031678986272439284}}}}}}}},"–":{"docs":{"objects/":{"ref":"objects/","tf":0.004166666666666667},"objects/class.html":{"ref":"objects/class.html","tf":0.000968054211035818}}},"│":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.003695881731784583},"errors/main.html":{"ref":"errors/main.html","tf":0.014678899082568808},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.034383954154727794},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0074866310160427805}}},"═":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"╕":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.003695881731784583},"errors/main.html":{"ref":"errors/main.html","tf":0.014678899082568808},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.034383954154727794},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0074866310160427805}}},"╘":{"docs":{},"═":{"docs":{},">":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.003695881731784583},"errors/main.html":{"ref":"errors/main.html","tf":0.014678899082568808},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.034383954154727794},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0074866310160427805}}}}},"╞":{"docs":{},"═":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.004223864836325237},"errors/main.html":{"ref":"errors/main.html","tf":0.01651376146788991},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.03868194842406877},"errors/catching.html":{"ref":"errors/catching.html","tf":0.008556149732620321}}}},"╭":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}},"╰":{"docs":{"objects/inheritance.html":{"ref":"objects/inheritance.html","tf":0.0005279831045406547},"errors/main.html":{"ref":"errors/main.html","tf":0.001834862385321101},"errors/scope_guards.html":{"ref":"errors/scope_guards.html","tf":0.004297994269340974},"errors/catching.html":{"ref":"errors/catching.html","tf":0.0010695187165775401}}}},"length":12392},"corpusTokens":["!","!!","!!\");","!!\";","!!\"s8;","!!'","!\"","!\");","!\";","!\"}","!(a","!)","!,","!=","!=.","!=1.3.2.","!?\";","!e","!i","!in","!of","\"","\"!\")","\"!\");","\"\");","\"(\",","\")","\")\");","\");","\",","\"/home/emile/gcc/gcc","\"/home/emile/ymir/runtime/midgard/core/exception.yr\",","\"bar\");","\"baz\");","\"core::exception::abort\",","\"foo\"","\"foo\");","\"foo\",","\"foo\";","\"fri\"","\"hello","\"i","\"i'm","\"main::annoyingenum\");","\"main::point\");","\"mon\"","\"notaday\"","\"sat\"","\"std::conv::to(&(main::bar),&(main::foo))::to\",","\"sun\"","\"test\"","\"test\",","\"test2\"","\"thu\"","\"tri","\"tue\"","\"wed\"","\"}\");","\"☺\"s8","#(","#1","#2","#3","#4","#5","#6","#7","#8","#9","#[","#{","$","$(pwd).","$(pwd)/relative/path/to/file,","$(pwd)/std/.","$(pwd):/tmp","$*","%","%=","&","&&","&((alia","&(a))","&(a),","&(a)=","&(a.foo);","&(a:.foo);","&(core::array::outofarray)","&(core::exception::asserterror)","&(core::exception::asserterror),","&(foo)","&(main::a)","&(main::childexception),","&(main::parentexception),","&(main::point)","&(mut","&(object)","&(void)","&(x!{u}),","&(x)","&(x.foo);","&a.foo;","&asserterror","&asserterror).","&asserterror,","&asserterror.","&b","&b.foo;","&bar","&bar,","&bar.","&baz","&castfailur","&circl","&config","&exception,","&fn(i32)","&fn(ref","&foo","&foo)","&foo,","&foo.","&i32","&i;","&myerror","&object","&outofarray","&outofarray).","&outofarray,","&outofarray.","&parentexcept","&segfault,","&shape","&shape,","&stringstream)","&stringstream.","&void","'","'!'","'('","')'","'.","'.'","'...'","'...')","'3'","'4'","'5'","'7'","'8'","'9'","':'","';'","'='","'=>'","'@'","'\\u{0x263a}';","'_'","'_')","'_')?","'a'","'abstract'","'aka'","'b'","'bar'","'baz'","'c'","'cast'","'class'","'counter","'def'","'dmut'","'enum'","'exit'","'extern_modules::foo'","'failure'","'final'","'foo'","'for'","'h';","'hello","'i32'","'if'","'import'","'in'","'is'","'let'","'loop'","'match'","'mut'","'of'","'print'","'pub'","'public'","'r');","'r',","'r'c8);","'ref'","'self'","'struct'","'success'","'void'","'while'","'x'","'x',","'y'","'z'","'z'),","'{'","'|'","'}'","'}')","'☺';","'☺'c8;","(","(!a);","(\"","(\"\");","(\"(\",","(\"+\")","(\",","(\"1\");","(\"2\");","(\"3\");","(\"====\");","(\"\\n\"s8)","(\"__global__","(\"a(\",","(\"accept","(\"after","(\"alway","(\"ani","(\"assert\");","(\"bar","(\"bar\")","(\"bar\");","(\"befor","(\"between","(\"bi","(\"call","(\"circle\");","(\"class","(\"const\");","(\"contain","(\"destroy","(\"empti","(\"exit","(\"exit\");","(\"fails\");","(\"first","(\"float","(\"foo","(\"foo\");","(\"fst","(\"go","(\"got","(\"hello","(\"hi","(\"i","(\"in","(\"int","(\"it","(\"main","(\"main::bar\");","(\"main::line\")","(\"main::point\")","(\"main::shape\");","(\"mi","(\"mon\")","(\"mutable\");","(\"not","(\"out\");","(\"pi","(\"point","(\"result","(\"scd","(\"scope","(\"second","(\"shape\");","(\"size","(\"slice","(\"struct","(\"succ\");","(\"success","(\"success\");","(\"t=\",","(\"test\");","(\"test\",","(\"test\"s8);","(\"test2\",","(\"the","(\"thi","(\"third","(\"total","(\"u\",","(\"unkown","(\"v\",","(\"x","(\"x\"s8)","(\"x\"s8),","(\"x:","(\"y\"s8),","(\"ye","(\"{i","(&(x.x))","(&(x.y)));","(&)","(&a","(&addone);","(&foo);","(&mutaddone);","('","('('","(','","('..'","(':'","('::'","(';')?","('='","('=>')?","('_')*","('catch'","('else'","('if'","('mut')?","('mut'?)","('over'","('r');","('r',","('x'","('{'","('|'","((';')?","(([i32],","((const","((i32,","((t,))","()","())","()));","());","(),","().","();","()]);","()}","(*p","(+)","(...)","(0","(0)","(0,","(1","(1)","(1);","(1,","(1,);","(1.3,","(1.f","(10)","(10);","(10,","(11,","(12)","(12);","(12)?;","(12,","(12.0);","(12.f);","(127,","(12i64);","(13));","(2","(2)","(2);","(2)})","(2,","(23.0f);","(255,","(29);","(3,","(3.0);","(3.14);","(30","(30));","(34u64);","(41)","(42)","(42).foo","(42);","(42.0f);","(5);","(6,","(7","(8","(8);","(8,","(9","([1,","([[1,","([]);","([a","([a::new","([b::new","([c8]","([i32],","([i32],)","(_","(__glob__)","(a","(a)","(a)),","(a));","(a).foo","(a).setx","(a);","(a,","(a.0,","(a.deepcopi","(a.foo","(a.opunary!(\"!\")","(a.x","(a.x);","(a::typeinfo.name);","(add","(addr.a","(alia","(and","(annoyingenum::__typeid","(annoyingenum::typeid","(anoth","(any)","(arg","(args);","(array);","(asid","(at","(automat","(b","(b)","(b));","(b).setx","(b);","(b,","(b::typeinfo.name);","(bar","(bar::typeid);","(bar_a","(base","(basic","(baz","(becaus","(bi","(block","(bodi","(but","(c)","(c);","(c32,","(c8","(callfoo);","(cast!(&void)","(center","(cf","(cf.","(coll);","(const","(constructor","(contain","(contribut","(copi","(core","(current","(d);","(day","(day);","(day::monday);","(decorator)*","(def","(defin","(dg","(dmut","(doubl","(dpkg).","(e.g.","(either","(err","(errorenum::foo);","(even","(exactli","(exampl","(expand","(express","(f","(f,","(file,","(float","(foo","(foo);","(foo::new","(foo_a","(for","(gcc)","(gnu","(guard","(here","(https://gnu","(i","(i));","(i);","(i,","(i.e.","(i32","(i32)","(i32);","(i32)?","(i32)?,","(i32,","(i32,)","(i32?)::__err__","(i32?)::err;","(i[0]","(identifi","(if","(import","(in","(inner_value)+","(is!t","(is!u","(is!{x}{t","(isfloating!{t}","(isintegral!{t}","(it","(knownaddr::broadcast.d","(knownaddr::localhost.a","(literraly).","(locat","(main::pi","(mani","(memori","(mi.i);","(modifier)","(modifiers)?","(move","(mut","(n);","(necessari","(never","(no","(nor","(not","(note","(note:","(noth","(object,","(of","(on","(op","(or","(p,","(p.i","(p.x,","(p2.i","(packet)","(packet);","(pattern_argu","(pattern_express","(pi","(point);","(point.x","(point2);","(point::typeid","(present","(print","(privat","(pub,","(put","(radiu","(read","(ref","(s.area","(safe","(same","(self)","(self)::typeid);","(self);","(self,","(self._radiu","(self._x);","(self.a","(self.a);","(self.i","(self.i);","(side","(sign","(single_arg","(slc","(slc);","(sourc","(spoiler)","(stream","(success,","(such","(t)","(t.2);","(t::typeid,","(take","(template_paramet","(templates)?","(templates)?;","(that","(the","(thi","(toml::dump","(true)","(true);","(type","(typeof","(u","(u::new","(use","(usiz","(v","(v::new","(valu","(var_decl","(warn","(we","(which","(with","(without","(x","(x)","(x)));","(x))::typeid);","(x));","(x),","(x)::typeid);","(x)::typeid,","(x);","(x,","(x.0);","(x.0,","(x.1);","(x.i","(x.to!(&config)","(x.unwrap","(x.x","(x::typeinfo.name);","(y","(y);","(y,","(y::typeinfo);","(z","(z)","(z);","(|x,",")","*","**main","*/","*=","*e","+","+=","+=,","+x",",",".",".,","..","...","...\");","...).","....","....\");","...}","./a.out","./hello",".data",".page",".plustwo",".println",".text","/","/*","/**","//","/=","/home/emile/documents/test/ymir/main.yr:10","/home/emile/documents/test/ymir/main.yr:12","/home/emile/documents/test/ymir/main.yr:14","/home/emile/documents/test/ymir/main.yr:19","/home/emile/documents/test/ymir/main.yr:7","/home/emile/documents/test/ymir/main.yr:8","/home/emile/gcc/gcc","/home/emile/ymir/runtime/midgard/core/exception.yr:49","/home/emile/ymir/runtime/midgard/core/exception.yr:84","/lib/libgyruntime.so:??","/lib/x86_64","/tmp","/tmp/cccoexdq.o:","0","0)","0,","0.","0.0","0000000000000010","0000000000000024","0000000000000030","0000000000000054","000000000000006e","0000000000000093","00000000000000e7","00000000000004a0","000000000040eb82","000000000040f381","000000000040f468","0000000000410585","0000000000410a25","00000000004472c0","00000000004472f0","0000000000447300","0000000000447340","0;","0]","0us)","0x897a.","1","1\");","1'","1)","1);","1,","1.","1.0;","1.0f","1.0f;","1.1.","1.1.1.","1.1.2.","1.1.3.","1.2.","1.2.1.","1.2.2.","1.2.3.","1.2.4.","1.2.5.","1.3.","1.3.1.","1.3.2.","1.3.3.","1.3.4.","1.3.5.","1.4.","1.4.1.","1.4.2.","1.4.3.","1.5.","1.5.1.","1.5.2.","1.6.","1.7.","10","10)","10))","10):","10,","10.","100","100\");","100)];","100u64];","1022","1023","1024","1025","1026","1094713344);","10max_10_exp10^{max\\_10\\_exp}10​max_10_exp​​","10min_10_exp10^{min\\_10\\_exp}10​min_10_exp​​","10u32","10u64];","11","11)","11,","11.","112345","11;","11u32","12","12)","12),","12);","12,","12.000000","12.0f);","123;","127","127);","127,","128","128,","12;","12]","12])","12];","12i64}","12u32","13","13\");","13,","13u32","14","14,","14u32","15","16","16,","17","17,","18","19","19).","19,","19.","19?","1:1.1.4","1:1.2.0","1:7.4.2","1;","1]","1b","1u32","1}","1}2​max_exp−1​​","1}2​min_exp−1​​","2","2\");","2)","2));","2);","2,","2.","2.1.","2.1.1.","2.1.2.","2.1.3.","2.2.","2.21","2.9));","20","20))","2018","2019","21","21,","23","23);","23,","23.","24]","25","255)","255);","255,","255.","28","28,","29","2:5.0.1~","2;","2]).","2]);","2],","2];","2max_exp−12^{max\\_exp","2min_exp−12^{min\\_exp","2u32","2}","3","3)","3);","3,","3.","3.1.3","3.14)","3.14),","3.14);","3.140000)","3.14159265359","3.14159265359);","3.14f);","3.f,","30","300","300.","30;","31","31);","32","32.","32767,","32768.","33","33,","33;","34","34));","34);","34,","34;","38","3;","3]","3]);","3],","3].","3];","3u32","4","4)","4);","4,","4.","40","41","41,","41;","42","42\");","42);","42,","42.","42;","43","43\");","43.","43;","44.","452.389342","46,","4];","4u32","4us]","5","5);","5,","54,","5;","5u32","6","6,","6.","61,","64","65,","69,","6]","6]])","6]]);","6d,","6e,","6f,","6u32","7","7);","7,","7.","73,","74]","761","762","763","764","765","7;","7];","7i8.","7u32","8","8)","8).step_bi","8);","8,","8.","820,","84,","89","89.0f","89.0f;","89;","8;","8u32","9","9);","9,","9.000000","9.3.0","934","934i8;","943","943i8;","95%;","98);","98;","9;","9]);","9];","9_234","9_9.3.0_amd64.deb","9_])*","9u32",":",":,",":.",":.,",":.write",":.writeln","::","::),","::,","::.",":=",";","=","=,","=1.4.","==","====","=>",">",">'",">')?",">,",">.",">=",">>",">>=",">`","?","?\");","??\");","@abstract","@final","@pack","@union","[","[&(main::a)]","[&(main::b)]","[./a.out,","[0","[0,","[0;","[0]","[0];","[0][0]","[0][1]","[1,","[10,","[12","[12,","[12];","[1;","[1];","[2,","[2]","[4,","[4]];","[7,","[8,","[89,","[9,","[[1],","[[[i32]]]","[[c8]])","[[c8]],","[[i32]]","[]","[]);","[],","[a","[a]","[b,","[b]","[c32]","[c32](hi","[c32](test)","[c32])","[c32],","[c32].","[c32];","[c32]}","[c8]","[c8])","[c8],","[c8];","[core::typeinfo::typeinfo(13,","[i32","[i32]","[i32])","[i32],","[i32].","[i32];","[i32]]","[i32]],","[i32]].","[i]","[main::a(),","[main::b()]","[mut","[packable]","[t;","[typeinfo]","[u8],","[u;","[u],","[u]}","[u]}(a","[u]}.","[x]","[x])","[z],","\\u{0xb}.","\\u{0}","\\u{12}","],","^","^^","^^^","^^^^","^^^^^","^^^^^^","^^^^^^^","^^^^^^^^^","_","_)","_),","_).","_,","_.","__a__","__a__;","__b__","__b__,","__c__","__dtor","__dtor,","__err__","__err__\");","__glob__","__global__","__global__);","__members__.","__pragma","__typeid__,","__version","__z__","_a","_a,","_center","_i","_j","_radiu","_side","_start","_type","_typeid.","_u","_v","_w","_x","_x,","_x.","_y","_y,","_y133foo3foo_namecstxsc32","_y183foo3foo_nameinnercstxa9c32","_y3foo3foo4selffxp9x3foo3foosc8zxp9x3foo3foo","_y3foo3footi","_y3foo3foovt","_y3std2io11printlnni327printlnfi32zv","_y3std3net6packet8packable25__stdnetwork__packcontentfp83foo3fooxp32x3std10collection3vec6vecnu83veczv","_y3std3net6packet8packable27__stdnetwork__unpackcontentfxp9x3foo3foosu8zus","_y3std3net6packet8packable4packfp83foo3fooxp32x3std10collection3vec6vecnu83veczv","_y3std3net6packet8packable4packfp83foo3foozsu8","_z","`&`","`_y14extern_modules3foo3foofzv'","`_y4mainfzv':","`~`","a\");","a)","a).","a).foo","a).foo);","a).setx","a);","a,","a.","a.0,","a.1);","a.bar","a.foo","a.get","a.i","a.opcmp","a.opindex","a.out","a.pack","a.print","a.setx","a.tostream","a.x","a:.foo","a:.setx","a::bar","a::foo","a::foo),","a::foo.","a::new","a::x","a::x,","a::x::bar,","a::y,","a::y::baz.","a;","a=\",","a=3.140000","abil","abort","abov","above,","above.","absolut","abstract","abstract,","abstract.","acc","accept","acceptable,","accepted,","accepted.","access","access,","access.","access1.1.1.","access1.3.","accessed,","accessed.","accessible,","account","account,","accur","accuraci","accuracy,","achiev","acknolegement,","action","actual","ad","adapt","add","add_on","added,","addit","addition,","addon","addr","address","address,","admitted,","adopt","advanc","advanced),","advic","affect","affectation,","affectation.","affin","afterward","afterward.","agre","agreement.","ahead","aim","aka","aka.","aka1.1.","aka_decl","akas.","alia","alias","alias,","alias1.1.","aliasable,","aliasable.","aliased,","aliases,","align","alignment,","all,","all.","alloc","allocated,","allocation,","allow","allowed,","allowed.","along","alreadi","altern","although","alway","ambigu","ambiguity.","ambiguous.","amd64","ampersand","ancestor","ancestor,","ancestor.","and)","and,","annoy","annoyingenum::__typeid__);","annoyingenum;","anonym","anonymu","anonymus,","anoth","another,","another.","answer","anymor","anyth","anything.","apart","appear","appli","applic","appropri","apt","arbitrari","arch","arch)","architectur","architectures.","area","area.","argu","argue,","argument","argument,","argument.","arguments,","arguments.","arithmet","arithmetics,","ariti","arity.","array","array\");","array)","array,","array.","arrays,","arrays.","arrays1.3.4.","arrays1.3.5.","arrow","asid","assert","asserterror","asserterror::new","assign","assignet","assignment1.5.","associ","assum","at:","atom","attach","attribut","attributes,","attributes.","attributes1.","attributes:","author","authorized.","automat","automatically),","aux","avail","avoid","avoided,","awar","b","b)","b));","b),","b).","b).setx","b);","b,","b.","b.i","b.opcmp","b.setx","b.x","b::new","back","bad","bad,","balanc","bar","bar\");","bar(1)","bar)","bar*","bar,","bar.","bar.yr","bar::foo","bar::new","bar;","bar_a","bar_a);","bar}","bar}\"s8);","base","basic","basically,","basis,","baz","baz\");","baz.","be","because,","becom","befor","beforehand.","begin","behav","behavior","behavior,","behavior.","behind","bellow.","below","below).","below,","below.","benefit","benefit.","best","better","between","beyond","binari","bit","bitshift","bitwis","block","block,","block.","bodi","body,","body.","body1.3.","body1.6.","bool","bool)","boolean","booleans,","borrow","borrowed,","borrowing1.","borrows.","both","bound","bracket","brackets,","brackets.","branch","branching.","break","break.","brief","briefli","bring","broadcast","broadcast\");","broken","bt","build","build,","built","bypassed,","byte","bytes,","bytes.","c","c);","c++,","c,","c.i","c.print","c32","c32)","c32).","c32,","c32.","c32].","c8","c8(r)","c8,","c_rang","calcul","call","call,","call.","callabl","callable,","called).","called,","called.","caller","caller.","callfoo","calls,","calls.","came","can't","candid","candit","capabl","capac","captur","care","carefulli","case","case),","case).","case,","case.","cases),","cast","cast!(&void)","cast!i64","cast!t","cast!{&foo}","cast!{&object}","cast,","cast.","cast1.","cast_express","castabl","castfailur","castfailure.","catch","catch,","catch.","catching_express","catching_expression)?","caught","caught.","caus","caution","caution,","center","center);","certain","certifi","cf.","chain","chained,","chang","changed,","changed.","chaper","chapter","chapter),","chapter,","chapter.","chapters,","chapters.","char","charact","character","characterist","characters,","characters.","check","checked.","checks,","childexcept","childexception,","childexception::new","chmod","choic","choice,","choos","chosen","circl","circle,","circle.","circle::new","circumstance,","claim","clarifi","class","class),","class,","class.","class1.","class1.1.","class1.5.1.","class1.7.","class_cont","class_decl","class_filt","classes,","classes.","clear","clearly,","close","closed,","closer","closur","closure).","closure,","closure.","closure1.1.","closure1.3.1.","closure1.3.2.","clue","code","code),","code,","code.","code:","coll","coll);","coll:.insert","collect","collect2:","collector","collector.","collid","colon","colon,","column","coma","comas.","combin","come","comma","command","command,","comment","comments.","comments1.","common","commonli","commutative,","compar","comparison","comparison.","compat","compil","compilation,","compilation.","compile,","compiled,","compiler),","compiler,","compiler.","compilers,","complet","complex","complic","complicated,","complit","compon","compos","compound","compounds:","comprehens","comput","concaten","concatenated,","concatenation.","concept","concept,","concepts,","concepts1.","conceptu","concern","concurr","condit","condition.","condition1.2.","conditionally,","conditionaly,","conditions.","configur","confin","conflict","conflict,","conflict.","confus","connections,","consequ","consequences.","consequently,","consid","consider","considered.","consist","consistent.","consol","console,","const","constant","constants,","construct","constructed.","construction,","construction1.2.","construction1.2.2.","construction1.3.","constructions1.1.3.","constructor","constructor,","constructor.","constructor1.2.1.","constructor1.2.4.","constructors,","constructors.","contact","contain","contain.","container.","contains,","contains.","content","content),","content,","context","context,","context.","context1.2.","contigu","continu","contrari","contrast","contribut","contribution,","contribution.","contribution:","control","convention,","convers","conversely,","conversion)","conversion,","convini","copi","copiabl","copied,","copy\"s8)","copy)","copy).","copy,","copy.","copy1.","copy1.2.","copyright","core","core::exception::abort","core::exception::asserterror","core::exception::asserterror.","core::exception::asserterror::self","core::exception::exception.","core::typeinfo::typeinfo(13,","correct","correct,","correctli","correspond","cost","countdown","counter","coupl","cours","course,","cover","cpu","crash","creat","created,","created.","creation","creation.","cte","curli","current","custom","d","d).","d,","d.","d:.insert","d]","daili","data","data,","data.","datas,","day","day)","day::monday;","day;","days.","dcopi","dcopy,","dcopy.","deal","debian","debug","decid","decided.","decim","decis","declar","declaration).","declaration,","declaration.","declaration1.5.","declarations,","declared,","declared.","decor","decorator,","decorators,","deep","deepcopi","deepest","deepli","def","default","default),","default,","default.","defin","define.","defined).","defined,","defined.","defines.","definit","definition.","definition1.4.","definitive.","deleg","delegate).","delegate,","delegate.","delegate1.","delegate1.3.3.","delegates.","deliber","delimit","demonstr","denot","depend","dependent,","depict","derefer","dereferenc","deriv","derivation,","describ","descript","design","desir","desper","despit","destroy","destroyed.","destruct","destruction1.4.","destructor","destructor).","destructor,","destructors1.","destructur","destructured,","destructured.","destructuring,","destructuring.","detail","determin","dev","develop","development.","developp","dg","dict::new","didn't","differ","different.","difficult","dig","digit","dinstinguish","direct","directli","directly,","directly.","directly?","directori","directory,","directory.","directory1.7.","discard","discret","discuss","dispos","disposable1.","disposed\");","disposed).","disposed,","distinct","distinguish","divid","dmut","dmut,","dmut.","do","do.","docker","docker.","docker.io","document","documentation,","documentation.","documentations.","does.","doesn't","doing.","don't","done","done,","done.","dot","doubl","down,","down.","download","dpkg","due","dummi","dummy;","dumped)","dure","dynam","dynamic,","dynamically.","e","e...)","e.0);","e.g.","e.opunary!(\"","e.opunary!(\"!\")","e.opunary!(\"*\")","each","earlier","earlier,","eas","easier","easiest","easili","effect","effici","efficient.","efficiently,","either),","element","element,","element.","elements.","else),","empti","empty\");","empty,","enabl","enclos","encod","encoding.","encount","encountered,","end","endlessly.","enhanc","enough","ensur","ensure,","enter","entered,","entered.","entri","enum","enum)","enum.","enum_typ","enumer","enumeration).","enumeration,","enumeration.","enumeration1.1.","environ","environment,","epsilon","equal","equality,","equival","equivalent.","err","err(core::exception::asserterror","err).","err);","err.","error","error,","error.","error...","error:","errorenum;","errors),","errors,","errors.","errors:","especi","etc,","etc.","etc.)","etc.),","etc.).","etc.,","etc..","evalu","evaluated,","even","even,","event","events).","everyth","everything1.2.","everywhere,","evid","exact","exactli","exampl","example)","example),","example).","example,","example.","example1.4.","example:","except","exception).","exception,","exception.","exception1.2.","exception1.3.","exceptions,","exceptions.","exceptions1.1.","exceptions1.4.","excpet","execpt","execut","executable,","executable.","executed,","executed.","execution).","execution.","exercis","exercise,","exhaust","exist","exists,","exists.","exit","exit),","exit,","exit.","exited,","exited.","expand","expand.","expected.","explain","explan","explicit","explicit.","explicitely,","explicitli","explicitly.","explor","express","expression)","expression)*","expression)*)?","expression)?","expression,","expression.","expression1.3.","expression2.1.","expressions,","expressions.","extern","extern_modul","extern_modules,","extern_modules/_.yr","extern_modules/bar.yr","extern_modules/bar.yr:(4,9)","extern_modules/foo.yr","extern_modules/foo.yr:(4,9)","extern_modules/foo.yr:(8,5)","extern_modules::_;","extern_modules::bar","extern_modules::bar,","extern_modules::bar.","extern_modules::bar::foo","extern_modules::bar::foo,","extern_modules::bar::foo.","extern_modules::bar;","extern_modules::foo","extern_modules::foo,","extern_modules::foo.","extern_modules::foo::bar","extern_modules::foo::foo","extern_modules::foo;","extern_modules::foo}","extract","extrem","f","f)","f,","f.foo","f32","f32(3.000000)","f32)","f32))","f32),","f32,","f32.","f32;","f32}","f64","f64)","f64),","f64,","f64.","f64;","f64}","f64})","f::typeid,","fact","fact,","fail","failed\");","failed,","fails,","fails.","failur","failure,","fairli","fals","false,","false.","false;","familiar","famou","faster","faster).","fatal","fault","fault.","fdump","few","field","field,","field.","fields).","fields,","fields.","fields1.1.1.","fields1.2.","figur","figure,","figure.","file","file,","file.","files,","filter","filter).","filter.","filter1.2.","filter1.4.","filters.","filters1.3.","final","find","fine,","finit","first","first).","first,","first.","fit","fit.","five","fix","flag","flatten","float","flow","flow,","flows.","flows2.","fn","fn,","focu","focus","follow","following.","following:","follows:","foo","foo!\"hi","foo!(&a)","foo!(i32,","foo!(x)","foo!0","foo!1","foo!12","foo!2","foo!300","foo!42","foo![i32","foo![i32]","foo!bar","foo!f32","foo!foo!i32","foo!i32","foo!u64","foo!{\"hi","foo!{14}","foo!{2}","foo!{38}","foo!{5","foo!{foo!i32}","foo!{i32,","foo!{n","foo!{|x,","foo!{|x|","foo\");","foo(2),","foo)","foo,","foo.","foo.yr","foo.yr,","foo::foo","foo::new","foo_a","foo_a.","for.","for_express","forbidden,","forc","foreign","forget","forgotten","form","forms,","forthcom","forthecom","forward","forward.","found","found,","foundabl","foundation,","four","free","frequent?,","friday","front","frontend","frustrat","fst","full","fulli","func_ptr","function","function)","function,","function.","function1.","function1.3.","functionn","functions),","functions,","functions.","functions1.1.","funtion","further","futur","g","g++","gain","gain).","garante","garbag","gave","gcc","gcc,","gener","get","get.","getter","getter!{[i32]}","getter!{i32}","getter!{x},","getter,","getter.","getter}","gimpl","github.","give","given","given,","given.","global","gnu.ymir@mail.com.","gnu/9.3.0/include/ymir/std/conv.yr\",","gnu/9.3.0/include/ymir/std/conv.yr:820","gnu/libc.so.6:??","gnuymir/9.3.0","go","goal","good","good,","grammar","grasp.","grep","grow","guarante","guarantee,","guard","guard,","guard.","guard1.2.","guard1.3.","guard1.4.","guarded.","guarded_scop","guards)","guards),","guards,","guards.","guards1.","guards1.1.","guess","gyc","gyc.","hand","hand,","hand.","handl","handles,","handling)","handling).","handling,","handling.","handling1.1.","happen","happend","happened,","hash","hashabl","hashable,","hashable1.","hashmap!{&foo,","have","heap","heap,","heap.","heir","heir,","heir.","heirs.","hello","hello.yr","help","henc","here","here,","here.","heritable,","hexadecim","hi","hidden","hidden.","hierarchi","hierarchy,","hierarchy1.2.","high","higher","highli","highlighted,","however,","huge","human","i'm","i)","i);","i,","i.","i.e.","i16","i32","i32\");","i32(1)","i32(42)","i32)","i32))","i32),","i32).","i32,","i32.","i32::init","i32::init;","i32;","i32?","i32]","i32])","i32].","i32]]","i32]]]","i32]}","i32|","i32}","i32})","i32}::new","i64","i64),","i64).","i64})","i8","i8,","i[0]","idea","idea,","idea.","ident","identifi","identifier)*","identifier,","identifier.","identifiers,","identifiers.","if,","if_express","ignor","ignored.","illustr","illustrated.","imag","immedi","immut","immutable,","immutable.","impact","impact:","impl","impl_filt","implement","implementation,","implementation.","impli","implicit","implicit,","implicit.","implicitely,","implicitely.","implicitli","import","import,","import_stat","importable,","important).","important,","important.","important2.1.","importation,","importation1.5.1.","importations.","imported).","imported.","imposs","impossible,","impossible.","improv","imut","in.","inc.","includ","included\");","included)","included),","incom","incompat","incomplete.","incorrect","incorrect,","increas","increment","inde","indeed,","independ","index","index,","indic","inevit","inf","infer","infered,","infin","infinit","influenc","info","inform","information\");","information,","information.","inherit","inheritable.","inheritance).","inheritance,","inheritance.","inheritance1.1.","inheritence).","init","initi","initialis","initialization.","initializations,","initialized,","inner","inner_valu","inner_var_decl","inner_var_decl)*","innermodul","innermodule::foo","input","insid","instal","install/bin/../lib/gcc/x86_64","installation.","installation1.","installation2.1.1.","installation2.1.2.","installed,","instanc","instance,","instance.","instance1.2.3.","instances,","instances.","instanci","instanciation.","instanciation1.","instanciation1.2.2.","instancible,","instanti","instantiate,","instead","instead.","instruct","int","integ","integer.","integers,","integers.","integr","intend","interest","interfac","intern","interv","introduc","introduced.","introduct","introduction,","introduction2.","invalid","invit","io","io::println","ipv4addr","ipv4addr.","ipv4addr;","irrecover","irrecoverable.","is!{x}","is!{x}{t","is_express","ischar","isdivis","isfloat","isintegr","isiz","issign","issue.","istupl","isunsign","it'","it)","it).","it,","it.","iter","itself","itself,","itself.","j","j)","j,","java","java,","journey,","json","justifi","keep","key.","keyword","keyword,","keyword.","keyword1.2.3.","keywordref","keywords,","keywords.","kind","know","knowable,","knowledge,","known","knownaddr::localhost;","knownaddr;","knwon","lambda","lambda,","lambda.","lambda_func","languag","language).","language,","language.","languages,","languages.","larg","largest","last","later","later,","ld","lead","leaf","leaks),","learn","leav","left","left,","len","length","length.","less","let","let'","let,","let.","letter","level","level,","level.","level1.2.1.","li","libc6","libgc","libgcc1","libgmidgard","libgmidgard_9.3.0_amd64.deb","libgmp10","libmidgard","libmpc3","libmpfr6","librari","libraries,","libraries.","library,","library.","lie","lied,","lied...\");","life","lifetim","lifetime.","lifetime1.5.2.","limit","limitation,","limitation:","limited,","limits.","line","lines.","link","linkage.","linking).","linux","list","list.","liter","literal)?","literal,","literal.","literal1.2.2.","literal1.3.","literals,","literals.","litertal,","littl","live","load","local","local,","localhost","localhost\");","locat","located.","location,","location.","log","logic","logs,","long","long,","longer","look","loop","loop,","loop.","loop_express","loops,","loops2.1.1.","loops:","lose","loss","loss.","lost","low","lower","lower)","lowest","ls","m","machin","made","made,","made.","magic","mails!","main","main)","main,","main.","main.yr","main.yr:(.text+0x3e):","main.yr:(1,16)","main.yr:(1,5)","main.yr:(1,7)","main.yr:(10,12)","main.yr:(10,14)","main.yr:(10,21)","main.yr:(10,6)","main.yr:(10,9)","main.yr:(11,7)","main.yr:(12,10)","main.yr:(12,11)","main.yr:(12,18)","main.yr:(12,5)","main.yr:(12,6)","main.yr:(13,11)","main.yr:(13,4)","main.yr:(13,5)","main.yr:(13,7)","main.yr:(14,11)","main.yr:(14,17)","main.yr:(14,18)","main.yr:(14,2)","main.yr:(14,3)","main.yr:(14,4)","main.yr:(14,9)","main.yr:(15,14)","main.yr:(15,3)","main.yr:(16,14)","main.yr:(16,4)","main.yr:(17,10)","main.yr:(17,2)","main.yr:(17,5)","main.yr:(17,7)","main.yr:(17,8)","main.yr:(17,9)","main.yr:(18,13)","main.yr:(18,15)","main.yr:(18,7)","main.yr:(19,17)","main.yr:(2,10)","main.yr:(2,9)","main.yr:(20,5)","main.yr:(21,14)","main.yr:(21,3)","main.yr:(21,4)","main.yr:(28,10)","main.yr:(28,15)","main.yr:(28,9)","main.yr:(3,10)","main.yr:(3,11)","main.yr:(3,13)","main.yr:(3,15)","main.yr:(3,16)","main.yr:(3,19)","main.yr:(3,22)","main.yr:(3,24)","main.yr:(3,26)","main.yr:(3,28)","main.yr:(3,29)","main.yr:(3,47)","main.yr:(3,5)","main.yr:(3,9)","main.yr:(31,45)","main.yr:(4,10)","main.yr:(4,11)","main.yr:(4,13)","main.yr:(4,15)","main.yr:(4,20)","main.yr:(4,6)","main.yr:(5,1)","main.yr:(5,10)","main.yr:(5,11)","main.yr:(5,13)","main.yr:(5,2)","main.yr:(5,29)","main.yr:(5,4)","main.yr:(5,5)","main.yr:(5,7)","main.yr:(5,8)","main.yr:(6,10)","main.yr:(6,12)","main.yr:(6,14)","main.yr:(6,3)","main.yr:(6,6)","main.yr:(6,9)","main.yr:(7,16)","main.yr:(7,2)","main.yr:(7,5)","main.yr:(7,7)","main.yr:(8,10)","main.yr:(8,13)","main.yr:(8,14)","main.yr:(8,15)","main.yr:(8,2)","main.yr:(8,24)","main.yr:(8,5)","main.yr:(8,7)","main.yr:(9,5)","main.yr:(9,7)","main::a","main::a()]","main::a)","main::a),","main::a)}","main::a::bar","main::bar","main::bar)","main::bar.","main::bar::bar","main::bar::foo","main::baz","main::circl","main::day","main::day([c32]))","main::errorenum","main::foo","main::foo()","main::foo(12,","main::foo(42)","main::foo(i","main::foo(i32)::foo","main::foo(test)","main::foo(y)=>34}","main::foo)","main::foo),","main::foo)],","main::foo::bar","main::foo::foo","main::good","main::point","main::point(0,","main::point(1,","main::point(98,","main::point([[1,","main::point([[9,","main::printable::print","main::rectangl","main::shap","main::shape::print","main::u","main::unit()","main::v","main::x([c32])::x","main::x([i32])::x","main::x([i32],[c32])::x","main::x(f32)::x","main::x(i32,c32)::x","main;","mainli","make","malform","manag","managed,","mandatori","mandatory).","mandatory,","mandatory.","mani","manner,","manners.","mant_dig","mantissa","manual","margin","mark","match","match.","matchin).","matching,","matching.","matching1.1.","math","math::pi","matter","max","max_10_exp","max_exp","maxim","maximum","mayb","mean","meaning","meaning,","member","member_nam","members)","memori","memory,","memory.","mention","mentioning,","mentioning.","merchant","messag","met","met.","met2.1.3.","method","method,","method.","method1.2.","method1.4.2.","method_param","methods,","methods.","methods1.1.","methods1.5.","mi","mi);","mimic","min","min_10_exp","min_exp","mind","mind,","minim","minimum","miscomprehens","miscomprehension,","mislead","mod","mod.","mode","mode)","mode).","mode,","mode.","modif","modifi","modification,","modified,","modified.","modifier)*","modifier,","modul","module,","module.","modules),","modules).","modules,","modules.","modules1.","modules1.1.","modules1.3.","moment","moment),","moment).","moment,","moment.","monday","monitor","monitor,","more","more,","moreov","moreover,","move","movement","movements.","much","much,","multi","multipl","multiple_arg","multiple_args)","mut","mut,","mut.","mutability,","mutability.","mutability1.","mutability1.1.","mutability1.2.","mutability1.2.2.","mutability1.3.","mutability1.4.","mutabl","mutable).","mutable,","mutable.","mutable1.1.","mutaddon","mutex,","myerror","myerror::new","myint","myint::new","mytupl","mytuple)","n","n);","n,","n],","name","name,","name.","named),","named,","named_expression:","nan","nativ","natur","nearli","necessari","necessarili","necessary,","necessary.","need","negative.","network","network,","never","new","new.","newli","next","non","none","normal","normaly,","not,","not.","note","note,","noth","nothing.","notic","noticed,","notion","now","now,","null","null,","null.","nullpointerexcept","number","numbers,","o","obj).method","objdump","object","object,","object.","object1.","objects),","objects);","objects,","objects.","objects1.","observ","obviou","obvious,","obviously,","occur","occur.","of.","of_filt","offer","ok","ok()","ok),","ok,","omit","omitted.","ommitted.","on","on.","onc","once.","one,","one.","ones.","only,","only.","opbinari","opbinaryright","opbinaryright.","opcmp","opcmp.","opcontain","opcontains.","open","opequ","oper","operand","operand,","operands,","operands.","operation\");","operation,","operation.","operations,","operations.","operator,","operator.","operator1.","operator1.2.","operator1.3.","operator1.6.","operators,","operators.","operators1.3.1.","opindex","opindex.","opinion","opinion,","opposit","optim","optimization,","option","option):","option,","option1.4.","optional,","optional.","optionaly,","optionn","opunari","order","order.","order1.5.","organ","orient","origin","original\"s8","original)","originali","other.","other.i","other.x","otherwis","otherwise,","otherwise.","out","out.","outofarray","outofarray,","output","outsid","oveload","over","overflow","overload","overloadable,","overloadable.","overloading).","overloading.","overloading1.1.","overrid","override1.","overriden","overriden,","overriden.","overriding.","overriding1.4.1.","overview","owner","p","p1","p1.i","p1.x","p2","p2.i","p;","pack","packabl","packable,","packable.","packable1.1.","packable;","packag","package,","packed);","packed.","packed1.5.2.","packed;","packet","packet\");","paradigm","paradigms,","parallelism),","param_decl)*","paramet","parameter,","parameter.","parameter1.1.1.","parameter1.2.","parameter1.2.1.","parameters),","parameters).","parameters,","parameters.","parameters1.1.1.","parameters1.2.","parameters1.2.3.","parent","parent,","parentexcept","parenthes","parentheses,","parentheses.","parents.","parser","part","part.","particular","particular.","parts,","parts.","pass","past","path","path)*","path.","path/to/modul","path/to/modules/relative/to/my/file,","pattern","pattern*","pattern,","pattern.","pattern1.3.1.","pattern_argu","pattern_argument)*)?","pattern_cal","pattern_express","pattern_expression)*","pattern_expression)*)?","pattern_expression)?","pattern_opt","pattern_rang","pattern_tupl","pattern_var","patterns,","patterns.","patterns1.4.1.","pc","per","perfect","perfectli","perfom","perform","permiss","permitted,","perspective,","phenomenon","pi","pi);","place","place.","plan","pleas","pluson","plustwo","pogram,","point","point\");","point)","point,","point.","point.i","point.y.","point2","point4d","point::init;","point::new","point;","pointer","pointer,","pointer.","pointer1.1.1.","pointers)","pointers,","pointers.","pointers1.","pointers1.3.","points.","pollut","polymorph","polymorph,","polymorphism),","polymorphism.","polyphorm","polyphormism.","posit","possibilities.","possibility),","possibility,","possibility.","possibilti","possibl","possible)","possible,","possible.","postfix","power","powerful,","practic","practice,","practice.","practice1.","practice1.6.","pre","precaut","preced","precis","precision,","predictible,","prefer","prefix","prematuraly,","prematurely.","present","present).","present,","presented,","presented.","prevent","previou","previous","primit","principl","print","print,","print.","printabl","printable)","printable,","printable.","printable;","printable}","printed,","printed.","println","println(","println,","prioriti","priority.","priority1.","privaci","privacy,","privacy.","privacy1.2.","privacy1.3.","privacy1.3.1.","privat","private.","privates).","probabl","probable,","probably,","problem","problem,","problems.","procedure.","process","processes.","produc","product","program","program).","program,","program.","program:","programm","programming,","programming.).","prohibit","prohibited,","prohibited.","project,","proof","properli","properly,","properti","propos","prot","prot,","protect","prototyp","prototype,","prototype.","prototypes,","provid","prv","prv)","prv,","ptr","pub","public","public)","public,","public.","pull","pure","purpos","purpose,","purpose.","purposes.","put","qualifi","question","quit","quot","r","r!(i32)","r!t,","r)","r...}","r.print","radiu","rais","raised,","random","rang","range,","range.","ranges,","ranges.","ranges1.3.3.","re","reach","read","read.","readabl","readable,","readable.","real","reality,","realli","reason","reason),","reason).","reason,","reasoning,","reasons)","reasons,","reasons.","receiv","recomand","recommend","recommended.","reconstructed.","record","recov","recoverable,","recovered,","rectang","rectangl","rectangle::new","recurs","recursive.","recursively.","redeclar","redefin","redefined,","redefined.","redirect","redirected,","redirection1.2.5.","rediscuss","redond","ref","ref,","ref.","refer","referenc","reference,","reference.","reference1.1.","reference1.2.","referenced,","references).","references,","references.","references1.1.","referencing.","regard","regroup","reimplement","reimplementation1.1.2.","reimplemented.","reinstal","reject","rel","relat","relative::path::to::file.","relative::to::my::file.","releas","relev","relevant.","reli","remov","repeat","repetit","repetition.","repetitions2.1.2.","replac","replic","repositori","repres","represent","reput","requir","required,","required.","resolut","resolution1.5.","resolv","resolved;","resort","respecitv","respect","respected,","respected.","respectively.","rest","restrict","result","result);}","result,","result.","result:","results:","res}","rethrow","rethrowing.","rethrowing1.","rethrown","rethrown,","retreiv","retriev","return","return,","return1.","returned.","reus","revers","reversed,","reversely.","rewrit","rewrite,","rewritt","rewritten","rewritten.","right","right,","rights,","root","root,","roots,","rule","rule,","rule.","run","runtim","runtime,","runtime.","s","s,","s.","s32","s8","safe","safe,","safe.","safer","safeti","safety,","same","same.","satisfied.","saturday","save","saw","say,","scala)","scala,","scalar","scatter","scd","scheme","scientif","scope","scope).","scope,","scope.","scope1.5.1.","scopes,","score","score.","search","second","section","section).","section,","sections,","secur","see","seem","seen","seg","segment","self","self)","self,","self.","self._a","self._a);","self._a.","self._i","self._radius)","self._sid","self._u.to!(&config)","self._v.to!(&config)","self._x","self._x);","self._x,","self._y,","self.a","self.a)","self.a,","self.bar","self.baz","self.i","self.x","self:.bar","self::super.print","semant","semantic.","semantics.","semi","send","sens","sent","sent.","separ","serial","serializ","serializable1.","serialization).","serialize.","set","set,","set.","setx","sever","shadow","shadowing1.","shape","shape,","share","sharing,","shell,","short.","shortcut","shoud","show","showcase,","shown","sibl","siblings,","side","sign","signatur","signed_int","similar","similarly,","simpl","simple,","simple_class_decl","simple_funct","simple_method","simpli","simul","singl","single_arg","size","size.","sizeof","sizeof1.2.","skeptic","slc","slc);","slc2","slc;","slice","slice\");","slice),","slice,","slice.","slices,","slices.","small","smallest","socket,","softwar","software;","solution,","solv","someth","sometim","sometimes,","somewhere,","somewhere.","sort","sorted,","sound","sourc","space","special","specialization,","specialization.","specialization1.1.","specif","specifi","specific,","specifically,","specified),","specified,","specified.","speed","spite","squar","square::new","stack","stack)","stack).","stack,","stack.","stacktrac","stand","standard","star","start","state","state.","stated,","statement","statement,","statement.","static","static,","static.","statically),","statu","std","std).","std,","std.","std::","std::args,","std::collection::map::hashmap,","std::collection::map;","std::collection::set::hashset.","std::config,","std::config::conv;","std::config::toml;","std::conv,","std::conv.","std::conv::castfailure.","std::conv::tonp94main3barnp94main3foo::to","std::conv;","std::hash)","std::hash;","std::io","std::io,","std::io::print","std::io;","std::math;","std::net::packet)","std::net::packet;","std::random;","std::stream","std::trait","std::traits;","stdout","stdout,","stdout.","stdout1.2.","step","step.","step_bi","steps:","stick","still","stop","stop,","stops,","store","stored,","straightforward","strang","stream","stream);","stream.","stream:.writ","streamabl","streamable,","streamable1.1.","streamable;","strength","strict","strictli","string","string,","strings,","strings.","stringstream","stringstream,","stringstream.","stringstream1.","stringstream::new","strong","struct","struct,","struct_filt","struct_typ","structur","structure,","structure.","structure1.1.","structure1.4.3.","structure1.5.","structures,","structures.","strucures,","sub","subset","subtyp","succe","succed","succeded.","succeed","succeed,","succeeded\");","succeeds,","succeeds.","success","successfulli","such","such,","such.","sudo","suffici","sufficient,","sufficient.","suffix","suggest","suit","suitabl","suite,","sum.","summarize,","sunday","super","support","suppos","sure","sure,","surpris","surround","suspect","symbol","symbol*","symbol,","symbol.","symbols),","symbols,","symbols.","symbols1.","syntax","syntax,","syntax.","syntax1.","syntax1.2.","syntax1.2.1.","system","system,","system.","systems,","t","t)","t,","t.","t._0;","t2","t3","t::typeid,","t;","t=[i32]","t=i32","t=i32,","t=i32.","tabl","table,","table.","table:","take","taken","takes.","talk","target","targeted.","tcpstream,","tell","templat","template,","template.","template1.","template_cal","template_call)","template_call))*)?","template_class_decl","template_funct","template_method","template_paramet","template_parameter)*)?","template_valu","templates).","templates,","templates.","templates1.1.","templates1.4.1.","tempt","term","termin","terminated.","test","test,","test.","tested,","tested.","tests1.","text","thank","that","that'","that,","that.","the,","them,","them.","then,","therefor","therefore,","these","thing","think","third","third.","this,","this.","those","though","though.","thread,","three","three,","through","throughout","throw","throwabl","throwing,","thrown","thrown.","thu","thursday","thus,","tild","time","time),","time).","time,","time.","times\");","times\".","times,","to.","token","token).","token,","token.","tokens.","toml","tooption","top","tostream","total","toward","trace","trait","trait,","trait.","trait1.1.","trait1.1.1.","traits),","traits).","traits,","traits.","traits1.","transform","transformation,","transit","treat","tree","tree,","tree.","tri","tried.","trigger","trivial","true","true\");","true,","true;","tuesday","tupl","tuple,","tuple.","tuple1.","tuple1.3.2.","tuple1.4.2.","tuples,","tuples.","twelv","twice","twice,","two","type","type\");","type)","type),","type)?","type,","type.","type1.","type1.1.","type1.2.","type1.2.4.","type1.2.5.","type1.3.","type1.3.2.","type1.4.","typed,","typeid","typeids;","typeinfo","typeinfo,","typeinfo1.2.","typeinfo;","typeof","typeof,","types)","types),","types,","types.","types1.","types1.1.","types1.1.2.","types1.2.","types1.2.1.","types1.2.2.","types1.2.3.","types1.3.1.","types:","typing,","typing.","typing1.1.","t}","t})","u","u)","u,","u.","u16","u32","u32)","u64","u64.","u64}","u8","u::typeid);","u::typeid,","u;","u=\",","u=f64","u=f64.","u=i32","ufc","uml","unari","unchanged,","uncomplet","undefin","under","underneath.","underscor","underscore,","understand","undoabl","uneffici","unfortunately,","unfortunetali","unhandl","unicod","uniform","uninstal","union","union1.5.1.","union1.6.","unit","unit;","unknown","unknwon","unless","unlik","unlike,","unlock","unmanag","unpack","unpack.","unpacked);","unpacked;","unpackerror","unpredictible.","unresolv","unsaf","unsafe,","unset,","unsign","unsigned)","unsigned_int","until","untyp","unwant","unwrap","up","updat","upper","us","usabl","usable,","usag","usage,","usage1.","use,","used).","used,","used.","useful","usefull,","useless","useless,","user","user,","user.","users'","usiz","usize}","usual","usually,","utf","util","utterli","u{","u}","v","v,","valid","valid,","valid.","validated,","validated.","validation,","validation.","validity.","valu","valuabl","value\");","value)","value).","value,","value.","value1.","value1.1.2.","value1.1.3.","value1.2.","value1.3.","value1.4.","value1.5.","values,","values.","values1.1.","values1.2.","values1.3.","var","var,","var_decl","var_decl)","var_decl)*","var_decl)*)?","var_declar","var_decls)","variabl","variable),","variable).","variable,","variable.","variable1.2.3.","variable1.3.","variable1.4.","variables,","variables.","variables1.4.1.","variad","variadic_filt","variou","vast","verbos","verbose.","verbosity,","veri","verif","verifi","verification.","version","version2.2.","via","visibl","void","void)","void,","void.","void}","vtabl","vtable,","w","wait","want","warn","warning,","warning:","warranti","warranty;","way","way,","way.","ways.","wednesday","welcome,","welcomed,","well","well,","well.","wether","what'","where,","wherebi","whether","while_express","whole","whose","why,","wide","width:","will,","wish","with.","within","without","won't","word","word,","words,","work","work,","works,","works.","world","world1.","worri","worth","wrap","writ","write","written","written,","written.","wrong","x","x!(i32)::new","x!{i32,","x)","x));","x).","x);","x*y,","x,","x.","x.0,","x.1)","x.1));","x.foo","x.i","x.len);","x.pluson","x.to!(&bar)","x86","x:","x::new","x::typeinfo.name);","x;","x}","y","y)","y).foo","y);","y,","y.","y.foo","y.to!(&bar)","y:","y;","ye","yes,","ymir","ymir),","ymir,","ymir.","ymir.github.io/documentations/en/traits/serialize.html).)","ymir1:","you.","y|","y|=>","y}","z","z)","z);","z,","z.","z0","z;","z]","zero","zlib1g","z}","{","{\",","{\"hi","{&fn(i32)","{0}","{1}","{299}","{2}","{300}","{3}","{array","{bar","{class","{extern_modules::bar::foo","{f","{f,","{f64}","{foo","{f}","{i","{i32}","{j","{main::foo(x)=>12,","{mut","{n","{self","{struct","{t","{t,","{t...};","{t}","{t}(a","{t};","{u","{u,","{u64}","{u}","{x","{x}","{x}(x","{}","{}.","|","|i","|x","|x,","|x|","|x|=>","||","}","})","};","~","~/.local/bin","~/.local/bin/gyc","~/.local/bindirectory,","~/libs/","~=","–","—","—,","│","┃","└──","┗━━━━━━","┗━━━━━┻━","├──","╋","═","╕","╘═>","╞═","╭","╰"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"1. Introduction2. Important2.1. Installation2.1.1. Native installation2.1.2. Uninstallation of the native version2.2. Docker installation1. Introduction\nYmir is a high-level, statically typed programming language\n  designed to help developers to save time by providing strong and\n  safe semantic. The semantic of this language is oriented towards\n  safety, concurrency and speed of execution. These objectives are\n  achieved thanks to its high expressiveness and its direct\n  compilation into an efficient native machine language.\nThis documentation explores the main concepts of Ymir, providing a\nset of examples that demonstrate the strengths of this new\nlanguage. It also presents an introduction to the standard library.\n2. Important\nBefore starting to discuss the language, please keep in mind that it\nis still under development and that sometimes things may not work as\nexpected. If you encounter errors that you do not understand or think\nare incorrect, please contact us at: gnu.ymir@mail.com. We look\nforward to receiving your mails!\nEven more, all contributions are very welcome, whether to improve the\ndocumentation, to propose improvements to the language or std, to the\nruntime, or even to the automatic release generation procedure. All\ncode repositories are available on\ngithub. In this documentation, known\nlimitations of the language are sometimes highlighted, and calls for\ncontribution.\n2.1. Installation\nThe reference compiler of Ymir is based on the compiler GCC,\nwhich offer strong static optimization, as well as a vast set of\nsupported target architectures.\nThere are two ways to install the gyc (Gnu Ymir Compiler), natively or by using a docker container.\n2.1.1. Native installation\nThis compiler can be installed on linux debian system, by following those simple steps: \n\nFirst, you need to downloads the packages : \n\nlibmidgard-9-dev\nGYC\n\n\nAnd then, you need to install them using dpkg : \n\n\n$ sudo dpkg -i libgmidgard_9.3.0_amd64.deb\n$ sudo dpkg -i gyc-9_9.3.0_amd64.deb\n\n\nThese packages depend on : \n\ng++-9\ngcc-9-base\nlibc6 >= 2.21\nlibgmp10 >= 2:5.0.1~\nlibmpc3\nlibmpfr6 >= 3.1.3\nzlib1g >= 1:1.1.4\nlibgcc1\nzlib1g-dev\nzlib1g >= 1:1.2.0\nlibgc-dev >= 1:7.4.2\n\nIf one of them is not installed, you will get an error, that can be resolved by running the following command : \nsudo apt --fix-broken install\n\n\nAnd then reinstall the package that has previously failed (dpkg).\nThe compiler is now installed and is named gyc\n$ gyc --version\n\ngyc-9 (GCC) 9.3.0\nCopyright (C) 2018 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n\n2.1.2. Uninstallation of the native version\nAs for any debian package, the uninstall is done as follows : \n$ dpkg -r gyc-9\n$ dpkg -r libgmidgard-9-dev\n\n\nCaution The uninstallation can remove your gcc installation.\nBut you can still reinstall it easily if there is any problem, by typing : \nsudo apt install --reinstall gcc-9\n\n2.2. Docker installation\nTo start you have to install docker.\n$ sudo apt install docker.io\n\n\nThen retrieve the docker image from the repository :\n$ docker pull gnuymir/9.3.0-amd64\n\nThe compiler is now accessible via the container.\n$ docker run -t -v $(pwd):/tmp -w /tmp gnuymir/9.3.0-amd64 --version \ngyc-9 (GCC) 9.3.0\nCopyright (C) 2018 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n\nTo make it easier to use, you can add an alias in the ~/.local/bin directory.\nFirst open the file ~/.local/bin/gyc and paste the following line :\ndocker run -t -v $(pwd):/tmp -w /tmp gnuymir/9.3.0-amd64 $*\n\n\nMake sure, that your PATH contains the ~/.local/bindirectory, and\nthen open a new shell, and run the following commands :\n$ chmod +x ~/.local/bin/gyc\n$ gyc --version\n\ngyc (GCC) 9.3.0\nCopyright (C) 2019 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n"},"hello-world/":{"url":"hello-world/","title":"Hello World","keywords":"","body":"1. Hello World1. Hello World\nThe following source code is the Ymir version of the famous program \"Hello world !\"\nimport std::io // importation of the module containing io functions\n\n// This is a comment \n\n/** This is a function declaration\n  * The main function, is the first one to be called\n  */\ndef main () {\n    // Print 'Hello World !!' to the console\n    println (\"Hello World !!\");\n}\n\nA binary can be generated using GYC.\n$ gyc hello.yr\n\nThis command produces a binary a.out that can be executed.\n$ ./a.out\nHello World !!\n\nThe command line options of gyc are the same as those of all gcc\nsuite\ncompilers,\nwith few exceptions that will be clarified in this documentation.\nThe option -o can be used to define the name of the output executable.\n$ gyc hello.yr -o hello\n$ ls\nhello  hello.yr\n$ ./hello\nHello World !!\n\n"},"hello-world/commentaires.html":{"url":"hello-world/commentaires.html","title":"Comments","keywords":"","body":"1. Comments1. Comments\nYmir offers different types of comments. \n\n\n// A line of comment that stop at the end of the line\n\n\n\n/* Multi-line comment that stops at the final delimiter */\n\n\n\ndef main () \n    throws &AssertError // Not what's important for the moment\n{\n    // This is an example of comment\n\n    /* \n     * This is another example of comment\n     * Where, the stars are optionnal\n     */\n\n    /*\n    And this is the proof\n    */\n\n    // None of the comment lines have an influence on the compilation\n\n    let x = 1 + /* 2 + */  3;\n    assert (x == 4); \n}\n\nIn the above pogram, calling assert will throw an exception if\nthe test is false. Errors are presented in the Error\nHandling\nchapter. For the moment, we can consider that the exception simply\nstops the program when the test fails.\nWe will see in the\nDocumentation\nchapter, that comments are very usefull, to generate documentations.\n"},"primitives/":{"url":"primitives/","title":"Basic programming concepts","keywords":"","body":"1. Basic programming concepts1. Basic programming concepts\nThis chapter covers the basic concepts of Ymir programming\nlanguage. Specifically, you will learn about variables, mutability,\nnative types, functions and control flows.\n"},"primitives/variables.html":{"url":"primitives/variables.html","title":"Variable and Mutability","keywords":"","body":"1. Variables and Mutability1.1. Variable type1.2. Variable mutability1.3. Initial value1.4. Global variables1.4.1. Initialization order1.5. Shadowing and scope1.5.1. Lifetime1.5.2. Shadowing1. Variables and Mutability\nVariables are declared with the keyword let. The grammar of a\nvariable declaration is presented in the following code block.\nvar_declaration := 'let' inner_var_decl (',' inner_var_decl)*\ninner_var_decl  := (decorator)* identifier (':' type)? '=' expression\ndecorator := 'mut' | 'dmut' | 'ref'\nidentifier := ('_')* [A-z] ([A-z0-9_])*\n\n\nThe declaration of a variable is composed of four parts, 1) the\nidentifier that will be used to refer to the variable in the program,\n2) the decorators, that will give a different behavior to the program\nregarding the variable, 3) a value, that sets the initial value of the\nvariable, and 4) a type, optional part of a variable declaration,\nwhich when omitted is infered from the type of the initial value of\nthe variable. Conversely, when specified the type of a variable is\nstatically checked and compared to the initial value of the variable.\n1.1. Variable type\nThe type of the variable, as presented in the introduction, is\nspecified in the variable declaration. This implies a static typing of\neach variable, whereby a variable cannot change its type during its\nlifetime. To illustrate this point, the following source code declares\na variable of type i32, and tries to put a value of type\nf32 in it. The language does not accept this behavior, and the\ncompiler returns an error.\ndef main () {\n    let mut x = 12; // 12 is a literal of type i32\n    //  ^^^ this decorator, presented in the following sub section, is not the point of this example\n\n    x = 89.0f; // 89.0f is a literal of type f32 (floating point value)\n}\n\n\nThe compiler, because the source code is not an acceptable Ymir\nprogram, returns an error. The error presented in the following\nblock, informs that the variable x of type i32, is\nincompatible with a value of type f32.\nError : incompatible types mut i32 and f32\n --> main.yr:(5,4)\n 5  ┃     x = 89.0f; // 89.0f is a literal of type f32 (floating point value)\n    ╋       ^\n\n\nymir1: fatal error: \ncompilation terminated.\n\n\n1.2. Variable mutability\nThe decorators are used to determine the behavior to adopt with the\nvariable. The keyword ref and dmut will be discussed in\nanother chapter (cf. Aliases and\nReferences). For\nthe moment, we will be focusing on the keyword mut. This keyword\nis used to define a mutable variable, whose value can be changed. A\nvariable declared without the mut keyword is declared immutable\nby default, making its value definitive.\nIn another word, if a variable is declared immutable, then it is bound\nthe a value, that the variable cannot change throughout the\nlife of the variable. The idea behind default immutability is to avoid\nunwanted behavior or errors, by forcing the developpers to determine\nwhich variables are mutable with the use of a deliberately more\nverbose syntax, while making all the other variables immutable.\nIn the following source code a variable x of type i32 is\ndeclared. This variable is immutable, (as the decorator mut is\nnot used). Then the line 7, which consist in trying to modify the\nvalue of the variable x is not accepted by the language,\nthat's why the compiler does not accept to compile the program.\n\nimport std::io\n\ndef main () {\n    let x = 2;    \n    println (\"X is equal to : \", x); \n\n    x = 3; \n    println (\"X is equal to : \", x);\n}\n\n\nFor the given source file, the compiler generates the following\nerror. This error informs that the affectation is not allowed, due to\nthe nature of the variable x, which is not mutable. In Ymir,\nvariable mutability and, type mutability ensure, through static\nchecks, that when one declares that a variable has no write access to\na value, there is no way to get write access to the value through\nthis variable. Although this can sometimes be frustrating for the\nuser.\nError : left operand of type i32 is immutable\n --> main.yr:(7,2)\n    ┃ \n 7  ┃     x = 3; \n    ┃     ^\n\n\nymir1: fatal error: \ncompilation terminated.\n\n \nThe above example can be modified to make the variable x\nmutable. This modification implies the use of the keyword mut,\nwhich — placed ahead of a variable declaration — makes it\nmutable. Thanks to that modification, the following source code is an\nacceptable program, and thus will be accepted by the compiler.\n\nimport std::io\n\ndef main () {\n    let mut x = 2;    \n    println (\"X is equal to : \", x); \n\n    x = 3; \n    println (\"X is equal to : \", x);\n}\n\n\nResult:\nX is equal to : 2\nX is equal to : 3\n In reality, mutability is not related to variables, but to\ntypes. This language proposes a complex type mutability system, whose\nunderstanding requires the comprehension of data types beforehand. In\nthe following sections, we will, for that reason, present the type\nsystem, (and the different types of data that can be created in Ymir — cf.  chapter Data\ntypes),\nbefore coming back to the data mutability, — and have a full overview\nof the mutability system in chapter Aliases and\nreferences.\n1.3. Initial value\nA variable is always declared with a value. The objective is to\nensure that any data in the program came from somewhere, and are not\ninitialized from a random memory state of the machine executing the\nprogram (as we can have in C language). \nOne can argue, that static verification can be used to ensure that a\nvariable is set before being used, and argue that forcing an initial\nvalue to a variable is not the best way to achieve data validity.  If\nat this point, this is more a matter of opinion than of sound\nscientific reasoning, we think that scattering the initialization of a\nvariable, makes programs more difficult to read. More, immutable\nvariables would be mutable for one affectation, making the\nbehavior of a program even more difficult to grasp. \nIn the following table, is presented two examples of source code, with\nthe same behavior. On the left, a valid source code accepted by the\nYmir language, and on the right, a source code that is not accepted\nbased on the arguments we put forward. \n\n\n A \n B \n\n\nimport std::io;\n\ndef main () {\n    let i = if (true) {\n        42\n    } else {\n        7\n    };\n}\nimport std::io;\n\ndef main () {\n    let i : i32;\n    if (true) {\n        i = 42;\n    } else {\n        i = 7;\n    };\n}\n\n\n\n\nOne can note from the left\nprogram, that an if expression has a value. Value computed by\nthe result of the expression (in that case the value 42 of type\ni32). In point of fact, every expression can have a value in\nYmir, removing the limitation, introduced by the forcing of an initial\nvalue to variables.\n1.4. Global variables\nEven if global variables have a rather bad reputation for many\njustified reasons, we choose to let the possibility to define them,\nsince in spite of all, they allow some programmation paradigms that\nwould be undoable otherwise.\nGlobal variables are defined as any local variable, except that the\nkeyword let is replaced by the keyword static. The\nfollowing source code presents an utilization of an immutable global\nvariable. This example is just a showcase, as the use of an\nenumeration (cf.\nEnum)\nwould probably be more appropriate in this specific case.\nimport std::io\n\nstatic pi = 3.14159265359\n\ndef main () {\n    println (\"Pi value is : \", pi);\n}\n\n\nAll information presented on local variables are relevant to the case\nof global variables. Here, we are refering to static typing,\nmutability behavior, and default value initialization. No limitation\nexists on the value that can be stored inside a global variable, nor\nthere exists on the nature of the initialization. Call of functions,\nconditional expressions, class initializations, etc., nothing was left\nout.\nGlobal variables are initialized before the start of the program,\nbefore the call of the main function. To illustrate that, the\nfollowing source code, creates a global variable of type i32\ninitialized from the value of the function foo. This function\nfoo by making a call of the function println, prints a\nmessage to the console, and the main function also does it.\nimport std::io;\n\nstatic __GLOBAL__ = foo ();\n\n/**\n  * This function print the message \"foo\", and returns the value 42\n  */\ndef foo ()-> i32 {\n  println (\"foo\");\n  42\n}\n\ndef main () {\n    println (\"__GLOBAL__ = \", __GLOBAL__);\n}\n\n\nResult:\nfoo\n__GLOBAL__ = 42\n1.4.1. Initialization order\nThere is no warranty on the order of initialization of global\nvariables. This is probably, the first limitation that we can point\nout on the Ymir languages. Contribution, to allow such warranty would\nbe very welcomed, but seems unlikely to be possible when global\nvariables come from multiple modules (cf.\nModules).\nFor the moment, because it is impossible to certify the good\ninitialization of a global variable, before the start of the program, it\nis not allowed to initialize a global variable from the value of\nanother global variable. However, this verification is very limited,\nas the value of a global variable can be used inside a function, and\nthis same function used to initialize the value of another global\nvariable. In the following source code, this behavior is illustrated.\nstatic __A__ = 42;\nstatic __B__ = __A__; \nstatic __C__ = foo ();\n\ndef foo () -> i32 {\n    __A__\n}\n\n\nThe compiler will unfortunetaly be able to see only the dependent\ninitialization of __B__, and will let the initialization of\n__C__ from the function foo occur. Even if in that\nspecific case, the dependency appears very clearly, it may not be that\nclear when the function foo come from an external module, that\nonly provides its prototype.\n1.5. Shadowing and scope\n1.5.1. Lifetime\nThe lifetime of a variable is defined by a scope. Regrouping\nexpressions separated by semi-colons between curly brackets, a scope\nis a semantic component well known in programming languages. It has\nsome particularities in Ymir, but these particularities will be\npresented in forthcoming chapters\n(cf. Functions,\nScope\nguards)\nand are not of interest to us at this point.\nimport std::io;\n\ndef main () {\n    {\n        let x = 12;\n    } // x does not exists past this scope end\n    println (x);\n}\n\n\nWhen a variable is declared inside a scope and is never used during\nits lifetime the compiler returns an error. To avoid this error, the\nvariable can be named _. If it may seem useless to declare a\nvariable that is not used, it can be useful sometimes (for example\nwhen declaring function parameters of an overriden function, cf.\nClass\ninheritence).\nA variable whose name is _, is anonymus, then there is no way to\nretreive the value of this variable.\nimport std::io;\n\ndef main () {\n    let _ = 12; // declare a anonymus variable\n}\n\n1.5.2. Shadowing\nTwo variables with the same name cannot be declared in colliding\nscopes, i.e. if a variable is declared with the name of a living\nvariable in the current scope, the program is not acceptable, and the\ncompiler returns a shadowing error. The following source code\nillustrates this point, where two variables are declared in the same\nscope with the same name x.\ndef main () {\n    let x = 1;    \n    let x = 2;    \n    { \n        let x = 3; \n    }\n}\n\n\nThe compiler returns the following error. Even the last variable in\nthe scope opened at line 4 is not authorized. Many errors can be\navoided, by simply removing this possibility. Possibility, in our\nopinion, that is not likely to bring anything of any benefit.\nError : declaration of x shadows another declaration\n --> main.yr:(3,9)\n 3  ┃     let x = 2;    \n    ╋         ^\n    ┃ Note : \n    ┃  --> main.yr:(2,9)\n    ┃  2  ┃     let x = 1;    \n    ┃     ╋         ^\n    ┗━━━━━┻━ \n\nError : declaration of x shadows another declaration\n --> main.yr:(5,13)\n 5  ┃         let x = 3; \n    ╋             ^\n    ┃ Note : \n    ┃  --> main.yr:(2,9)\n    ┃  2  ┃     let x = 1;    \n    ┃     ╋         ^\n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n\nGlobal variables do not create variable shadowing problems on local\nvariables. A global variable is a global symbol, and is accessible\nthrough its parent module definition (cf.\nModules). Local\nvariables on the other hand, are only accessible for the function in\nwhich they are declared. Symbol access gives the priority to local\nvariables, behavior illustrated in the following example.\nmod Main; // declaration of a module named Main\n\nimport std::io;\n\nstatic pi = 3.14159265359\n\ndef main ()\n    throws &AssertError\n{\n    {\n        let pi = 3;\n        assert (pi == 3); // using local pi\n    } // by closing the scope, local pi does not exist anymore\n\n    // because local pi does no longer exists\n    // global pi is accessible\n    assert (pi == 3.14159265359);\n\n    // global pi can also be accessed from its parent module\n    assert (Main::pi == 3.14159265359);\n}\n\n"},"primitives/types.html":{"url":"primitives/types.html","title":"Data types","keywords":"","body":"1. Primitives types1.1. Typeof and Sizeof1.2. Scalar types1.2.1. Integer types1.2.2. Floating-point types1.2.3. Boolean type1.2.4. Character type1.2.5. Pointers1.3. Compound types1.3.1. Tuple1.3.2. Ranges1.3.3. Arrays1.3.4. Static Arrays1.3.5. Option1.4. Cast1. Primitives types\nIn Ymir language, each value has a certain type of data, which\nindicates how the program must behave and how it should operate with\nthe value. Ymir is a statically typed language, which means that\nall types of all values must be known at compile time. Usually, the\ncompiler is able to infer the data types from the values, and it is\nnot necessary to specify them when declaring a variable. But\nsometimes, when it comes to the mutability of a variable or the\ninheritance of a class for example, the inference can be wrong and\nthe behavior not adapted to what you might want to do.\nTherefore, the type may be added when declaring a variable, as in the\nfollowing code.\nlet mut x : [mut i32] = [1, 2];\nlet mut y = [1, 2];\n\n\nTo understand the difference between the type of x and the type\nof y, we invite you to read the chapter\nAliases and References.\nEach type has type attributes. Theses attributes are accessed using\nthe double colon operator :: on a type expression.\nlet a = i32::init;  // i32 (0)\n\n\nAll primitive types have common attributes that are listed in the\ntable below. Attributes can be surrounded by _, to avoid some\nambiguity for some types (cf.\nEnumeration). For\nexample, the attribute typeid is equivalent to __typeid__, or\n_typeid.\n\n\n\nName\nMeaning\n\n\n\n\ninit\nThe initial value of the struct, where each field are set to init if they don't have default value\n\n\ntypeid\nThe name of the type stored in a value of type [c32]\n\n\ntypeinfo\nA structure of type TypeInfo, containing information about the type\n\n\n\nAll the information about TypeInfo are presented in chapter Dynamic\ntypes.\n1.1. Typeof and Sizeof\n1) The keyword typeof retreives the type of a value at\ncompilation time. This type can be used in any context, to retreive\ntype information. For example, in a variable declaration, a function\nparameter, or return type, structure fields, etc..\nimport std::io;\n\ndef bar () -> i32 {\n    42 \n}\n\ndef foo () -> typeof (bar ()) {\n    bar ()\n}\n\ndef main () {\n    let x : typeof (foo ()) = foo ();\n\n    println (typeof (x)::typeid, \" (\", x, \")\");\n}\n\nResults: \ni32 (42)\n\n2) The keyword sizeof retreive the size of a type in bytes at\ncompilation time. It is applicable only on types, not on value, but\nthe type of a value can be retreive using the typeof\nkeyword. This size is given in a value of type usize (this\nscalar type is presented below).\nimport std::io;\n\ndef main () {\n    let x : usize = sizeof (i32);\n    println (x, \" \", sizeof (typeof (x)));\n}\n\nResults: (on a x86-64 arch)\n4 8\n1.2. Scalar types\nScalar types represent all types containing a single value. Ymir\nhas five primitive scalar types: integers, floating point, characters,\nbooleans, and pointers. They can have different sizes for different\npurposes.\n1.2.1. Integer types\nAn integer is a number without decimal points. There are different\ntypes of integers in Ymir, the signed one and the unsigned\none. Signed and unsigned refers to the possibility for a number to be\nnegative. Signed integer types begin with the letter i, while\nunsigned integers begin with the letter u. The following table\nlists all the different types of integers, and sorts them by memory\nsize.\n\n\n\nsize\nsigned\nunsigned\n\n\n\n\n8 bits\ni8\nu8\n\n\n16 bits\ni16\nu16\n\n\n32 bits\ni32\nu32\n\n\n64 bits\ni64\nu64\n\n\narch\nisize\nusize\n\n\n\nThe usize and isize types are architecture dependent, and have the\nsize of a pointer, depending on the architecture targeted.\nEach type of signed integer can store values ranging from -(2\nn - 1) to 2 n - 1 - 1, where n is the size\nof the integer in memory. Unsigned types, on the other hand, can store\nnumbers ranging from 0 to 2 n - 1. For example, type\ni8, can store values from -128 to 127, and type u8 can\nstore values from 0 to 255.\nYou can write an integer in two forms, decimal 9_234 and hexadecimal\n0x897A. The _ token, is simply ignored in a literal integer.\nTo make sure a literal value has the right type, a prefix can be added\nat the end of it. For example, to get a i8 with the value 7,\nthe right literal is written 7i8. By default, if no prefix is added\nat the end of the literal, the language defines its type as a\ni32.\nAs indicated above, each type has attributes, the following table\nlists the integer-specific attributes:\n\n\n\nName\nMeaning\n\n\n\n\nmax\nThe maximal value\n\n\nmin\nThe minimal value\n\n\n\nAn overflow check is performed on literals at compilation time, and an\nerror is returned by the compiler if the type of integer choosed to\nencode the literal is not large enough to contain the value. For\nexample:\ndef main () {\n    let x : i8 = 934i8;\n}\n\nBecause a i8 can only store value ranging from -127 to 128, the\nvalue 934 would not fit. For that reason the compiler returns the\nfollowing error.\nError : overflow capacity for type i8 = 943\n --> main.yr:(12,18)\n    ┃ \n12  ┃     let x : i8 = 943i8;\n    ┃                  ^^^\n\nymir1: fatal error: \ncompilation terminated.\n\n\nWARNING However, if the value cannot be known at compile time, the\noverflow is not checked and can lead to strange behavior. For example,\nif you try to add 1 to a variable of type i16 that contains the\nvalue 32767, the result will be -32768. Contribution: Provide a\ndynamic way to verify the overflow of arithmetic operation (at least\nin debug mode).\n1.2.2. Floating-point types\nFloating-point types, refer to numbers with a decimal\npart. Ymir provides two types of floating point numbers, f32\nand f64, which have a size of 32 bits and 64 bits respectively.\nYou can add the prefix f, at the end of a literal floating point\nto specify that you want a f32, instead of a f64 as it is\nby default.\ndef main () {\n    let x = 1.0; \n    let y : f32 = 1.0f;\n}\n\nThe following table lists the attributes specific to floating point\ntypes.\n\n\n\nName\nMeaning\n\n\n\n\ninit\nThe initial value - nan\n\n\nmax\nThe maximal finite value that this type can encode\n\n\nmin\nThe minimal finite value that this type can encode\n\n\nnan\nThe value Not a Number\n\n\ndig\nThe number of decimal digit of precision\n\n\ninf\nThe value positive infinity\n\n\nepsilon\nThe smallest increment to the value 1\n\n\nmant_dig\nNumber of bits in the  mantissa\n\n\nmax_10_exp\nmaximum int value such that 10max_10_exp10^{max\\_10\\_exp}10​max_10_exp​​ is representable\n\n\nmax_exp\nmaximum int value such that 2max_exp−12^{max\\_exp-1}2​max_exp−1​​ is representable\n\n\nmin_10_exp\nminimum int value such that 10min_10_exp10^{min\\_10\\_exp}10​min_10_exp​​ is representable as a normalized value\n\n\nmin_exp\nminimum int value such that 2min_exp−12^{min\\_exp-1}2​min_exp−1​​ is representable as a normalized value\n\n\n\n1.2.3. Boolean type\nA boolean is a very simple type that can take two values, either true or false.  For example:\ndef main () {\n    let b = true;\n    let f : bool = false;\n}\n\n\nThe following table lists the attributes specific to boolean type.\n\n\n\nName\nMeaning\n\n\n\n\ninit\nThe initial value - false\n\n\n\n1.2.4. Character type\nThe c8 and c32 are the types used to encode the\ncharacters.  As with literal integers, it is necessary to add a prefix\nto define the type of a literal. The prefix used to specify the type\nof a literal character is c8, if nothing is specified, the\ncharacter type will be c32.\nThe c32 character has a size of four bytes and can store any\nunicode value.  Literal characters can have two forms, and are always\nsurrounded by the token '. The first form is the character\nitself, and the second is the unicode value in the integer\nform \\u{12} or \\u{0xB}.\ndef main () {\n    let x = '☺';    \n    let y = '\\u{0x263A}';\n}\n\nIf the loaded literal is too long to be stored in the character type,\nan error will be returned by the compiler. For example :\ndef main () {\n    let x = '☺'c8; \n}\n\nThe error will be the following. This error means that you will need\nat least 3 c8 to store the value, so it doesn't fit into one\nc8 :\nError : malformed literal, number of c8 is 3\n --> main.yr:(2,10)\n    | \n 2  |     let x = '☺'c8; \n    |             ^\n\nymir1: fatal error: \ncompilation terminated.\n\n\nThe following table lists the attributes specific to character types.\n\n\n\nName\nMeaning\n\n\n\n\ninit\nThe initial value - \\u{0}\n\n\n\n1.2.5. Pointers\nPointer are values that stores an address of memory. They can be used\nto store the location of a data in memory. In Ymir, pointers are\nconsidered low level programming and are mainly used in the std, and\nruntime to interface with machine level semantics. You can perfectly\nwrite any program without needing pointers, and for that reason we\nrecomand to not use them.\nPointers are defined using the & keyword on types, or on\nvalues. They are aliasable types, as they borrow memory (cf Aliasable\nand\nReferences).\nimport std::io;\n\ndef main ()\n    throws &SegFault, &AssertError\n{\n    let mut i = 12;\n    let p : &i32 = &i; // creation of a pointer on i\n    i = 42;\n    assert (*p == 42); // dereference the pointer and access the value\n}\n\n\nPointers are unsafe, and dereferencing a pointer can result in undefined\nbehavior depending on where it points. It can also sometimes raise a\nsegmentation fault. In Ymir, segmentation fault are recovered,\nand an exception is thrown. Error handling is presented in chaper\nError\nHandling.\nWARNING, Note that the segmentation fault may not occur even if\n  the pointer is not properly set. The easiest way to avoid undefined\n  behavior is to not use pointers and use std verified functions, or\n  other semantically verified elements (cf Aliasable and\n  References).\n\nThe following table lists the attributes specific to pointer types.\n\n\n\nName\nMeaning\n\n\n\n\ninner\nThe type of the inner value - for example : i32 for &i32\n\n\n\n1.3. Compound types\nUnlike scalar types, the compound contains multiple values.  There are\nthree types of compounds: the tuple, the range and the arrays.\n1.3.1. Tuple\nA tuple is a set of values of different types. Tuples have a fixed\narity. The arity of a tuple is defined at compilation time, and\nrepresent the number of values contained inside the tuple. Each\nelement of a tuple has a type, and a given order. Tuples are built\nbetween parentheses, by a comma-separated list of values. A tuple of\none value can be defined, by putting a coma after the first\nvalue. This way the compiler can understand the desire of creating a\ntuple, and do not confuse it with a normal expression between\nparentheses.\ndef main () {\n    let t : (i32, c32, f64) = (1, 'r', 3.14);  // three value tuple\n    let t2 : (i32,) = (1,); // single value tuple\n    let t3 : i32 = (1); // single value of type i32\n}\n\n\nThe tuple t, is a single element, and can be used as a function\nparameter or as a return value of a function. It can also be\ndestructured, to retrieve the values of its component elements. There\nare three ways of tuple destructuring.\n1) the dot operator ., followed by an integer value, whose value\nis known at compilation time. This value can be computed by a complex\nexpression, as long as the compiler is able to retreive the value at\ncompilation time (cf. Compilation time\nexecution).\nimport std::io;\n\ndef main () {\n    let t = (1, 'r', 3.14);\n    let z : i32 = t._0;\n    let y : c32 = t. (0 + 1); \n    println (t.2);\n}\n\n\n2) the tuple destructuring syntax. This syntax, close to variable\ndeclaration, creates new variables that contains parts of the tuple\nthat is destructured. In the following example, one can note that the\ntuple destructuring syntax allows to extract only some of the tuple\nvalues. The type of the variable e is the tuple (c32,\nf64), and its values are ('r', 3.14), when the variable\nf contains the value 1 of type i32.\ndef main () {\n    let t = (1, 'r', 3.14);\n    let (x, y, z) = t;\n\n    let (f, e...) = t;\n    println (f, \" \", e.0);\n}\n\n\n3) the keyword expand. this keyword is a compile-time rewrite,\nthat expands the values of a tuple into a list of values. This list is\nthen used to create other tuples, call functions, etc. The following\nexample shows the use of the keyword expand to call a function\ntaking two parameters, with the value of a tuple containing two\nvalues. \nimport std::io\n\ndef add (a : i32, b : i32) -> i32 \n    a + b\n\n\ndef main () {\n    let x = (1, 2);\n    println (add (expand x)); \n\n    // Will be rewritten into :     \n    println (add (x.0, x.1));\n\n    // rewritter into : (1, x.0, x.1)\n    let j : (i32, i32, i32) = (1, expand x);    \n}\n\n\nThere is two other ways to destructurate a tuple. These ways are\npresented in forthcoming chapters. The following table lists the\nattributes specific to tuple types.\n\n\n\nName\nMeaning\n\n\n\n\narity\nThe number of elements contained in the tuple (in a u32)\n\n\ninit\na tuple, where each element values are set to init\n\n\n\n1.3.2. Ranges\nRanges are types that contain two values defining a range. A range is\nnamed r!T, where T is the type of the range limits. They\nare created by the token .. and .... A range consists of\nfour values, which are stored in the fields shown in the following\ntable. These fields can be accessed using the dot operator .. \n\n\n\nname\ntype\nvalue\n\n\n\n\nfst\nT\nthe first bound\n\n\nscd\nT\nthe second bound\n\n\nstep\nmut T\nthe step of the interval\n\n\ncontain\nbool\nIs the scd bound contained in the interval ?\n\n\n\ndef main () {\n    let range : r!(i32) = 1 .. 8;     \n    let c_range : r!(i32) = 1 ... 8;\n}\n\nThe step_by function takes a range as a parameter and returns a\nnew range, with a modified step.\ndef main () { \n    let range = (1 .. 8).step_by (2); \n}\n\nThe Control\nflows\nsection shows a use of these types.\n1.3.3. Arrays\nAn array is a collection of values of the same type, stored in\ncontiguous memory.  Unlike tuples, the size of an array is unknown at\ncompile time, and in Ymir, they are similar to slices, and will be\nrefered as such. Slices are defined with a syntax close to the one of\ntuple, but with brackets instead of parentheses, for example [1, 2, 3]. \nThe type of a slice is also defined using the brackets, for example [i32], meaning a slice containing i32 values.\nString literals, enclosed between double quotes are a special case of\nslice literals. There is no string type in Ymir, but only slices\ntype. Because of this, string values are typed [c32] or\n[c8] depending on the type of values contained in the\nslice. String literals can be prefixed with the keyword s8 or\ns32 to define the encoding system used. By default, when no\nprefix is specified a string literal have a type [c32]. \nimport std::io;\n\ndef main () { \n    let x = [1, 2, 3]; // a [i32] slice\n    let y = \"Hello World !!\"; // a [c32] slice\n    let z = \"Hello World !!\"s8; // a [c8] slice\n}\n\n\nWarning: The length of a [c8] literals can seem incorrect\ndue to the encoding system. For example, the slice \"☺\"s8 will have a\nlength of 3. To summarize, [c8] slices are utf-8 encoded\nstring literals, when [c32] are encoded in utf-32.\nA slice is a two-word object, the first word is the length of the\nslice, and the second is a pointer to the data stored in the slice. A\nslice is an aliasable type, its mutability is a bit more complicated\nthan the mutability of scalar types, because it borrows memory which\nis not automatically copied when an assignment is made. This section\nwill not discuss the mutability of internal types or aliasable\ntypes. This is discussed in the chapter Aliases and\nReferences.\nThe field len records the length of the slice and can be\nretrieved with the dot operator ..  The length of the slice is\nstored in a usize field.\nimport std::io\n\ndef main () {\n   let x = [1, 2, 3];\n   println (\"The value of x : \", x); \n   println (\"The length of x : \", x.len);\n}\n\nSimilarly, the ptr field, gives access to the pointer of the\nslice and its types depend on the inner type of the slice, and is\nnever mutable. Pointer type are absolutely not important for a\nYmir program, and we suspect that you will never have use of\nthem. They are defined to allow low level programming paradigms, and\nare used in the std and runtime. \nTo access the elements of an array, the [] operator is used. It\ntakes either an integer value or a range value as parameter. If a\nrange value is given, a second slice that borrows a section of the\nfirst is created. For now, the step of the range does not affect the\nborrowing of the array. A contribution can be made here. On the other\nhand if an integer value i is given as parameter, the value at\nthe index i is returned.\nimport std::io;\n\ndef main () \n    throws &OutOfArray \n{\n    let x = [1, 2, 3];\n    let y = x [0 .. 2];\n    let z = x [0];\n\n    println (x, \" \", y, \" \", z); \n}\n\n\nThe length of a slice is unknown at compilation time, and access can\nbe made with dynamic integers whose values are also unknown at\ncompilation time. For that reason, it may happen that the parameters\nused go beyond the slice length. With this in mind, slice access is\nconsidered unsafe, and can throw an exception of type\n&OutOfArray. The exception system, and error handling is\ndetailed in the chapter Error\nHandling.\nSlices can be concatenated, to form another slice. The concatenation\nis made using the operator tilde on two operands. To work properly and\nbe accepted by the language, the two slice used as operands must share\nthe same type (but not necessarily mutability level, the mutability of\nthe operand with the lowest mutability level is choosed for the result\nof the operation cf. Aliases and\nReferences).\nimport std::io\n\ndef foo () -> [i32] {\n    [8, 7, 6]\n}\n\ndef main ()  {\n    println ([1, 2, 3] ~ foo ());\n}\n\nThe tilde token was chosen to avoid some ambiguity. In some languages\nsuch as Java, the concatenation is made using the token + that\nsometimes creates some ambiguity when concatenating strings, and other\nelements such as integers. For example, the expression \"foo\" + 1 + 2, is ambiguous. \nOne can note however, that since concatenation only works on slices of\nthe same type, the following expression \"foo\" ~ 2, is invalid as\n\"foo\" is of type [c32], and 2 of type i32.\nAnother syntax can be used to create slices. This syntax called slice\nallocation, allocates a slice on the heap and set the same value to\nevery element of the slice.\nimport std::io\nimport std::random;\n\ndef main () {\n    let a : [i32] = [0 ; new 100u64]; // this avoids the write of 100 zeros\n                                      // but the result is the same\n\n    let b = [12 ; new uniform (10, 100)]; \n    //                ^^^^^^^ generates a random value between 10 and 100\n    println (a, \" \", b);\n}\n\n\nThe following table lists the attributes specific to slice types.\n\n\n\nName\nMeaning\n\n\n\n\ninner\nthe inner type\n\n\ninit\nan empty slice (with len == 0us)\n\n\n\n1.3.4. Static Arrays\nUnlike the slice, static arrays are stored in the stack rather than on\nthe heap. To be possible, their size must be known at compilation\ntime. The syntax used to create a static array is close to the syntax\nof a slice allocation, but the keyword new omitted.\nimport std::io\n\n/**\n  * Takes an array of size twelve as parameter\n  */\ndef foo (a : [i32 ; 12]) {\n    println (a);\n}\n\ndef main ()\n    throws &OutOfArray\n{\n    let mut a : [mut i32 ; 12] = [0 ; 12];\n\n    for i in 0 .. 12\n        a [i] = i\n\n    let b = [1; 12];\n\n    foo (a);\n    foo (b);\n}\n\nA static array can be transformed into a slice using the alias,\ncopy and dcopy keywords. The chapter Aliases and\nreferences\nexplains the difference between these keywords.\nimport std::io\n\ndef main () {\n    let x = [0; 12];\n\n    let a = alias x;\n    let b = copy x;\n\n    println (a, \" \", b);\n}\n\nOne can argue that slice literals should be of static array type. We\nmade the choice to create slices from array literals rather than\nstatic arrays to avoid verbosity, as we claim that slices are way more\ncommonly used than arrays with a static size. We are for the moment\nconsidering the possibility to prefix slice literals, to define static\narray literals, but the question is not yet decided.\n\nThe following table lists the attributes specific to array types.\n\n\n\nName\nMeaning\n\n\n\n\ninner\nthe inner type\n\n\nlen\nthe len of the array (usize value)\n\n\ninit\nan array where each element is set to the init value of the inner type\n\n\n\n1.3.5. Option\nThe option typed values are values that may be set or not. They are\ndefined using the token ? on types or values. Further\ninformation on option type are given in the chapter Error\nhandling,\nas they are completely related to error management system. \nimport std::io;\n\ndef main () {\n    let i : i32? = (12)?; // an option type containing the value 12\n    let j : i32? = (i32?)::err; // an option value containing no value\n}\n\nThe value of an option type can be retreived using functions in the\nstd, or pattern matching. In this chapter, we only focus on the\nunwrap function, pattern matching being left for a future\nchapter (cf. Pattern\nmatchin).  The\nfunction unwrap from the module std::conv, get the value\ncontained inside an option type. If no value is contained inside the\noption, the function throws an error of type CastFailure.\nimport std::io;\nimport std::conv;\n\ndef foo (b : bool)-> (i32)? {\n    if b { \n        19? // return the value 19, wrapped into an option\n    } else {\n        (i32?)::__err__ // return an empty value\n    }\n}\n\n\ndef main () \n    throws &CastFailure \n{\n    let x = foo (true);\n    println (x.unwrap () + 23);\n}\n\n\nThe following table lists the attributes specific to option types.\n\n\n\nName\nMeaning\n\n\n\n\nerr\nAn empty option value\n\n\n\n1.4. Cast\nSome value can be transformed to create value of another type. This\noperation is done with the cast keywords, whose syntax is\npresented in the code block below.\ncast_expression := 'cast' '!' ('{' type '}' | type) expression\n\n\nIn the following example, a cast of a value of type i32 to a\nvalue of type i64 is made. As said earlier, implicit casting is\nnot allowed. The mutability of the casted value is always lower or\nequal to the mutability of the original value (for obvious reason).\nWarning cast can cause loss of precision, or even sign problems.\nlet a = 0;\nlet b : i64 = cast!i64 (a);\n\n\nThe following table list the authorized casts of the primitive types : \n\n\n\nFrom\nTo\n\n\n\n\ni8 i16 i32 i64 isize\ni8 i16 i32 i64 u8 u16 u32 u64 isize usize\n\n\nu8 u16 u32 u64 usize\ni8 i16 i32 i64 u8 u16 u32 u64 isize usize c8 c32\n\n\nf32 f64\nf32 f64\n\n\nc8\nc8 c32 u8\n\n\nc32\nc8 c32 u32\n\n\n&(X) for X = any type\n&(void)\n\n\n\nCast if a very basic type transformation, and must be used with\nprecaution for basic operations. We will see in a forthecoming chapter\n(cf. Dynamic conversion) a complex system of conversion, provided\nby the standard library. This conversion system can be used to\ntransform value of very different type and encoding.\n"},"primitives/functions.html":{"url":"primitives/functions.html","title":"Functions","keywords":"","body":"1. Functions1.1. Parameters1.1.1. Default value1.1.2. Recursive default value1.1.3. Main function parameters1.2. Function body1.3. Function return type1.4. Scope declaration1.5. Uniform call syntax1. Functions\nFunction is a widely accepted concept for dividing a program into\nsmall parts. A Ymir program starts with the main function that\nyou have already seen in previous chapters. All functions are declared\nusing the keyword def followed by a identifier, and a list of\nparameters. A function is called by using its identifier followed by a\nlist of parameters separated by commas between parentheses.\nimport std::io \n\n/** \n * The main function is the entry point of the program\n * It can have no parameters, and return an i32, or void\n */\ndef main () {\n    foo ();\n}\n\n\n/** \n * Declaration of a function named 'foo' with no parameters \n */\ndef foo () {\n    println (\"Foo\");\n\n    bar (); \n}\n\n\n/**\n * Declaration of a function named 'bar' with one parameter 'x' of type 'i32'\n*/\ndef bar (x : i32) {\n    println (\"Bar \", x);\n}\n\n\nThe grammar of a function is defined in the following code block.\nfunction := template_function | simple_function\nsimple_function := 'def' identifier parameters ('->' type)? expression\ntemplate_function := 'def' ('if' expression) identifier templates parameters ('->' type)? expression\n\nparameters := '(' (var_decl (',' var_decl)*)? ')'\nvar_decl := identifier ':' type ('=' expression)?\n\nidentifier := ('_')* [A-z] ([A-z0-9_])*\n\n\nThe order of declaration of the symbol has no impact on the\ncompilation. The symbols are defined by the compiler before being\nvalidated, thus contrary to C-like languages, even if the foo\nfunction is defined after the main function (in the first example of\nthis chapter), it's symbol is accessible, and hence callable by the\nmain function. Further information about symbol declarations, and\naccesses are presented in chapter\nModules.\n1.1. Parameters\nThe parameters of a function are declared after its identifier between\nparentheses. The syntax of declaration of a parameter is similar to\nthe syntax of declaration of a variable, except that the keyword\nlet is omitted. However, unlike variable declaration, a\nparameter must have a type, and its value is optional.\nimport std::io \n\n/**\n * Declaration of a function 'foo' with one parameter 'x' of type 'i32'\n */\ndef foo (x : i32) {\n    println (\"The value of x is : \", x);\n}\n\n/**\n * Declaration of a function 'bar' with two parameters 'x' and 'y' whose respective types are 'i32' and 'i32'\n */\ndef bar (x : i32, y : i32) {\n    println (\"The value of x + y : \", x + y);\n}\n\ndef main () {\n    foo (5); // Call the function 'foo' with 'x' set to '5'\n    bar (3, 4); // Call the function 'bar' with 'x' set to '3' and 'y' set to '4'\n}\n\n\n1.1.1. Default value\nA function parameter can have a value, that is used by default when\ncalling the function. Therefore it is optional to specify the value of\na function parameter that have a default value, when calling it. To\nchange the value of a parameter with a default value, the named\nexpression syntax is used. This expression, whose grammar is\npresented in the following code block, consists in naming a value.\nnamed_expression: Identifier '->' expression\n\nThe following source code presents an example of function with a\nparameter with a default value, and the usage of a named expression to\ncall this function.\nimport std::io\n\n\n/**\n * Function 'foo' can be called without specifying a value for parameter 'x'\n * '8' will be used as the default value for 'x'\n */\ndef foo (x : i32 = 8) {\n    println (\"The value of x is : \", x);\n}\n\ndef main () {\n    foo (); // call 'foo' with 'x' set to '8'\n    foo (x-> 7); // call 'foo' with 'x' set to '7'\n}\n\n\nThe named expression can also be used for parameters without any\ndefault value. Thanks to that named expression, it is possible to\nspecify the parameter in any order.\nimport std::io\n\n\n/**\n * Parameters with default values, does not need to be last parameters\n * This function can be called with only two parameters ('x' and 'z'), or using named expression syntax\n */\ndef foo (x : i32, y : i32 = 9, z : i32) {\n    println (x, \" \", y, \" \", z);\n}\n\ndef main () {\n    // Call the 'foo' function with 'x' = 2, 'y' = 1 and 'z' = 8 \n    foo (8, y-> 1, x-> 2);\n    foo (1, 8); // call the function 'foo' with 'x' = 1 and y = '9' and z = '8'\n}\n\n\nResults:\n2 1 8\n1 9 8\n\nAny complex expression can be used, for the default value of a\nfunction parameter. The creation of an object, a call of a function, a\ncode block, etc. The only limitation is that, you cannot refer to the\nother parameters of the function. Indeed, they are not considered\ndeclared in the scope of the default value.\ndef foo (x : i32) -> i32 { ... }\ndef bar (x : i32) -> i32 { ... }\n\n/**\n * Declaration of a 'baz' function, where 'b' = bar(1) + foo(2), as a default value\n */\ndef baz (a : i32, b : i32 = {bar (1) + foo (2)}) {\n // ...\n}\n\ndef main () {\n    baz (12);\n}\n\n\nThe symbols used in the default value of a parameters must be\naccessible in the context of the function declaration. In the last\nexample, that means that the function baz must know the function\nbar and the function foo, however, there is no need for the\nfunction that calls it (here the function main) to know these\nsymbols. Further explanation on symbol declarations and accesses are\npresented in chapter\nModules.\n1.1.2. Recursive default value\n\nRecursivity of default parameter is prohibited. To illustrate this\npoint, the following code example will not be accepted by the\ncompiler.\nimport std::io;\n\ndef foo (foo_a : i32 = bar ()) -> i32 {\n                    // ^^^ here there is a recursive call \n    foo_a\n}\n\ndef bar (bar_a : i32 = foo ()) -> i32 {\n                    // ^^^ recursivity problem\n\n    println (\"Bar \", bar_a);\n    foo (foo_a-> bar_a + 11) \n}\n\ndef main () {\n    println (\"Main \", bar ()); // no need to set bar_a\n}\n\nErrors:\nError : the call operator is not defined for main::bar and {}\n --> main.yr:(3,28)\n 3  ┃ def foo (foo_a : i32 = bar ()) -> i32 {\n    ╋                            ^^\n    ┃ Note : candidate bar --> main.yr:(8,5) : main::bar (bar_a : i32)-> i32\n    ┃ Note : \n    ┃  --> main.yr:(3,10)\n    ┃  3  ┃ def foo (foo_a : i32 = bar ()) -> i32 {\n    ┃     ╋          ^^^^^\n    ┃ Note : \n    ┃  --> main.yr:(8,24)\n    ┃  8  ┃ def bar (bar_a : i32 = foo ()) -> i32 {\n    ┃     ╋                        ^^^\n    ┃ Note : \n    ┃  --> main.yr:(8,10)\n    ┃  8  ┃ def bar (bar_a : i32 = foo ()) -> i32 {\n    ┃     ╋          ^^^^^\n    ┃ Note : \n    ┃  --> main.yr:(3,24)\n    ┃  3  ┃ def foo (foo_a : i32 = bar ()) -> i32 {\n    ┃     ╋                        ^^^\n    ┗━━━━━┻━\n\n\nThis recursivity problem can be easily resolved by setting a value to\nthe parameter bar_a when called in the default value of\nfoo_a.\ndef foo (foo_a : i32 = bar (bar_a-> 20)) -> i32 {\n                    //      ^^^^^ resolve the recursive problem \n    foo_a\n}\n\n// no need to do the same in bar, the recursivity does not exists anymore\n\n\nResults:\nBar 20\nBar 31\nMain 42\n1.1.3. Main function parameters\nThe main function can have a parameter. This parameter is of\ntype [[c8]], and is the list of arguments passed to the program\nin the command line when called. \nimport std::io;\n\ndef main (args : [[c8]]) {\n    println (args);\n}\n\nResults: \n$ ./a.out foo bar 1\n[./a.out, foo, bar, 1]\n\nThe std provides an argument parser in std::args, that will not\nbe presented here, but worth mentioning.\n1.2. Function body\nThe body of a function is an expression. Every expression in Ymir\nare typed, but that does not mean that every expression have a value,\nas they can be typed as void expression. The expression (body of the\nfunction) is evaluated when the function is entered, and its value is\nused as the value of the function. A simple add function can be\nwritten as follows:\ndef add (x : i32, y : i32)-> i32 \n    x + y\n\n\nOr by using a more complex expression, such as scope, which is an\nexpression containing a list of expression. A scope is surrounded by\nthe curly brackets, and was presented in the section regarding\nlifetime of local variables. The last expression in the list of\nexpression of a scope, is taken as the value of the scope. \n\ndef add (x : i32, y : i32) -> i32 { // start of a block\n    x + y // last expression of the block is the value of the block\n} // end of a block\n\ndef main () \n    throws &AssertError\n{\n    let x = {\n        let y = add (1, 2);\n        y + 8 \n    };\n    assert (x == 11)\n}\n\n\nThe semi-colon token ; is a way of specifying that an expression\nends inside a scope, and that its value must be ignored. If the last\nexpression of a scope is terminated by a semi-colon, an empty\nexpression is added to the scope. This empty expression has no value,\ngiving to the scope an empty value of type void as well.\n\n/**\n * The value of foo is '9'\n */\ndef foo () -> i32 \n    9\n\n\ndef main () {\n    let x = {\n         foo (); // Call foo, but its value is ignored\n    } // The value of the scope is 'void'\n}\n\n\nBecause it is impossible to declare a variable with a void type, that\ncontains no value, the above example is no accepted by the\nlanguage. The compiler returns the error depicted below. One can note,\nthat it is however possible the declare a variable without value, but\nits type must be an empty tuple, defined by the literal ().\nError : cannot declare var of type void\n --> main.yr:(6,9)\n    | \n 6  |     let x = {\n    |         ^\n\nymir1: fatal error: \ncompilation terminated.\n\n1.3. Function return type\nWhen the value of the body of a function is not of type void,\nthe function has as well a value with a type. This type must be\ndefined in the prototype of the function, to be visible from the other\nfunction that can call it. This type declaration is made with the\nsingle arrow token -> after the declarations of the parameter of\nthe function. The return type of a function can be omitted if the\nvalue of its body is of type void, but must be specified\notherwise.\ndef foo (x : i32)-> i32 \n    x + 1\n\ndef bar (x : i32, y : i32) -> i32 {\n    let z = x + y;\n    println (\"The value of z : \", z);\n    foo (z)\n}\n\n\nIt is not always convinient to define a body of a function in a way\nthat leads to return the right value, when many branches are\npossible. To avoid verbosity, and return function prematuraly, the\nkeyword return, close a function and return the value of the\nexpression associated with it. This return statement can also be\nused in a void function, if its expression is of type\nvoid. The type of the value of the expression associated to the\nreturn statement must be the same as the function return type\ndefined in its prototype.\ndef isDivisable (x : i32, z : i32) -> bool {\n    if (z == 0) return false; \n\n    (x % z) == 0\n}\n\n\nThe compiler checks that every branches leads to a return statement or\nto a value of the right type. If a function body has a type different\nto the return type of the function, and it can happen that no return\nstatement is encountered, then the compiler returns an error.\nimport std::io\n\ndef add_one (x : i32)-> i32 {\n    x + 1; // the value of the block is void, due to the ';'\n}\n\ndef main () {\n    let x = add_one (5); \n    println (\"The value of x : \", x);\n}\n\n\nIn the above source code, the function add_one has a body of type\nvoid, when the function prototype claims that the function\nreturns a i32, and no return statement can be encountered inside\nthe function, thus the compiler returns the following error.  \nError : incompatible types i32 and void\n --> main.yr:(3,29)\n 3  ┃ def add_one (x : i32)-> i32 {\n    ╋                             ^\n    ┃ Note : \n    ┃  --> main.yr:(5,1)\n    ┃  5  ┃ }\n    ┃     ╋ ^\n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n1.4. Scope declaration\nA scope is also the opening of a local module, in which declaration\ncan be made. These declarations can be other functions, structures,\nclasses, enumeration, etc. The declarations made inside a scope have\nno access to the local variables defined in the function. Such access\nis possible with the use of closures (cf. Function\nadvanced),\nbut this is not be presented inside this chapter.\ndef foo () {\n    import std::io;     // importation is local to foo\n    let x = 12;\n    {\n        def bar () -> i32 {\n            // Try to add the following line \n            // println (x);\n            12\n        }\n        println (x + bar ());\n    }\n\n    // bar is no longer accessible\n    // bar (); // will not compile\n}\n\ndef main () {\n    foo ();\n\n    // Try to add the following lines : \n    // bar ();\n    // println (\"In the main function !\");\n}\n\n\nIn the above example, the bar function is available in the scope\nopened at line 4, until its end at line 11. For that reason,\nit is also not available inside the main function. Moreover, the\nimport statement made at line 2 (importing the println\nfunction) is only available in the scope opened at line 1, and for\nthat reason not available in the main function. Functions are\nnot modules, this way of defining is used to define private symbols\nonly, in a future chapter we will see a way to define public symbols\navailable for other functions, and foreign modules (cf.\nModules).\n1.5. Uniform call syntax\nThe uniform call syntax is a syntax that allows to call a function\nwith the dot operator .. The uniform call syntax places the\nfirst parameter of the function at the left of the dot\noperation, and the rest of the arguments of the function after the\nright operand as a list of expressions separated by comas enclosed\ninside parentheses. \nufc := expression '.' expression '(' (expression (',' expression)*)? ')'\n\nThis syntax is used to perform continuous data processing and to make\nthe source code easier to read. This syntax is named uniform call\nsyntax because it is similar to the the syntax used to call methods\non class objects\n(cf. Objects);\nimport std::io\n\ndef plusOne (i : i32) -> i32 \n    i + 1\n\ndef plusTwo (i : i32) -> i32\n    i + 2\n\ndef main () {\n    let x = 12;\n    x.plusOne ()\n     .plusTwo ()\n     .println ();          \n}\n\nResults:\n15\n\nThe uniform call syntax can also be useful to define equivalent of\nmethods on structures. \n"},"primitives/control.html":{"url":"primitives/control.html","title":"Control flows","keywords":"","body":"1. Control flows2. If expression2.1. Loops2.1.1. Infinite repetitions2.1.2. Loop while condition is met2.1.3. Iterate over a value1. Control flows\nWhen writing a program, the ability to decide to execute part of the\ncode conditionally, or to repeat part of the code, is a basic scheme\nthat is necessary. \n2. If expression\nAn if expression is a control flow allowing to branch into the\nprogram code by making decisions based on conditions. An else can be\nplaced after an if expression, to execute a part of code, if the\ncondition of the if expression is not met. The syntax of the if\nexpression is presented in the following code block.\nif_expression := 'if' expression expression ('else' expression)?\n\n\nThe following source code present a basic utilization of the if expression. \ndef main () {\n    let x = 5;\n\n    if x \n\nThe value of an if expression is computed by the block of code that\nis executed when branching on the condition. Each branch of the\nif expression must have a value of the same type, otherwise an\nerror is returned by the compiler. The value of an if, can of\ncourse be of type void.\ndef main () {\n    let condition = true;\n    let x = if condition {\n        5 \n    } else {\n        7\n    };\n}\n\n\nIf there is a possibility for the program to enter none of the branch\nof the if expression, then the value of the whole if expression is\nof type void. For example, in the following source code, the\nvariable condition can be either true or false, leading to\nthe possibility for the if expression defined at line 5 to be\nnever entered, and to the possibility for that the value of x to\nbe never set.\ndef foo () -> bool { // ... } // return a bool value\n\ndef main () {\n    let condition = foo ();\n    let x = if condition { // the condition can be false\n        5 \n    }; // and then the expression has no value\n       // but the variable x cannot be of type void\n}\n\nErrors: \nError : incompatible types void and i32\n --> main.yr:(5,10)\n 5  ┃     let x = if condition { // the condition can be false\n    ╋             ^^\n    ┃ Note : \n    ┃  --> main.yr:(6,3)\n    ┃  6  ┃         5 \n    ┃     ╋         ^\n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n\n2.1. Loops\nIn Ymir, there are three kinds of loops: loop, while and for.\n2.1.1. Infinite repetitions\nThe keyword loop is used to specify that a scope must be\nrepeated endlessly. The syntax of the loop expression is the\nfollowing:\nloop_expression := 'loop' expression\n\n\nIn the following example, the program will never exit, and will print,\nan infinite number of times, the string \"I will be printed an infinite\nnumber of times\".\ndef main () {\n    loop { // the loop will never exit\n         println (\"I will be printed an infinite number of times\");\n    }\n}\n\n\nA loop can be used to repeat an action until it succeeds, e.g. waiting\nfor the end of a thread, or waiting for incoming network connections,\netc.  The keyword break is used to stop a loop. A break\nstatement is associated with a value, which is following the\nkeyword. The value of a loop is defined by the value given by the\nbreak statement. Every break statement in a loop must share the\nsame type. A loop can evidently be of type void.\nimport std::io\n\ndef main () {\n    let mut counter = 0;\n\n    let result = loop { \n        counter += 1;\n        if counter == 10 {\n            break counter + 1; // stop the loop and set its value to 'counter + 1'\n        }\n    };\n    println (\"Result : \", result);}\n\nResults:\nResult : 11\n\n2.1.2. Loop while condition is met\nThe keyword while creates a loop, which repeats until a\ncondition is no longer satisfied. As for the loop, it can be broken\nwith the keyword break. Unlike loop the value of a while loop\nis always of type void, because it is impossible to ensure that\nthe while is entered at all. The break statement must follow that\nrule, and break only with values of type void. \nContribution:\nIt is planned to add the possibility to write an else after a while\nloop to give a value to the while loop when it is not entered.\nThe grammar of the while loop is presented, in the following code\nblock.\nwhile_expression := 'while' expression expression\n\n\nThe following example, present an utilization of a while loop, where\nthe loop iterates 10 times, while the value of i is lower than\n10. \nimport std::io\n\ndef main () {\n    let mut i = 0;\n    while i \n\nResults:\nI is : 10\n\n2.1.3. Iterate over a value\nThe last type of loop is the for loop defined with the keyword\nfor. Like for the while loop the value of a for loop is\nalways void as it is impossible to garantee that the loop is\nentered even once. The for loop iterates over an iterable\ntype. Primitive iterable types are ranges, tuple, slices and static\narrays.\nfor_expression := 'for' ('(' var_decls ')' | var_decls) 'in' expression expression\n\nvar_decls := var_decl (',' var_decl)\nvar_decl := (decorator)* identifier (':' type)?\n\ndecorator := 'ref' | 'mut' | 'dmut'\n\n \n1) Iteration over a range. In the following example, the for loop is\nused to iterate over two ranges. The first loop at line 4,\niterates between 0 and 8 (not included), by a step of\n2. When the second loop iterate between the value 10 and 0\n(not included) with a step of -1.\nimport std::io\n\ndef main () {\n    for i in (0 .. 8).step_by (2) {\n        println (i);\n    }    \n\n    for i in 10 .. 0 {\n        println (i, \"!\");\n    }\n}\n\n\n2) iteration over slices and static arrays. Slices are iterable\ntypes. They can be iterated using one or two variables. When only one\nvariable is used, it is associated with the values contained inside\nthe slice. When two variable are used, the first variable is\nassociated to the current iteration index, and the second variable to\nthe values contained inside the slice. Static array iteration works\nthe same.\nimport std::io;\n\ndef main () {\n    let a = [10, 11, 12];\n    for i in a {\n        print (i, \" \");\n    }\n\n    println (\"\");\n    for i, j in a {\n        print (i, \"-> \", j, \" \");\n    }\n    println (\"\");\n}\n\nResults:\n10 11 12 \n0-> 10 1-> 11 2-> 12\n\nContribution: the iteration by reference over mutable slice, and\nmutable static arrays is currently under development.\n3) iteration over tuples. Tuple are iterable types. But unlike slice,\nor range the for loop is evaluated at compilation time. The tuple\ncan be iterated using only one variable, that is associated to the\nvalues contained inside the tuple.\nimport std::io \n\ndef main () {\n    let x = (1, 'r');\n    for i in x { \n        println (i);\n    }\n\n    // Is equivalent to \n    println (x.0);\n    println (x.1);\n}\n\n\nOne may note that the type of the variable i in the for loop\nof the above example changes from one iteration to another, being of\ntype i32 at first iteration and then of type c32. For that\nreason, the for loop is not really dynamic, but flattened at\ncompilation time. This does not change anything from a user\nperspective, but is worth mentioning, to avoid miscomprehension of\nstatic type system, there is no hidden dynamicity here.\n"},"primitives/operator.html":{"url":"primitives/operator.html","title":"Operator priority","keywords":"","body":"1. Operator priority1. Operator priority\nThe following table present the precedence of the operators, and\nliterals. This table presents the priority of the operators, but does\nnot specify how the operators are used, and their specific syntax. For\nexample, there are unary operators, and binary operators, that\nrequire respectively one and two operands, but that is not specified\nin the table.\n\n\n\nPriority\nDescription\nOperators\nComments\n\n\n\n\n0\nAssignement operators\n= /= -= += *= %= ~=  >>=\n\n\n\n1\nLogical Or\n||\n\n\n\n2\nLogical And\n&&\n\n\n\n3\nComparison operators\n >  >= != == of is in !of !is !in\nCannot be chained\n\n\n4\nRange operators\n.. ...\n\n\n\n5\nBitshift operators\n >>\n\n\n\n6\nBit operators\n| ^ &\nWarning there is no priority over these operators (or and and)\n\n\n7\nAdditive operators\n+ ~ -\n~ is the concatenation operator\n\n\n8\nMultiplicative operators\n* / %\n\n\n\n9\nPower operator\n^^\n\n\n\n10\nUnary operators\n- & * !\nAlways prefixed\n\n\n11\nOption operator\n?\nAlways postfixed\n\n\n12\nKeyword and Scope operators\n{ if while assert break do for match let return fn dg loop throw __version __pragma with atomic\nThis operators have a specific syntax that must be closed, to be completed\n\n\n13\nPostfix operators\n. ( [ :. #[ #( #{\n( [ #{ #[ #( must be closed by a balanced ], ) or } to be completed\n\n\n14\nPath operator\n::\n\n\n\n15\nLiteral operators\n( ! [ | cast move\nIn that case ( [ | start a new expression, move  and | start a lambda litertal, ( a tuple, or a 0 priority expression, [ a slice or array literal, ! a template call\n\n\n16\nDecorated expression\nref const mut dmut cte\n\n\n\n17\nAnything\n\nA variable, a literal, etc.\n\n\n\n"},"advanced/":{"url":"advanced/","title":"Alias and References","keywords":"","body":"1. Alias and References1.1. Standard and Aliasable types1.2. Mutability level1.2.1. Deep mutability1.2.2. Const keyword1.2.3. String literal1.3. Memory borrowing1. Alias and References\nThe alias and reference is one of the most important characteristics\nof the Ymir language, which allows it to give guarantees on the\nmutability of the data, and the explicit movement of the memory. It is\nimportant to understand how memory works in Ymir, in order to\nunderstand the error message you might get when you try to move data\nfrom one variable to another.\nIt is important to understand that Ymir is a high level\nprogramming language, and that you will never have to worry about\nmemory management (memory leaks), the language using a garbage\ncollector. However, in terms of mutability and access rights, the\nlanguage provides an expressive system for managing memory movements.\n1.1. Standard and Aliasable types\nIn Ymir, there are two types, standard types and aliasable\ntypes. A value whose type is a standard type, can be copied without\nthe need of explicitly inform the compiler. The standard types are all\nprimitive scalar types. On the other hand, aliasable types are types\nthat have borrowed data, which will not be copied unless it is\nexplicitly written into the code, to avoid performance loss.\nTo understand how data is represented in a program, you need to know\nthe difference between heap and stack. The stack is a space allocated\nby the program when a function is entered, which is released when the\nfunction is exited. On the other hand, the heap is a space that is\nallocated when certain instructions in the program require it, such as\nallocating a new slice, allocating  a new object instance, and so on.\nWhen a slice is allocated, all its data is stored in the heap, and the\naddress of this data is stored in the stack, where the variables are\nlocated. The following figure shows the data representation for this\nprogram:\ndef foo () {\n    let x = [1, 2, 3];\n}\n\n\n\n1.2. Mutability level\nWe define the level of mutability as the deepest level of the type\nthat is mutable. An example of a mutability level is shown in the\nfollowing table:\n\n\n\nType\nLevel\n\n\n\n\nmut [i32]\n1\n\n\n[i32]\n0\n\n\nmut [mut i32]\n2\n\n\ndmut [[[i32]]]\n4\n\n\n\nThis is mainly used to ensure that the borrowed data is not changed by\nanother variable in a foreign part of the program. The users have full\ncontrol over the data they have created. The example below shows\nhow the mutability level is used to ensure that the content of a\ntable is never changed.\nimport std::io\n\ndef main () \n    throws &OutOfArray\n{\n    let mut x = [1, 2, 3];\n    x = [2, 3, 4];\n\n    x [0] = 8;\n}\n\n\nThe type of x in the above example is mut [i32]. The\nmutability of the internal part of the slice (i32 value) is not\nspecified. The compiler, for security reasons, infered it as\nimmutable. The line 5 of the previous example is accepted, because\nthe variable x is mutable, however, the value pointed by the\nslice contained in x is not. For that reason the line 9 is\nnot accepted and the compiler returns the following error.\nError : left operand of type i32 is immutable\n --> main.yr:(7,7)\n 7  ┃     x [0] = 8;\n    ╋       ^\n\n\nymir1: fatal error: \ncompilation terminated.\n\n\nIf the mutability level defines the write permission of every data, it\nis assumed that every parts of the code that have access to a give\nvalue have read permission on it. For that reason, in the previous\nexample, even if writting into x [0] is not permitted, reading\nits value is allowed.\n1.2.1. Deep mutability\nEarlier we introduced the keyword dmut, this keyword is used to\navoid a very verbose type statement, and defines that every subtype\nare mutable. This keyword is applicable to all types, but will only\nhave a different effect from the mut decorator on aliasable\ntypes. The following table gives an example of an slice type, using\nthe keyword dmut :\n\n\n\nType\nVerbose equivalent\n\n\n\n\ndmut [i32]\nmut [mut i32]\n\n\ndmut [[[i32]]]\nmut [mut [mut [mut i32]]]\n\n\n\nIf we come back to our previous example, and change the type of the\nvariable x, and use the keyword dmut. The variable x\nnow borrows mutable datas, that can be modified, thus the expression\nat line 9 is accepted.\nimport std::io\n\ndef main () \n    throws &OutOfArray\n{\n    let dmut x = [1, 2, 3];\n    x = [2, 3, 4];\n\n    x [0] = 8;\n}\n\n1.2.2. Const keyword\nThe const keyword is the perfect opposite of the dmut\nkeyword. This keyword has no interest when defining types directly\n(because they are immutable by default), but coupled with the keyword\ntypeof, it can transform a mutable type into a immutable type.\nimport std::io;\n\ndef main () {\n    let mut x = 12;\n    println (typeof (x)::typeid);\n    println ((const typeof (x))::typeid);\n}\n\nResults:\nmut i32\ni32\n1.2.3. String literal\nStrings literal, unlike slice literals, are in the text segment of the\nprogram (read-only part of a program). This means that the type of a\nliteral string is [c32] (or [c8] if the suffix s8 is\nspecified), while the type of a literal array (of i32 for example)\nis mut [mut i32]. For that reason, it impossible to borrow the\ndata into a deeply mutable variable.\nimport std::io\n\ndef main () {\n    let dmut x = \"Try to make me mutable !?\";\n}\n\n\nThe compiler returns an error. This error means that the mutability\nlevel of the right operand is 1, here mut [c32], (the reference\nof the array is mutable but not its content), and the code try to put\nthe reference inside a variable of mutability level 2, that is to\nsay of type mut [mut c32]. If this was allowed the variable x\nwould have the possibility to change data that has been marked as\nimmutable at some point of the program, so the compiler does not allow\nit, and returns the following error.\nError : discard the constant qualifier is prohibited, left operand mutability level is 2 but must be at most 1\n --> main.yr:(4,11)\n 4  ┃     let dmut x = \"Try to make me mutable !?\";\n    ╋              ^\n    ┃ Note : \n    ┃  --> main.yr:(4,15)\n    ┃  4  ┃     let dmut x = \"Try to make me mutable !?\";\n    ┃     ╋                  ^\n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n\n1.3. Memory borrowing\nWhen you want to make a copy of a value whose type is aliasable, you\nmust tell the compiler how you want to make the copy. There are four\nways to move or reference memory, which are provided with the four\nkeywords ref, alias, copy and dcopy. The following chapters\npresents these keywords, and the semantic associated to them.\n"},"advanced/references.html":{"url":"advanced/references.html","title":"References","keywords":"","body":"1. Reference1.1. Reference as function parameter1.2. Reference as a value1.3. Reference as function return1. Reference\nThe keywordref is a keyword that is placed before the\ndeclaration of a variable. It is used to refer to a value, which is\nusually borrowed from another variable. They are performing similar\noperation as\nPointers,\nwith the difference that they does not need to be dereferenced (this\nis done automatically), and pointer arithmetics is not possible with\nreferences. In Ymir references are always set, and are always set\nfrom another variable, hence they are way safer than pointers, and\nmust be prefered to them when possible.\ndef foo () {\n    let x = [1, 2, 3];\n    let ref y = ref x;\n    //          ^^^    \n    // Try to remove the keyword ref.\n}\n\n\nThe above program can be represented in memory as shown in the\nfollowing figure.\n\n\n\nIn this figure, one can note that y, is a pointer to x, which\ncan be used as if it was directly x. This means that y\nmust have the same mutability properties (or lower) as x. And\nthat if x is mutable, changing the value of y would also\nchange x.\nA first example of reference is presented in the following source\ncode. In this example, a mutable variable x contains a value of\ntype i32. This value is placed on the stack, as it is not a\naliasable type. Then a variable y is constructed as a reference\nof the variable x. Modifying y in the following example, also\nmodifies x.\ndef main ()\n    throws &AssertError\n{\n    let mut x = 12; // place a value of type i32 and value 12 on the stack\n    let ref mut y = ref x; // create a reference of x\n    y = 42; // modify the value pointed by the reference\n    assert (x == 42);\n}\n\n\nA more complexe example is presented in the following source code. In\nthis example, a deeply mutable array x is created. This array is\na reference on borrowed data in the heap. A deeply mutable reference\ny is the, made on that variable x, which is allowed\nbecause x is also deeply mutable and the mutability level of\nx and y are the same. When changing the value of y\n(here the reference of the slice), it does not only change the\nreference of y but also the reference of x.\ndef main () {\n    let mut x : [mut i32] = [1, 2, 3];\n    let ref mut y : [mut i32] = ref x;\n    y = [7, 8, 9]; // modify the value pointed by the reference (in the stack)\n    y [0] = 89; // modify the value on the heap\n    assert (x == [89, 8, 9]); \n}\n\n1.1. Reference as function parameter\nA parameter of a function can be a reference. As with the local\nvariable, when a value is passed to it, you must tell the compiler\nthat you understand that you are passing the value by reference, and\naccept the side effects it may have on your values.\nimport std::io\n\ndef foo (ref mut x : i32) {\n    x = 123;\n}\n\ndef main () {\n    let mut x = 12;\n    //  ^^^\n    // Try to remove the mut\n    foo (ref x);\n    //   ^^^\n    // Try to remove the ref\n    println (x); \n}\n\n\nThe following figure shows the memory status of the previous code:\n\nThe keyword ref is not always associated with a mutable variable, it\ncan be used to pass a complex type to a function more efficiently,\nwhen you don't want to make a complete copy, which would be much less\nefficient. In this case, you should always specify that you pass the\nvariable by reference, to distinguish it from the function that passes\nthe variable directly by value. In practice, due to the existence of\naliasable types, which will be discussed in the next chapter, you will\nnever gain anything by doing this.\nimport std::io\n\ndef foo ( x : i32) {\n//       ^\n// Try to add mut here\n    println (\"By value : \", x);\n}\n\ndef foo (ref x : i32) {\n    println (\"By reference : \", x);\n}\n\ndef main () {\n    let x = 89;\n    foo (x);\n    foo (ref x);\n}\n\nResults:\nBy value : 89\nBy reference : 89\n\nIf you have done the exercise, and added the keyword mut to the\nsignature of the first function foo, you should get the following\nerror: \nError : a parameter cannot be mutable, if it is not a reference\n --> main.yr:(3,15)\n 3  ┃ def foo (mut  x : i32) {\n    ╋               ^\n\n\nThis error means that the type of x is not aliasable, so if it is not\na reference, marking it as mutable will have no effect on the program,\nso the compiler does not allow it.\n1.2. Reference as a value\nA reference is not a type, it is only a kind of variable, you cannot\nstore references in subtypes (for example, you cannot make an array of\nreferences, or a tuple containing a reference to a value). This means\nthat with the following code, you should will get an error.\ndef main () {\n    let x = 12;\n    let y = (10, ref x);\n}\n\n The following error means that the source code intended to create\na reference on a variable, but the compiler will not make it, as it\nhas no interest and will be immediately dereferenced to be stored in\nthe tuple value.\nWarning : the creation of ref has no effect on the left operand\n --> main.yr:(3,22)\n 3  ┃     let y = (10, ref x);\n    ╋                      ^\n\n\nymir1: fatal error: \ncompilation terminated.\n\n1.3. Reference as function return\nYou may be skeptical about the interest of returning a reference to a\nvariable, and we agree with you. That is why, it is impossible to\nreturn a reference to a variable as a function return value. \nimport std::io\n\ndef foo () -> ref i32 {\n    let x = 12;\n    ref x\n}\n\ndef main () {\n    let ref y = ref foo (); // x would no longer exists\n    println (y); // and a seg fault would be raised, when using the reference\n}\n\n\nWith the above source code, the compiler return this fairly straightforward error.\nError : cannot return a reference type\n --> main.yr:(3,19)\n 3  ┃ def foo () -> ref i32 {\n    ╋                   ^^^\n\n"},"advanced/alias.html":{"url":"advanced/alias.html","title":"Aliases","keywords":"","body":"1. Alias1.1. Alias a function parameter1.1.1. Alias in uniform call syntax1.2. Special case of struct and tuple1. Alias\nAll types that containing a pointer to data in the heap (or the stack)\nare aliasable types. An aliasable type cannot be implicitly copied,\nnor can it be implicitly referenced, for performance and security\nreasons respectively. There are mainly three aliasable types, arrays\n(or slices, there is no difference in Ymir), pointers, and\nobjects. Structures and tuples containing aliasable types are also\naliasable.\nThe keyword alias is used to inform the compiler that the used\nunderstand that the data borrowed by a variable (or a value) will\nborrowed by another values.\nimport std::io\n\ndef main () {\n    let mut x : [mut i32] = [1, 2, 3];\n    let mut y : [mut i32] = alias x; // allow y to borrow the value of x\n    //                      ^^^^^\n    // Try to remove the alias\n    println (y);\n}\n\n\nThis source code can be represented in memory by the following figure.\n\nThe alias keyword is only mandatory when the variable that will borrow\nthe data is mutable and may impact the value. It is obvious that one\ncannot borrow immutable data from a variable that is mutable. For\nexample, the compiler must return an error on the following code.\nimport std::io\n\ndef main () {\n    let x = [1, 2, 3];\n    let mut y : [mut i32] = alias x; // try to borrow immutable data in deeply mutable variable y  \n    //                      ^^^^^\n    // Try to remove the alias\n    println (y);\n}\n\n\nErrors:\nError : discard the constant qualifier is prohibited, left operand mutability level is 2 but must be at most 1\n --> main.yr:(5,13)\n 5  ┃     let mut y : [mut i32] = alias x; // try to borrow immutable data in deeply mutable variable y  \n    ╋             ^\n    ┃ Note : \n    ┃  --> main.yr:(5,29)\n    ┃  5  ┃     let mut y : [mut i32] = alias x; // try to borrow immutable data in deeply mutable variable y  \n    ┃     ╋                             ^^^^^\n    ┗━━━━━┻━ \n\nError : undefined symbol y\n --> main.yr:(8,14)\n 8  ┃     println (y);\n    ╋              ^\n\n\nymir1: fatal error: \ncompilation terminated.\n\n\nHowever, if the variable that will borrow the data is not mutable,\nthere is no need to add the keyword alias, and the compiler will\ncreate an implicit alias, which will have no consequences.\nimport std::io\n\ndef main () {\n    let x = [1, 2, 3];\n    let y = x; // implicit alias is allowed, 'y' is immutable\n    println (y);\n}\n\n\nIn the last example, y can be mutable, as long as its internal\nvalues are immutable, i.e. its type is mut [i32], you can change the\nvalue of y, but not the values it borrows. There is no problem,\nthe values of x will not be changed, no matter what is done with\ny.\nimport std::io\n\ndef main () {\n    let x = [1, 2, 3];\n    let mut y = x; \n    // y [0] = 9;\n    // Try to add the above line \n\n    y = [7, 8, 9];\n    println (y);\n}\n\n\nYou may have noticed that even though the literal is actually the\nelement that creates the data, we do not consider it to be the owner\nof the data, so the keyword alias is implied when it is literal. We\nconsider the data to have an owner only once it has been assigned to a\nvariable.\nThere are other kinds of alias that are implicitly allowed, such\nas code blocks or function calls. Those are implicit because\nthe alias is already made within the value of these elements.\nimport std::io\n\ndef foo () -> dmut [i32] {\n    let dmut x = [1, 2, 3];\n    alias x // alias is done here and mandatory\n}\n\ndef main ()\n    throws &AssertError\n{\n    let x = foo (); // no need to alias, it must have been done in the function\n    assert (x == [1, 2, 3]);\n}\n\n\n1.1. Alias a function parameter\nAs you have noticed, the keyword alias, unlike the keyword ref,\ndoes not characterize a variable. The type of a variable will indicate\nwhether the type should be passed by alias or not, so there is no\nchange in the definition of the function. When the type of a parameter\nis an aliasable type, this parameter can be mutable without being a\nreference.\nimport std::io\n\n// The function foo will be allowed to modify the internal values of y\ndef foo (mut y : [mut i32])\n    throws &OutOfArray\n{\n    y [0] = y [1];\n    y = [8, 3, 4]; // has no impact on the x of main,\n    // y is a reference to the data borrowed not to the variable x itself\n}\n\ndef main ()\n    throws &OutOfArray, &AssertError\n{\n    let dmut x = [1, 2, 3];\n    foo (alias x);\n    //   ^^^^^\n    // Try to remove the alias\n    assert (x == [2, 2, 3]);\n}\n\n\nAs with the variable, if the function parameter cannot affect the\nvalues that are borrowed, the alias keyword is not required.\nimport std::io\n\ndef foo (x : [i32]) {\n    println (x); // just reads the borrowed data, but doesn't modify them\n}\n\ndef main () {\n    let dmut x = [1, 2, 3];    \n    foo (x); // no need to alias\n}\n\n\n1.1.1. Alias in uniform call syntax\nWe have seen in the function chapter, the uniform call syntax. This\nsyntax is used to call a function using the dot operator ., by\nputting the first parameter of the function on the left of the\noperation. When the first parameter is of an aliasable type, the first\nargument must be aliased explicitely, leading to a strange and verbose\nsyntax.\nlet dmut a = [1, 2, 3];\n(alias a).foo (12); // same a foo (alias a, 12);\n\n\nTo avoid verbosity, we added the operator :., to use the\nuniform call syntax with an aliasable first parameter. \nlet dmut a = [1, 2, 3];\na:.foo (12); // same as foo (alias a, 12);\n\n\nThis operator is very usefull when dealing with classes, where the\nuniform call syntax is mandatory, as we will see in chapter\nClass.\n1.2. Special case of struct and tuple\nIn the chapter\nStructure\nyou will learn how to create a structure containing several fields of\ndifferent types. You have already learned how to make tuples. These\ntypes are sometimes aliasable, depending on the internal type they\ncontain. If a tuple, or a structure, has a field whose type is aliasable,\nthen the tuple or structure is also aliasable.\nThe table below presents some examples of aliasable tuples : \n\n\n\nType\nAliasable\nReason\n\n\n\n\n(i32, i32)\nfalse\ni32 is not aliasable\n\n\n([i32],)\ntrue\n[i32] is a slice, and hence aliasable\n\n\n([i32], f64)\ntrue\n[i32] is a slice, and hence aliasable\n\n\n(([i32], i32), f64)\ntrue\n[i32] is a slice, and hence aliasable\n\n\n\nIn the introduction of this chapter we presented the notion of\nMutability\nlevel. One\ncan note that mutability level is not suitable for tuple, as aliasable\ntuple are trees of type and not simply a list. However, this does not\nchange much, the compiler just check the mutability level of the inner\ntypes of the tuple, recursively.\n"},"advanced/copies.html":{"url":"advanced/copies.html","title":"Copy and Deep copy","keywords":"","body":"1. Copy data to make them mutable1.1. Copy1.2. Deep copy1. Copy data to make them mutable\nSometimes it is not possible to allow data to be borrowed by foreign\nfunctions or variables. This can be due to the facts that data are\nimmutable for example. To solve this problem, Ymir provides two\nkeywords, copy and dcopy.\n1.1. Copy\nThe copy keyword makes a copy of the first level of a value,\nwhose type is aliasable. This copy transform an immutable type into a\nmutable one, by increasing its mutability level by one. The following\ntable shows some examples of the types of copied values :\n\n\n\nType\nType of copied value\n\n\n\n\n[i32]\nmut [mut i32]\n\n\nmut [i32]\nmut [mut i32]\n\n\nmut [[i32]]\nmut [mut [i32]]\n\n\n\nAn example of what can be achieved by copy keyword is shown in\nthe following code. The representation of the memory is also shown in\nthe figure underneath. In this example, the variable x is copied\nand the result value is placed in the variable y. In this\nexample, each variable are borrowing different data placed on the\nheap, whose values are equivalent.\nimport std::io\n\ndef main ()\n    throws &AssertError, &OutOfArray\n{\n    let x = [1, 2, 3];\n    let dmut y = copy x; // create a copy of x\n    assert (x == y); // y and x have the same value, but at different location\n\n    y [0] = 9; \n    assert (x == [1, 2, 3]); // modifying y does not affect x\n    assert (y == [9, 2, 3]); // but still affects y\n}\n\n\nWe can see from the figure below, that the variable y points to\ndata at a different location, from the data pointed by x. This\nimplies a new memory allocation, and a memory copy, that cost some cpu\ntime, and memory place. For that reason, copies are never hidden by\nthe language, and are made only when the keyword copy is placed\nin the source code.\n\nExercise : Modify x that is initialised with an imutable string literal : \nimport std::io\n\ndef main () \n    throws &OutOfArray \n{\n    let x = \"hello !\";\n    x [0] = 'H'; // Make this line work\n    assert (x == \"Hello !\");\n}\n\n Correction (spoiler) : \n\nimport std::io\n\ndef main () \n    throws &OutOfArray, &AssertError\n{\n\tlet dmut x = copy \"hello !\";\n\tx [0] = 'H'; // Well done\n\tassert (x == \"Hello !\");\n}\n\n\n1.2. Deep copy\nThe deep copy will make a copy of the value and all internal values,\nit must be used in special cases because it is much less efficient\nthan the simple copy, which copies only one level of the data. There\nis nothing complex to understand in deep copy, it simply creates a\nvalue, deeply mutable, which is an exact copy.\nimport std::io\n\ndef main () {\n    let x = [[1], [2, 3], [4]];\n    let dmut y = dcopy x;\n    let mut z : [mut [i32]] = copy x;\n    println (x, \" \", y, \" \", z);\n}\n\n"},"advanced/best.html":{"url":"advanced/best.html","title":"Best practice","keywords":"","body":"1. Best practice1. Best practice\nThe copy is never hidden in the source code that is available to the\nuser. However, many codes that we are using on a daily basis, are\nprovided by libraries. In libraries, only the prototypes of the\nfunctions are presented to the user, and therefore if a copy is made\ninside a function, the copy is hidden from the user. We cannot\nguarantee that such copy are not made (at least for the moment), so we\npropose a best practice advice to avoid hidden copies inside\nlibraries.\nThis advice is simple, never take a immutable parameter in a function,\nif you have to make a copy of it inside the function. For example, let\nsay we have a function that sorts a slice. This function should\npreferably take a mutable slice as input and modify it directly.\ndef good (dmut slc : [i32])-> dmut [i32] {\n    // perform the sort on slc\n    alias slc\n}\n\ndef bad (slc : [i32])-> dmut [i32] {\n    let dmut res = copy slc;\n    // perform the sort on res\n    alias res}\n\n\nThis way, the function calling the sort function has the choice of\nmaking the copy or not. In the following example, the user has the\nchoice when calling the function good, but never when calling\nthe function bad, making the copy hidden. One can note from the\nfollowing example, that the copy is never hidden when calling\ngood, and that it is also possible to make no copy at all.\ndef main () {\n    let dmut slc = [9, 3, 7];\n    let dmut aux = good (copy slc); // slc is unchanged, and aux is sorted\n    let dmut slc2 = good (alias slc); // slc is sorted, and slc2 points the data of slc\n\n    good (slc); // impossible, implicit alias is not allowed\n\n    bad (slc); // here there is not need for alias, nor copy, \n               // the data of slc won't be modified in bad\n               // the copy is alway made and hidden\n}\n\n\nFrom the above example, the compiler returns an error, when trying to\ncall the function good without aliasing nor copying at line\n6. This error prevents from copying values implicitely without\nwritting it down, nor making aliasing of the values and giving the\nwrite permission to foreign functions without informing the compiler\nof our agreement. All the other calls are valid, the wish of the user\nbeing totally explicit.\nError : the call operator is not defined for main::good and {mut [mut i32]}\n --> main.yr:(17,7)\n17  ┃     good (slc); // impossible, implicit alias is not allowed\n    ╋          ^   ^\n    ┃ Note : candidate good --> main.yr:(1,5) : main::good (slc : mut [mut i32])-> mut [mut i32]\n    ┃     ┃ Error : discard the constant qualifier is prohibited, left operand mutability level is 2 but must be at most 1\n    ┃     ┃  --> main.yr:(17,8)\n    ┃     ┃ 17  ┃     good (slc); // impossible, implicit alias is not allowed\n    ┃     ┃     ╋           ^^^\n    ┃     ┃     ┃ Note : implicit alias of type mut [mut i32] is not allowed, it will implicitly discard constant qualifier\n    ┃     ┃     ┃  --> main.yr:(17,8)\n    ┃     ┃     ┃ 17  ┃     good (slc); // impossible, implicit alias is not allowed\n    ┃     ┃     ┃     ╋           ^^^\n    ┃     ┃     ┗━━━━━┻━ \n    ┃     ┃ Note : for parameter slc --> main.yr:(1,16) of main::good (slc : mut [mut i32])-> mut [mut i32]\n    ┃     ┗━━━━━━ \n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n\nContribution: Maybe it is possible to complitely avoid hidden copies ? (I don't have any clue for the moment).\n"},"modules/":{"url":"modules/","title":"Modules","keywords":"","body":"1. Modules1.1. File hierarchy1.2. Sub modules1.3. Privacy1.3.1. Example1.4. Symbol conflict resolution1.5. Public importation1.5.1. Best practice1.6. Include directory1.7. Compilation of modules1. Modules\nWhen creating a large project, it is very important to organize your\ncode. Ymir offers a system of modules, which is used to manage\ndifferent parts of the code that have different purposes. Each source\nfile in Ymir is a module.\n1.1. File hierarchy\nLets have a look at the following file hierarchy : \n.\n├── main.yr\n└── extern_modules\n    ├── bar.yr\n    └── foo.yr\n\n1 directory, 3 files\n\nIn this file hierarchy there are three files, which contain modules, the\nfirst module in the file main.yr will be named main. The second\none in the extern_modules/bar.yr file will be named extern_modules::bar,\nand the third one in the extern_modules/foo.yr file will be named\nextern_modules::foo.\nTo be properly importable, the module must be defined from the\nrelative path of the compilation, i.e. if the file is located in\n$(pwd)/relative/path/to/file, its module name must be\nrelative::path::to::file.\nThe name of a module is defined by the first line of the source code,\nby keyword mod. If this line is not given by the user, the path of\nthe module will only be the file name, so you will not always be able\nto import the module, depending on its relative path. You can consider\nthis line mandatory for the moment. \nFor example, in the file foo.yr, the first line must look like : \nmod extern_modules::foo\n\n\nAnd, it will therefore be importable everywhere, for example in the\nmain module, when writing the import declaration :\nimport extern_modules::foo\n\n \nThe syntax of the import statement is the following :\nimport_statement := 'import' path (',' path)* (';')?\npath := Identifier ('::' Identifier)* ('::' '_')?\n\n1.2. Sub modules\nSub modules are local modules, declared inside a global modules, are\ninside another sub module. Unlike global module, the access to the\nsymbols defined inside them is not implicit. For that reason they have\nto be explicitely mentionned when trying to access to their\nsymbols. This mention is done with the double colon binary operator\n::, where the first operand is the name of the module, and the\nsecond the name of the symbol to access.\nmod main\nimport std::io;\n\nmod InnerModule {\n\n    pub def foo () {\n        println (\"Foo\");\n    }\n\n}\n\ndef main () {\n    InnerModule::foo (); // access of the function declared in InnerModule\n}\n\nThe access operator ::, can also be used to access to symbols\ndeclared inside global modules. This will be discussed after talking\nabout privacy of symbols.\n1.3. Privacy\nAll symbols defined in a module are private by default. The privacy of\na given symbol s refer to the possibility for foreign modules, and\nsymbols to access to this given symbol s. When a symbol s is\ndeclared private in a module s, then only the other symbols of the\nmodule m have access to it. Module privacy can be seen as a tree,\nwhere a global module is a root, and module symbols are the branches\nand leaves of the tree. In such a tree, symbols have access to their\nparent, siblings, and the siblings of their parents. \nIn the following figure an example of a module tree is presented,\nwhere a global module named A, has three symbols, 2 sub modules\nA::X and A::Y, and a function A::foo. In this tree, we assume\nthat every symbols are declared private. For that reason, the function\nA::foo has access to A, A::X, A::Y, but not to A::X::bar,\nnor A::Y::baz. The symbol A::X::bar, has access to every symbols\n(A, A::X, A::Y, A::foo), except A::Y::baz.\n\n\n\nGlobal modules are always tree roots, for that reason they don't have\nparents. For example, the module extern_modules::foo, does not\nhave access to the symbols declared inside the module\nextern_modules, (if they are privates).\nThe keyword pub flag a symbol as public, and accessible by\nforeign modules. This keyword can be used as a block, or for only one\nsymbol. Its syntax grammar is presented in the following code block.\npub :=   'pub' '{' symbol* '}' \n       | 'pub' symbol\n\n1.3.1. Example\n1) Module extern_modules/foo.yr\nmod extern_modules::foo;\n\n/**\n * foo is public, it can be accessed from foreign modules\n */\npub def foo () {}\n\n/**\n * The bar function is private by default\n * Thus only usable in this module\n */\ndef bar () {}\n\n\n2) Module main.yr\n/**\n * This importation will give access to all the symbols in the module\n * 'extern_modules::foo' that have been declared 'public'\n */\nimport extern_modules::foo\n\ndef main () {\n    foo (); // foo is public we can call it\n    bar (); // however, bar is private thus not accessible\n}\n\nErrors:\nError : undefined symbol bar\n --> main.yr:(7,5)\n 7  ┃     bar (); // however, bar is private thus not accessible\n    ╋     ^^^\n    ┃ Note : bar --> extern_modules/foo.yr:(8,5) : extern_modules::foo::bar is private within this context\n    ┗━━━━━━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n\n1.4. Symbol conflict resolution\nWhen two external global modules declare two symbols with the same\nname, it may be impossible to know which symbol the user is refereing\nto. In this case, the double colon operator :: can be used with\nthe name of the module declaring the symbol to resolve the\nambiguity. To give an example of symbol conflict, let's say that we\nhave two module extern_modules::foo and extern_modules::bar\ndeclaring a function with the same signature foo.\n1) Module extern_modules/bar.yr\nmod extern_modules::bar\nimport std::io\n\npub def foo () {\n    println (\"Bar\");\n}\n\n\n2) Module extern_modules/foo.yr\nmod extern_modules::foo\nimport std::io\n\npub def foo () {\n    println (\"Foo\");\n}\n\n\nIn the main module, both modules extern_modules::bar and\nextern_modules::foo, are imported. The main function presented below\nrefers to the symbol foo. In that case, there is no way to tell\nwhich function will be used, extern_modules::foo::foo or\nextern_modules::bar::foo. The compiler returns an error. One can\nnote that this errors occurs only because the signature of the two\nfunction foo are the same (taking no parameters), and they are both\npublic. If there was a difference in their prototypes, for example if\nthe function in the module extern_modules::bar would take a value of\ntype i32 as parameter, the conflict would be resolved by itself, as\nthe call expression will be different.\n3) Module main.yr\nimport extern_modules::bar, extern_modules::foo\n\ndef main () {\n    foo ();\n}\n\nErrors:\nError : {extern_modules::bar::foo ()-> void, extern_modules::foo::foo ()-> void, mod extern_modules::foo} x 3 called with {} work with both\n --> main.yr:(4,6)\n 4  ┃     foo ();\n    ╋         ^\n    ┃ Note : candidate foo --> extern_modules/bar.yr:(4,9) : extern_modules::bar::foo ()-> void\n    ┃ Note : candidate foo --> extern_modules/foo.yr:(4,9) : extern_modules::foo::foo ()-> void\n    ┗━━━━━━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n\n.page-inner {\n  width: 95%;\n}\nIn the above error, we can see that three modules are presented. The\ntwo functions foo — in extern_modules::bar, and\nextern_modules::foo — and the extern_modules::foo module\nitself. Obviously, it is not possible to use the call operator\n() on a module, that is why it is not presented as a possible\ncanditate in the notes of the error.\nThe conflict problem can be resolved by changing the calling\nexpression, and using the double colon operator ::. In the\nfollowing example, the full name of the module is used. This is not\nalways necessary, as bar::foo is sufficient to refer to\nextern_modules::bar::foo, and foo::foo for function\nfoo in extern_modules::foo.\nimport extern_modules::bar, extern_modules::foo\n\ndef main () {\n    extern_modules::bar::foo (); \n    extern_modules::foo::foo (); \n\n    foo::foo (); \n    bar::foo ();\n}\n\nResults:\nBar\nFoo\nFoo\nBar\n\n1.5. Public importation\nAs for all declaration, importation are private. It means that the\nimportation is not recursive. For example, if the module\nextern_modules::foo imports the module extern_modules::bar, and the\nmodule main import the module extern_modules::foo, all the public\nsymbols declared in extern_modules::bar will not be accessible in the\nmodule main.\nYou can of course, make a pub importation, to make the symbols of\nthe module extern_modules::bar visible for the module main.\n1) Module extern_modules/bar.yr\nmod extern_modules::bar\nimport std::io\n\npub def bar () {\n    println (\"Bar\");\n}\n\n\n2) Module extern_modules/foo.yr\nmod extern_modules::foo\n\npub import extern_modules::bar\n\n\n3) Module main.yr\nmod main\nimport extern_modules::foo;\n\ndef main () {\n    bar ();\n}\n\n\nIn the example above, the function bar defined in the module\nextern_modules::bar, is imported (because the function is public\nis public) by the module extern_modules::foo. This importation\nis public, thus when the module main imports the module\nextern_modules::foo, it also imports the module\nextern_modules::bar, and has access to the function bar. \n1.5.1. Best practice\nPublic importation must be used with caution, to avoid polluting other\nmodules. A good practice, is to define some modules only to make\npublic importations. These modules should be named _. For\nexample, with our previous file hierarchy, a file\nextern_modules/_.yr would be added, and no public imports made\nin the modules extern_modules::foo, nor in the module\nextern_modules::bar.\nmod extern_modules::_;\n\npub import extern_modules::foo;\npub import extern_modules::bar;\n\n\nThese modules are not automatically generated by Ymir — even if it\nseems trivial —, to allow importing only a subset of the modules\ncontained in a sub directory. These importation modules are optional\nand left to the choice of the user.\n1.6. Include directory\nYou can use the -I option, to add a path to the include\ndirectory. This path will be used as if it was the current $(pwd). In\nother words, if you add the I -path/to/modules option, and you have a\nfile in path/to/modules/relative/to/my/file, the name of the module\nmust be relative::to::my::file.\ngyc -I ~/libs/ main.yr\n\nThis is how the standard library is included in the build, and how you\ncan access modules in std:: that are not located in $(pwd)/std/.\n1.7. Compilation of modules\nAll modules must be compiled, the import declaration is just a\ndirective of for symbols access, but does not compile the imported\nsymbols. For example, in the following example, there are two modules,\none declaring a function foo, and the other importing it and\ncalling it. \n1) Module main.yr\nmod main\nimport extern_modules::foo;\n\ndef main () {\n    foo ();\n}\n\n\n2) Module extern_modules/foo.yr\nmod extern_modules::foo\n\npub def foo () {}\n\n\nBy compiling only the main function, the compiler returns a link\nerror. This error means that the symbol foo declared in the module\nextern_modules::foo was not found during the symbol linkage. \n$ gyc main.yr\n/tmp/ccCOeXDq.o: In function `_Y4mainFZv':\nmain.yr:(.text+0x3e): undefined reference to `_Y14extern_modules3foo3fooFZv'\ncollect2: error: ld returned 1 exit status\n\nTo avoid this error, and create a valid executable, where all symbols\ncan be found, the module extern_modules::foo has to be compiled\nas well. GYC is able to manage object files (containing pre compiled\nsymbols), and compiled libraries. The way GYC manage these kind of\nobjects is similar to all compiler of the GCC suite, and is not\npresented in this documentation (cf. GCC options for linking).\n$ gyc main.yr extern_modules/foo.yr\n"},"types/":{"url":"types/","title":"User defined types","keywords":"","body":"1. User defined types1. User defined types\nThere are four different custom types: \n\nStructure\nEnumeration\nAka\nClass\n\nThe following chapters present the structure, enumeration and aka.\n"},"types/struct.html":{"url":"types/struct.html","title":"Structure","keywords":"","body":"1. Structure1.1. Structure construction1.2. Field access1.3. Structure mutability1.4. Memory borrowing of structure1.5. Packed and Union1.5.1. Packed1.5.2. Union1.6. Structure specific attributes1. Structure\nStructure is a common design used in many languages to define users'\ncustom types. They contains multiple values of different types,\naccessible by identifiers. Structures are similar to tuples, in terms\nof memory management (located in the stack). Unlike tuples, structures\nare named, and all their internal fields are named as well. \nThe complete grammar of structure definition is presented in the\nfollowing code block. One can note the possibility to add templates to\nthe definition of the structure. These templates will only be\ndiscussed in the chapter\nTemplates,\nand are not of interest to us at the moment.\nstruct_type := 'struct' ('|' var_decl)* '->' identifier (templates)?\nvar_decl := ('mut'?) identifier ':' type ('=' expression)?\nidentifier := ('_')* [A-z] ([A-z0-9_])*\n\n\nThe fields of the structure are defined using the same syntax as the\ndeclaration of function parameters, i.e. the same syntax as variable\ndeclaration but with the keyword let omitted. The following\nsource code presents a definition of a structure Point with two\nfields x and y of type i32. The two fields of this\nstructure are immutable, and have no default values.\nimport std::io\n\nstruct \n| x : i32\n| y : i32 \n -> Point;\n\ndef main () {\n    let point = Point (1, 2); // initialize the value of the structure\n    println (point); // structures are printable\n}\n\n\nResults:\nmain::Point(1, 2)\n\nIt is possible to declare a structure with no fields. Note, however,\nthat such structure has a size of 1 byte in memory.\nContribution this is a limitation observed in gcc, maybe\nthis can be corrected ?\nimport std::io;\n\nstruct -> Unit;\n\ndef main () {\n    let x = Unit ();\n    println (x, \" of size \", sizeof (x));\n}\n\nResults:\nmain::Unit() of size 1\n1.1. Structure construction\nThe construction of a structure is made using the same syntax as a\nfunction call, that is to say using its identifier and a list of\nparameters inside parentheses and separated by comas. Like function\ncalls, structure can have default values assigneted to fields. The\nvalue of these fields can be changed using the named expression\nsyntax, which is constructed with the arrow operator ->. Field\nwithout default value can also be constructed using the named\nexpression syntax. In that case, the order of field construction is\nnot important.\nimport std::io\n\nstruct \n| x : i32 = 0\n| y : i32 \n -> Point;\n\ndef main () {\n    let point = Point (y-> 12, x-> 98);\n    println (point);\n\n    let point2 = Point (1);\n    println (point2);\n}\n\nResults:\nmain::Point(98, 12)\nmain::Point(0, 1)\n\n1.2. Field access\nThe fields of a structure are always public, and accessible using the\ndot binary operator ., where the left operand is a value whose\ntype is a structure, and the right operand is the identifier of the\nfield.\nimport std::io\n\nstruct \n| x : i32\n| y : i32 \n -> Point;\n\ndef main ()\n    throws &AssertError\n{\n    let point = Point (1, 2); \n    assert (point.x == 1 && point.y == 2);\n}\n\n1.3. Structure mutability\nThe mutability of a field of a structure is defined in the structure\ndeclaration. As with any variable declaration, the fields of a\nstructure are by default immutable. By adding the keyword mut\nbefore the identifier of a field, the field becomes mutable. However,\nthe mutability is transitive in Ymir, meaning that a immutable value\nof a struct type, cannot be modified even if its field are marked\nmutable. Consequently, for a field to be really mutable, it must be\nmarked as such, and be a field of a mutable value.\nimport std::io\n\nstruct \n| x : i32\n| mut y : i32\n -> Point;\n\ndef main () {\n    let mut p1 = Point (1, 2);\n    p1.y = 98; // y is mutable\n                  // and p1 is mutable no problem\n\n    p1.x = 34; // x is not mutable, this won't compile\n\n    let p2 = Point (1, 2);\n    p2.y = 98; // p2 is not mutable, this won't compile    \n}\n\nErrors:\nError : left operand of type i32 is immutable\n --> main.yr:(13,4)\n13  ┃     p1.x = 34; // x is not mutable, this won't compile\n    ╋       ^\n\nError : left operand of type i32 is immutable\n --> main.yr:(16,4)\n16  ┃     p2.y = 98; // p2 is not mutable, this won't compile    \n    ╋       ^\n\n\nymir1: fatal error: \ncompilation terminated.\n\n1.4. Memory borrowing of structure\nBy default structure data are located in the value that contains them,\ni.e. in the stack inside a variable, on the heap inside a slice,\netc. They are copied by value, at assignement or function call. This\ncopy is static, and does not require allocation, so it is allowed\nimplicitely. \nimport std::io\n\nstruct \n| mut x : i32\n| mut y : i32\n -> Point;\n\ndef main ()\n    throws &AssertError\n{\n    let p = Point (1, 2);\n    let mut p2 = p; // make a copy of the structure\n    p2.y = 12;\n\n    assert (p.y == 2);\n    assert (p2.y == 12);\n}\n\n\nStructure may contain aliasable values, such as slice. In that case,\nthe copy is no longer allowed implicitely (if the structure is\nmutable, and the field containing the aliasable value is also\nmutable, and the element that will borrow the data is also\nmutable). To resolve the problem, the keywords dcopy, and alias\npresented in Aliases and\nReferences\ncan be used.\nimport std::io\n\nstruct \n| mut y : [mut [mut i32]]\n -> Point;\n\ndef main ()\n    throws &OutOfArray\n{\n    let mut a = Point ([[1, 23, 3], [4, 5, 6]]);\n    let mut b = dcopy a;\n    let mut c = alias a;\n\n    b.y [0][0] = 9; // only change the value of 'b'\n    c.y [0][1] = 2; // change the value of 'a' and 'c'\n\n    println (a);\n    println (b);\n    println (c);\n}\n\n\nResults:\nmain::Point([[1, 2, 3], [4, 5, 6]])\nmain::Point([[9, 23, 3], [4, 5, 6]])\nmain::Point([[1, 2, 3], [4, 5, 6]])\n\nIt is impossible to make a simple copy of a structure with the keyword\ncopy, the mutability level being set once and for all in the\nstructure definition. For example, if a structure S contains a field\nwhose type is mut [mut [i32]], every value of type S have a\nfield of type mut [mut [i32]]. For that reason, by making a\nfirst level copy, the mutability level would not be respected.\n1.5. Packed and Union\nThis part only concerns advanced programming paradigms, and is close\nto the machine level. It is unlikely that you will ever need it,\nunless you try to optimize your code at a binary level.\n1.5.1. Packed\nThe size of a structure is calculated by the compiler, which decides\nthe alignment of the different fields. This is why the size of a\nstructure containing an i64 and a c8 is 16 bytes, not 9\nbytes. There is no guarantee about the size or the order of the fields\nin the generated program. To force the compiler to remove the\noptimized alignment, the special modifier packed can be\nused. \nimport std::io\n\nstruct @packed\n| x : i64\n| c : c8\n -> Packed;\n\nstruct \n| x : i64\n| c : c8\n -> Unpacked;\n\n\ndef main () {\n    println (\"Size of packed : \", sizeof Packed);\n    println (\"Size of unpacked : \", sizeof Unpacked);\n}\n\nResults: \nSize of packed : 9\nSize of unpacked : 16\n1.5.2. Union\nThe union special modifier , on the other hand, informs the\ncompiler that all fields in the structure must share the same memory\nlocation. In the following example, the union modifier is used\non a structure containing two fields. The largest field of the\nstructure is the field y of type f64. The size of this\nfield is 8 bytes, thus the structure has a size of 8 bytes as\nwell. All the fields are aligned at the beginning of the strucures,\nmeaning that the field x, and y shares the same address in\nmemory.\nstruct @union \n| x : i32\n| y : f64\n -> Dummy;\n\n\nThe construction of a structure with union modifier requires\nonly one argument. This argument must be passed as a named\nexpression with the arrow operator ->.\nimport std::io\n\nstruct @union\n| x : i32\n| y : f32\n -> Dummy;\n\ndef main ()\n    throws &AssertError\n{\n    let x = Dummy (y-> 12.0f);\n\n    // Comparison of pointer is only possible on pointer of the same type\n    // Any pointer can be casted into a pointer of &void (the contrary is not possible)\n    // is operator, checks if two pointer are equals\n    assert (cast!(&void) (&(x.x)) is cast!(&void) (&(x.y)));\n\n    // The value of x depends on the value of y\n    assert (x.x == 1094713344);\n    assert (x.y == 12.0f);\n}\n\n1.6. Structure specific attributes\nStructures have type specific attributes, as any types, accessible with\nthe double colon binary operator ::. The table below presents\nthese specific attributes. These attributes are accessible using a\ntype of struct, and not a value. A example, under the table presents\nusage of struct specific attributes.\n\n\n\nName\nMeaning\n\n\n\n\ninit\nThe initial value of the type\n\n\ntypeid\nThe name of the type stored in a value of type [c32]\n\n\ntypeinfo\nA structure of type TypeInfo, containing information about the type\n\n\n\nAll the information about TypeInfo are presented in chapter Dynamic types.\nmod main;\n\nimport std::io;\n\nstruct\n| x : i32\n| y : i32 = 9\n -> Point; \n\ndef main ()\n    throws &AssertError\n{\n    let x = Point::init;\n\n    // the structure is declared in the main module, thus its name is main::Point    \n    assert (Point::typeid == \"main::Point\");\n\n    assert (x.x == i32::init && x.y == 9);\n}\n\n"},"types/enum.html":{"url":"types/enum.html","title":"Enum","keywords":"","body":"1. Enumeration1.1. Value access1.1.1. Value types1.1.2. Value constructions1.1.3. Value context1.2. Enumeration specific attributes1. Enumeration\nEnumerations are user-defined types that enumerates a list of\nvalues. The keyword enum is used to define an enumeration type. The\ntype of the fields can be inferred from the value associated to the\nfields. This type can be forced using the type operator :, after\nthe keyword enum. All the fields of an enumeration shares the\nsame type.\nThe complete grammar of an enumeration is presented in the following\nsource block. As for struct declaration, templates can be used, but\nthis functionnality will only be discussed in the\nTemplates\nchapter.\nenum_type := 'enum' (':' type)? (inner_value)+ '->' identifier (templates)?;\ninner_value := '|' identifier '=' expression\nidentifier := ('_')* [A-z] ([A-z0-9_])*\n\n\nIn the following source code, an example of an enumeration of type\n[c32] is presented. This enumeration lists the names of the\ndays.\nimport std::io\n\nenum\n| MONDAY = \"Mon\"\n| TUESDAY = \"Tue\"\n| WEDNESDAY = \"Wed\"\n| THURSDAY = \"Thu\"\n| FRIDAY = \"Fri\"\n| SATURDAY = \"Sat\"\n| SUNDAY = \"Sun\"\n -> Day;\n\ndef foo (day : Day) {\n    println (day);\n}\n\ndef main () {\n    let d = Day::MONDAY;\n    foo (d);\n}\n\n1.1. Value access\nThe values of an enumeration are accessible using the double colon\nbinary operator ::. In practice, access a value of the\nenumeration will past the content value of the field at the caller\nlocation. The value - result of the expression - is of the type of the\nenumeration (for example the type Day in the example below).\n1.1.1. Value types\nAn example of enumeration access is presented in the following source\ncode. In this example, implicit casting is perform from a Day to\na [c32], when calling the function foo, at line\n23. This implicit cast is allowed.\nimport std::io\n\nenum : [c32] // the type is optional\n| MONDAY = \"Mon\"\n| TUESDAY = \"Tue\"\n| WEDNESDAY = \"Wed\"\n| THURSDAY = \"Thu\"\n| FRIDAY = \"Fri\"\n| SATURDAY = \"Sat\"\n| SUNDAY = \"Sun\"\n -> Day;\n\ndef foo (day : [c32]) {\n    println (day);\n}\n\ndef bar (day : Day) {\n    println (day);\n}\n\ndef main () {\n    // the internal type Day is of type [c32], so it can be implicitely casted into [c32]\n    foo (Day::MONDAY);\n\n    bar (Day::MONDAY);\n\n    // However, it is impossible to transform a [c32] into a Day implicitely\n    bar (\"Mon\")\n}\n\n\nHowever, the contrary is not allowed, because the source code tries to\ncast a [c32] into a Day at line 28, the compiler\nreturns an error. The error is presented in the code block below. Such\ncast is forbidden, to avoid enumeration value to contain a value that\nis actually not defined in the list of the field of the\nenumeration. For example, if this was accepted, the string\n\"NotADay\" would be castable into a Day (note: the value\nof the string being possibly unknown at compilation time).\nError : the call operator is not defined for main::bar and {mut [c32]}\n --> main.yr:(28,9)\n28  ┃     bar (\"Mon\")\n    ╋         ^     ^\n    ┃ Note : candidate bar --> main.yr:(17,5) : main::bar (day : main::Day([c32]))-> void\n    ┃     ┃ Error : incompatible types main::Day and mut [c32]\n    ┃     ┃  --> main.yr:(28,10)\n    ┃     ┃ 28  ┃     bar (\"Mon\")\n    ┃     ┃     ╋          ^\n    ┃     ┃ Note : for parameter day --> main.yr:(17,10) of main::bar (day : main::Day([c32]))-> void\n    ┃     ┗━━━━━━ \n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n\n1.1.2. Value constructions\nEnumeration values can be more complex than literals. Any kind of\nvalue can be used, for example call functions, condition block, scope\nguards, etc. In the following example, an enumeration creating\nstructure from function call is presented. The type of the enumeration\nis Ipv4Addr.\nimport std::io\n\nstruct\n| a : i32\n| b : i32\n| c : i32\n| d : i32\n -> Ipv4Addr;\n\nenum\n| LOCALHOST = localhost ()\n| BROADCAST = broadcast ()\n -> KnownAddr;\n\ndef localhost ()-> Ipv4Addr {\n    println (\"Call localhost\");\n    Ipv4Addr (127, 0, 0, 1)\n}\n\ndef broadcast ()-> Ipv4Addr {\n    println (\"Call broadcast\");    \n    Ipv4Addr (255, 255, 255, 255)\n}\n\ndef main ()\n    throws &AssertError\n{\n    let addr = KnownAddr::LOCALHOST; // will call localhost here\n\n    assert (KnownAddr::LOCALHOST.a == 127); // a second time here\n    assert (KnownAddr::BROADCAST.d == 255); // call broadcast here\n    assert (addr.a == 127);\n}\n\n\nThe enumeration value of a field is constructed at each access, this\nmeans for example that when enumeration values are constructed using\nfunction call, the function is called each time the enumeration field\nis accessed. Thus the result of the execution of the compiled source\ncode above is the following:\nCall localhost\nCall localhost\nCall broadcast\n\n1.1.3. Value context\nIf the value of the enumeration seems to be passed at the caller\nlocation, they don't share the context of the caller. In other words,\nthe fields of an enumeration have access to the symbol accessible from\nthe enumeration context, and not from the caller context. An example,\nof enumeration trying to access symbols is presented in the source\ncode bellow.\nimport std::io\n\nstatic __GLOB__ = true;\n\nenum \n| FOO = (if (x) { 42 } else { 11 })\n| BAR = (if (__GLOB__) { 42 } else { 11 })\n -> ErrorEnum;\n\ndef main () {\n    let x = false;\n\n    println (ErrorEnum::FOO); \n}\n\n \nFrom the above example, the compiler returns an error. In this error,\nthe compiler informs that the variable x is not defined from the\ncontext of the enumeration. Even if the variable is declared inside\nthe main function, it is not accessible from the enumeration\ncontext. The global variable __GLOB__ is accessible from the\nenumeration context, and thus accessing it is not an issue.\nNote : \n --> main.yr:(6,3)\n 6  ┃ | FOO = (if (x) { 42 } else { 11 })\n    ╋   ^^^\n    ┃ Error : undefined symbol x\n    ┃  --> main.yr:(6,14)\n    ┃  6  ┃ | FOO = (if (x) { 42 } else { 11 })\n    ┃     ╋              ^\n    ┗━━━━━┻━ \n\nNote : \n --> main.yr:(13,11)\n13  ┃     println (ErrorEnum::FOO); \n    ╋              ^^^^^^^^^\n    ┃ Error : the type main::ErrorEnum is not complete due to previous errors\n    ┃  --> main.yr:(8,5)\n    ┃  8  ┃  -> ErrorEnum;\n    ┃     ╋     ^^^^^^^^^\n    ┃     ┃ Note : \n    ┃     ┃  --> main.yr:(13,11)\n    ┃     ┃ 13  ┃     println (ErrorEnum::FOO); \n    ┃     ┃     ╋              ^^^^^^^^^\n    ┃     ┗━━━━━┻━ \n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n1.2. Enumeration specific attributes\nAs for any type, enumeration have specific type attributes. The table\nbelow lists the enumeration type specific attributes.\n\n\n\nName\nMeaning\n\n\n\n\nmembers\nA slice containing all the values of the enumeration\n\n\nmember_names\nA slice of [c32], containing all the names of the fields of the enumeration (same order than members)\n\n\ntypeid\nThe type identifier of the enumeration type in a [c32] typed value\n\n\ntypeinfo\nThe typeinfo of the inner type of the enumeration (cf. Dynamic types)\n\n\ninner\nThe inner type of the enumeration\n\n\n\n\nOne may note that the operator to access specific attributes and field\nis the same (double colon binary operator ::), and therefore\nthat if an enumeration have a field named as a specific attributes\nthere is a conflict. To avoid conflict, the priority is given to the\nfields of the enumeration, and specific attributes can be accessed\nusing their identifier surrounded by _ tokens. For example,\naccessing the members specific attributes can be made using the\nidentifier __members__. An example of the principle is presented in\nthe following source code. The specific attribute surrounding is\napplicable to all types, but can be really usefull here.\nmod main;\n\nenum\n| typeid       = 1\n| typeinfo     = 2\n| members      = 3\n| member_names = 4\n| inner        = 5\n -> AnnoyingEnum;\n\ndef main ()\n    throws &AssertError\n{\n    assert (AnnoyingEnum::typeid == 1);\n    assert (AnnoyingEnum::__typeid == AnnoyingEnum::__typeid__);\n    assert (AnnoyingEnum::__typeid == \"main::AnnoyingEnum\");    \n}\n\n"},"types/aka.html":{"url":"types/aka.html","title":"Aka","keywords":"","body":"1. AKA1.1. Aka as a value1.2. Aka as a type1.3. Aka as symbols1. AKA\nAn aka create a symbol that is an alias for another\nexpression. Everything can be used to create an alias, not necessarily\na value, or a type. The keyword aka was choosed to avoid\nconfusion with alias, that has a completely different meaning in\nYmir.\nThe grammar of akas is presented in the following code block.\naka_decl := 'aka' Identifier (templates)? = expression (';')?\n\n1.1. Aka as a value\nAka can be used as a single value enumeration. As for enumeration\nvalues, akas are constructed at each access, and are for that reason\ncloser to enumeration, than to global variable. In addition, akas are\nonly defined during compilation time, and are not defined inside the\nexecutable, library, etc. generated by the compiler, contrary to\nglobal variables.\nAn example of an aka is presented in the source code below. In that\nexample, the aka refers to the call of the foo function, that is\ncalled each time the aka is used.\nimport std::io\n\naka CallFoo = foo ()\n\ndef foo () -> i32 {\n    println (\"Foo\");\n    42\n}\n\ndef main () {\n    println (CallFoo);\n    println (CallFoo);\n}\n\n\nResults:\nFoo\n42\nFoo\n42\n\nBecause akas are not global variable, they don't have an address,\nand are always immutable. They don't really have a type, and simply\nstick their content, at the location of the caller. However, like\nenumeration values, their context is the one of their declaration, not\nthe context of the caller. For that reason by compiling the following\nexample, the compiler returns an error.\nimport std::io\n\naka FOO = x // x is not defined in this context\n\ndef main () {\n    let x = 12; // this x is local, and not accessible from FOO\n    println (FOO); // does not work\n}\n\n\nError: \nError : undefined type x\n --> main.yr:(3,11)\n 3  ┃ aka FOO = x\n    ╋           ^\n\n1.2. Aka as a type\nAkas do not always referes to values, but can also refer to\ntype. The symbol access rules are the same as value akas.\nimport std::io\n\naka MyTuple = (i32, i32)\n\ndef foo (a : MyTuple) {\n    println (\"x: \", a.0, \", y: \", a.1);\n}\n\ndef main () {\n    let x = (1, 2);\n    foo (x);\n}\n\n\nResults: \nx: 1, y: 2\n\nAkas type are not real type, meaning that the definition of foo in the previous example, is strictly equivalent to \ndef foo (a : (i32, i32)) {\n    println (\"x: \", a.0, \", y: \", a.1);\n}\n\n1.3. Aka as symbols\nAkas are not confined to type, and values. They can create symbols\nto refer to other symbols. For example modules, functions, structures,\netc. \nimport std::io\n\naka IO = std::io\n\ndef println (a : i32) {\n    IO::println (\"My println : \", a);\n}\n\ndef main () {\n    IO::println (12);\n    println (12);\n}\n\n \nResults: \n12\nMy println : 12\n\nContribution : enable aka on import, with the syntax : import\npath aka name. This is already possible, as we can see in the\nprevious example, but needs two lines.\n"},"objects/":{"url":"objects/","title":"Objects","keywords":"","body":"1. Objects1. Objects\nYmir is a object oriented language, with polymorph types. In this\nchapter, we assume that you are familiar with object oriented\nprogramming paradigm (if not, you will benefit from reading\ninformation on that paradigm first cf.  object oriented\nprogramming.).\nIn Ymir, object instances are dynamically allocated on the\nheap. Indeed, because object types are polymorph, their size cannot be\nknown at compile time, and consequently cannot be placed in the\nstack. To illustrate this point, the following figure presents the UML\ndefinition of a class A, and an heir class B. The class\nA contains a field x, of type i32, thus of size\n4 bytes. The class B, contains another field y of size\n4, leading to a class B of size 8.\n\n\n\nBecause we want to following source code to be accepted (basic\nprinciple of polymorphism), the size of A, cannot be statically\nset to 4 bytes, (nor to 8, the class B can come from a\ntotally different part of the source code - from a library for example\n-, and unknown when using the type A, without talking of the\nhuge loss of memory if only A values are used).\ndef foo (a : &(A)) // ...    \n\ndef main () {\n    let b : &B = // ...\n    foo (b); // calling foo with a B, heir of A\n}\n\n\nFor that reason, object instances are aliasable types, and only\ncontains a pointer to the values of the class. You may have notice the\nsyntax &(A), in the above example. If this syntax is similar to\npointer, this is because objects are basically pointers. However,\nunlike basic pointers, these cannot be used in pointer arithmetics,\ncannot be null, and does not need to be dereferenced to access\nthe value. In other words, these are reference, more than pointers.\nYes, unlike other object oriented language such as java or D,\nobject instances cannot be null. This is a really important part\nof the object system in Ymir guaranteeing that every objects are\npointing to a valid value, and that value is correctly initialized\n(constructor was called).\nWe will see in the coming chapters, that removing the possibility of\nnull objects does not remove any capacity on the language, while\nadding strong safety, the number one error of java programs\nbeing NullPointerException (cf. Which Java exceptions are the\nmost\nfrequent?,\nThe Top 10 Exception Types in Production Java Applications – Based on\n1B\nEvents).\n"},"objects/class.html":{"url":"objects/class.html","title":"Class","keywords":"","body":"1. Class1.1. Fields1.1.1. Field privacy1.2. Constructor1.2.1. Field construction1.2.2. Create an object instance1.2.3. Named constructor1.2.4. Construction redirection1.2.5. Constructor privacy1.3. Destructors1. Class\nAn object is an instance of a class. A class is declared using the\nkeyword class, followed by the identifier of the class.  The\ncomplete grammar of a class definition is presented in the following\ncode block.\nclass_decl := simple_class_decl | template_class_decl\n\nsimple_class_decl := 'class' (modifiers)? Identifier ('over' type)? '{' class_content '}'\ntemplate_class_decl := 'class' ('if' expression)? (modifiers)? Identifier templates ('over' type)? '{' class_content '}'\nclass_content :=   field\n                 | method\n                 | constructor\n                 | impl\n                 | destructor\nmodifiers := '@' ('{' modifier (',' modifier)* '}') | (modifier)\nmodifier := 'final' | 'abstract'\n\n\nAs many symbols, the class can be a template symbols. Templates are\nnot presented in this chapter, and are left for a future chapter\n(cf.\nTemplates).\n1.1. Fields\nA class can contain fields. A field is declared as a variable, using\nthe keyword let. A field can have a default value, in that case the\ntype is optional, however if the value is not set, the field must have\na type. Multiple fields can be declared within the same let,\nwith coma separating them.\nclass Point4D {\n    let _x : i32;\n    let _y = 0;\n    let _z : i32, _w = 0;\n}\n\n1.1.1. Field privacy\nAll fields are protected by default, i.e. only the class defining them\nand its heirs have access to them. The keyword pub can be used\nto make the fields public, and accessible from outside the class\ndefinition. The keyword prv, on the other hand, can be use to\nmake the field totally hidden from outside the class. Unlike\nprot, prv fields are not accessible by the heirs of a\nclass.\nA good practice is to enclose the privacy of the fields in their name\ndefinition. For example, a public field is named x, without any\n_ token. A protected fields always starts with a single\nunderscore, _y, and private fields are surrounded by two\nunderscores before and after the identifier. This is just a convention,\nthe name has no impact on the privacy.\nclass A {\n    pub  let x = 12;\n    prot let _y : i32;\n    prv  let __z__ : i32;\n}\n\n1.2. Constructor\nTo be instancible, a class must declare at least one constructor. The\nconstructor is always named self, and takes parameters to build the\nobject. The object is accessible within the constructor body through\nthe variable self.\n1.2.1. Field construction\nThe constructor must set the value to all the fields of the\nclass, with the keyword with. Fields with default values are not\nnecessarily set by this with statement, but can be\nredefined. The with statement has the effect of the initial value of\nthe fields, meaning that the value of immutable fields is set by them.\nclass Point {\n    let _x : i32;\n    let _y = 0;\n\n    /**\n     * _y is already initialized\n     * it is not mandatory to add it in the with initialization\n     */\n    pub self () with _x = 12 {}\n\n    /**\n     * But it can be redefined\n     */\n    pub self (x : i32, y : i32) with _x = x, _y = y {}\n}\n\n \nField value is set only once. For example, if a class has a field\n_x with a default value, calling a function foo. And the\nconstructor use the with statement to set the value of the field\nfrom the return value of the bar function, the function\nfoo is never called.\ndef foo () -> i32 {\n    println (\"Foo\");\n    42\n}\n\ndef bar () -> i32 {\n    println (\"bar\")\n    33\n}\n\nclass A {\n    let _x = foo ();\n\n    pub self () with _x = bar () {} // foo is not called, bar is call instead\n}\n\n\nThe point behind with field construction, is to ensure that all\nfields have a value, when entering the constructor body. This way,\nwhen instruction are made inside the constructor body, such as\nprinting the value of the fields, their value is already set, and the\nobject instance is already valid.\nclass A {\n    let _x : i32;\n\n    pub self () with _x = 42 {\n        println (self._x); // access the field _x, of the current object instance\n    } \n}\n\n1.2.2. Create an object instance\nClass are used to create object instance, by calling a\nconstructor. This call is made using the double colon binary operator\n::, with the left operand being the name of the class to\ninstantiate, and the right operand the keyword new. After the\nkeyword new a list of argument is presented, this list is the\nlist of argument to pass to the constructor. The constructor with the\nbest affinity is choosed and called on a allocated instance of the\nclass. Constructor affinity is computed as function affinity (based on\ntype mutability, and type compatibility – cf. Aliases and\nReferences).\nimport std::io\n\nclass A {\n\n    pub self (x : i32) {\n        println (\"Int : \", x);\n    }\n\n    pub self (x : f32) {\n        println (\"Float : \", x);\n    }\n\n}\n\ndef main () {\n    let _ = A::new (12);\n    let _ = A::new (12.f);\n}\n\n\nResults\nInt : 12\nFloat : 12.000000\n1.2.3. Named constructor\nA name can be added to the constructor. This name is an Identifier,\nand follows the keyword self. A named constructor can be called\nby its name when constructing a class. This way two constructor can\nshare the same prototype, and be called from their name. A named\nconstructor is not ignored when constructing a class with the\nnew keyword, its named is just not considered.\nIn the following example, a class A contains two constructors,\nfoo and bar, these constructors have one parameter of type\ni32. \nimport std::io\n\nclass A {\n    let _x : i32;\n\n    pub self foo (x : i32) with _x = x {\n        println (\"Foo \", self._x);\n    }\n\n    pub self bar (x : i32) with _x = x {\n        println (\"Bar \", self._x);\n    }\n}\n\ndef main () {\n    let _ = A::foo (12);\n    let _ = A::bar (12); \n\n    let _ = A::new (12);\n}\n\n\nThe last object construction at line 19 is not possible, the call\nworking with both foo and bar. The other constructions\nwork fine, that is why the compiler returns only the following error.\nError : {self foo (x : i32)-> mut &(mut main::A), self bar (x : i32)-> mut &(mut main::A)} x 2 called with {i32} work with both\n --> main.yr:(19,17)\n19  ┃     let _ = A::new (12);\n    ╋                    ^\n    ┃ Note : candidate self --> main.yr:(6,6) : self foo (x : i32)-> mut &(mut main::A)\n    ┃ Note : candidate self --> main.yr:(10,6) : self bar (x : i32)-> mut &(mut main::A)\n    ┗━━━━━━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n1.2.4. Construction redirection\nTo avoid redondent code, a constructor can call another constructor in\nthe with statement. This call redirection is performed by using\nthe self keyword. In that case, because the fields are already\nconstructed by the called constructor, they must not be reconstructed.\nimport std::io;\n\nclass A {\n    let _x : i32;\n\n    pub self () with self (12) {\n        println (\"Scd \", self._x);\n    }\n\n    pub self (x : i32) with _x = x {\n        println (\"Fst \", self._x);\n    }\n\n}\n\n\ndef main () {\n    let _ = A::new (); // construct an instance of the class A\n                       // from the constructor at line 6\n}\n\n\nResults:\nFst 12\nScd 12\n\nContribution: Redirection to named constructor does not work for the moment. This is not complicated, but has to be done.\n1.2.5. Constructor privacy\nAs fields, the privacy of the constructor is protected by default. The\nkeyword prv and pub can be used to change it.\n1.3. Destructors\nObject instances are destroyed by the garbage collector. Meaning that\nthere is no way to determine when or even if an object instance will\nbe destroyed. But lets say that such operation effectively happen\n(which is quite probable, let's no lie either), then a last function\ncan be called just before the object instance is destroyed and\nirrecoverable. The destructor is called __dtor, and takes the\nparameter mut self. There is only one destructor per class, this\ndestructor is optional and always public.\nimport std::io;\n\nstatic mut I = 0;\n\nclass A {\n    let _x : i32;\n    pub self () with _x = I {\n        I += 1;\n    }\n\n    __dtor (mut self) {\n        println (\"Destroying me ! \", self._x); \n    }\n\n}\n\ndef foo () {\n    let _ = A::new (); \n} // the object instance is irrecoverable at the end of the function\n\ndef main () {\n    loop {\n        foo ();\n    }\n}\n\n\nResults:\nDestroying me ! 765\nDestroying me ! 1022\nDestroying me ! 764\nDestroying me ! 1023\nDestroying me ! 763\nDestroying me ! 1024\nDestroying me ! 762\nDestroying me ! 1025\nDestroying me ! 761\nDestroying me ! 1026\n...\n\nOne can note from the result, that the order of destruction is totally\nunpredictible. Rely on class destructor is not the best practice. We\nwill see in a future chapter disposable objects, that are destroyed in\na more certain way. Destructors are a last resort to free unmanaged\nmemory, if this was forgotten (for example, file handles, network\nsocket, etc. if not manually disposed).\n"},"objects/mutability.html":{"url":"objects/mutability.html","title":"Mutability","keywords":"","body":"1. Mutability1.1. Object mutability1.2. Field mutability1. Mutability\nObjects are aliasable types. The data being allocated on the heap, and\nnot copied - for efficiency reasons - on affectations (cf. Aliases\nand\nReferences).\n1.1. Object mutability\nThe type of an object instance is a reference to a class type. This\nreference can mutable, and the data pointed data as well. In the\nfollowing example, a variable a containing an object instance of\nthe class A is created. This variable contains a mutable\nreference, but the data borrowed by the reference are not mutable.\nclass A {\n\n    pub let mut x : i32;\n\n    pub self (x : i32) with x = x {}\n\n}\n\n\ndef main () {\n    let mut a : &(A)= A::new (12);\n\n    a = A::new (42); // ok the reference if mutable\n\n    a.x = 33; // the borrowed data are not mutable\n}\n\n \nBecause the data borrowed by a are not mutable, the\ncompiler returns an error.\nError : left operand of type i32 is immutable\n --> main.yr:(15,3)\n15  ┃     a.x = 33; // the borrowed data are not mutable\n    ╋      ^\n\n\nymir1: fatal error: \ncompilation terminated.\n\n\nThis error can be avoided, by making the borrowed data mutable as\nwell. Either by using the dmut modifier, or by writing mut\n&(mut A).\ndef main () {\n    let dmut a = A::new (12);\n    a.x = 42; // no problem a is mutable, and its borrowed data as well.\n    println (a.x); \n}\n\nBecause classes are aliasable types, the keyword alias has to be\nused when trying to make a mutable affectation. Information about\naliasable types is presented in chapter\nAliases,\nand is not rediscussed here.\ndef main () \n    throws &AssertError\n{\n    let dmut a = A::new (12);\n    let dmut b = alias a;\n    b.x = 42;\n\n    assert (a.x == 42);\n}\n\n1.2. Field mutability\nField mutability is set once and for all, in the definition of the\nclass. The information about field mutability presented in the chapter\nabout structure is applicable to classes. \nHowever, unlike structures, classes are not copiable by default, but\nhave to implement a specific traits. Trait and implementation is\npresented in a future chapter, and copy is discussed in there\nchapter. (cf.\nTraits).\nclass A {\n\n    pub let mut x : i32;\n    pub let y : i32;\n\n    pub self (x : i32, y : i32) with x = x, y = y {}\n\n}\n\n\ndef main () {\n    let dmut a = A::new (0, 1);\n    a.x = 43;\n    a.y = 89;\n}\n\n\nErrors: \nError : left operand of type i32 is immutable\n --> main.yr:(14,3)\n14  ┃     a.y = 89;\n    ╋      ^\n\n\nymir1: fatal error: \ncompilation terminated.\n\n"},"objects/methods.html":{"url":"objects/methods.html","title":"Methods","keywords":"","body":"1. Methods1.1. Privacy1.2. Method mutability1.3. Method mutability override1. Methods\nMethods are functions associated to object instances. Methods are\ndescribed inside a class definition. Information about function\npresented in chapter\nFunctions\nare applicable to methods. The grammar of a method is presented in the\nfollowing code block.\nmethod := simple_method | template_method\n\nsimple_method := 'def' Identifier method_params ('->' type)? expression\ntemplate_method := 'def' ('if' expression)? Identifier templates  ('->' type)? expression\n\nmethod_params := '(' ('mut')? 'self' (',' param_decl)* ')'\n\n\nMethods are accessible using an object instance, of the dot binary\noperator .. Once accessed, a method can be called using a list\nof arguments separated by comas inside parentheses. The first\nparameter of a method is the object instance, and is the left operand\nof the dot operator, so it must not be repeated inside the\nparentheses.\nimport std::io\n\nclass A {\n    let _a : i32;\n\n    pub self (a : i32) with _a = a {}\n\n\n    pub def foo (self, x : i32) -> i32 {\n        println (\"Foo \", self._a);\n        x + self._a \n    }\n}\n\ndef main () {\n    let a = A::new (29);\n    println (a.foo (13));\n}\n\n\nResults:\nFoo 29\n42\n\nThe access to the fields, and to the methods of the object instance\ninside the body of a method is made using the first parameter of the\nmethod, the variable self. Unlike some object oriented language,\nsuch as Java, C++, Scala, D, etc. self is never\nimplicit, e.g. accessing to the field _a in the above example,\ncannot be made by just writing _a, but must be accessed by\nwriting self._a. This is a conceptual choice, whose purpose is\nto improve code readability and sharing, by avoiding useless and\npreventable search for the source of the variables.\n1.1. Privacy\nMethods are protected by default. Meaning that only the class that\nhave defined them, and its heir class have acces to them. The keyword\npub and prv can be used to change the privacy of a\nmethod. A public method is accessible everywhere, using an object\ninstance, and private methods are only accessible by the class that\nhave defined them. Unlike protected methods, private methods are not\naccessible by heir classes. Privacy of methods is the same as privacy\nof fields.\nimport std::io\n\nclass A {\n\n    pub self () {}\n\n    pub def foo (self) {\n        println (\"Foo\");\n        self.bar ();\n    }\n\n    prv def bar (self) {\n        println (\"bar\");\n    }\n}\n\n\ndef main () {\n    let a = A::new ();\n    a.foo ();\n    a.bar ();\n}\n\n\nBecause the method bar is private in the context of the\nmain function, the compiler returns the following error. One\ncan note, that the compiler tried to rewrite the expression into a\nuniform call syntax (i.e. bar (a)), but failed, because the\nfunction bar does not exists.\nError : undefined field bar for element &(main::A)\n --> main.yr:(21,3)\n21  ┃     a.bar ();\n    ╋      ^^^^\n    ┃ Note : bar --> main.yr:(12,10) : (const self) => main::A::bar ()-> void is private within this context\n    ┃ Note : when using uniform function call syntax\n    ┃ Error : undefined symbol bar\n    ┃  --> main.yr:(21,4)\n    ┃ 21  ┃     a.bar ();\n    ┃     ╋       ^^^\n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n1.2. Method mutability\nThe mutability of the object instance must be defined in the prototype\nof the method. By default the object instance refered to by self\nis immutable, meaning that the instance cannot be modified.\nclass A {\n\n    let mut _x : i32;\n\n    pub self (x : i32) with _x = x {}\n\n    pub def setX (self, x : i32) {\n        self._x = x;\n    }    \n\n}\n\n\nError: \nError : when validating main::A\n --> main.yr:(1,7)\n 1  ┃ class A {\n    ╋       ^\n    ┃ Error : left operand of type i32 is immutable\n    ┃  --> main.yr:(8,7)\n    ┃  8  ┃         self._x = x;\n    ┃     ╋             ^\n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n By using the keyword mut, the method can be applicable to\nmutable instance. In that case the instance refered to by self\nis mutable, and its mutable fields can be modified. Such methods can\nbe accessed only using mutable object instance - not only mutable\nreference, the borrowed data located on the heap must be mutable. To\ncall such method, aliases is necessary and cannot be implicit.\nclass A {\n    let mut _x : i32;\n\n    pub self (x : i32) with _x = x {}\n\n    pub def setX (mut self, x : i32) {\n        self._x = x;\n    }    \n\n}\n\ndef main () {\n    let a = A::new (12);\n    a.setX (42); \n\n    let dmut b = A::new (12);\n    b.setX (42);\n\n    (alias b).setX (42);    \n}\n\n \nThe first call at line 14 is not possible, a having only\nread access to the object instance it contains. The second error, the\ncall at line 17, is due to the fact that even b have write\npermission to the object instance it contains, it cannot be passed to\nthe method implicitely, and have to be aliased, in order to certify\nexplicitely that the user is aware that the value of the object\ncontained in b will be modified by calling the method. The\nerrors returned by the compiler are the following.\nError : the call operator is not defined for (a).setX and {i32}\n --> main.yr:(14,9)\n14  ┃     a.setX (42); \n    ╋            ^  ^\n    ┃ Error : discard the constant qualifier is prohibited, left operand mutability level is 2 but must be at most 1\n    ┃  --> main.yr:(14,9)\n    ┃ 14  ┃     a.setX (42); \n    ┃     ╋            ^\n    ┃     ┃ Note : implicit alias of type &(main::A) is not allowed, it will implicitly discard constant qualifier\n    ┃     ┃  --> main.yr:(14,2)\n    ┃     ┃ 14  ┃     a.setX (42); \n    ┃     ┃     ╋     ^\n    ┃     ┗━━━━━┻━ \n    ┗━━━━━┻━ \n\nError : the call operator is not defined for (b).setX and {i32}\n --> main.yr:(17,9)\n17  ┃     b.setX (42);\n    ╋            ^  ^\n    ┃ Error : discard the constant qualifier is prohibited, left operand mutability level is 2 but must be at most 1\n    ┃  --> main.yr:(17,9)\n    ┃ 17  ┃     b.setX (42);\n    ┃     ╋            ^\n    ┃     ┃ Note : implicit alias of type mut &(mut main::A) is not allowed, it will implicitly discard constant qualifier\n    ┃     ┃  --> main.yr:(17,2)\n    ┃     ┃ 17  ┃     b.setX (42);\n    ┃     ┃     ╋     ^\n    ┃     ┗━━━━━┻━ \n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n\nWe have seen in the chapter about function, and more specifically\nabout uniform call syntax that the operator :. can be used to\npass a aliased value as the first parameter of a function. This\noperator is also applicable for method calls, and is to be prefered to\nthe syntax (alias obj).method which is a bit verbose.\ndef main () {\n    let dmut a = A::new (12);\n\n    a:.setX (42); // same as (alias a).setX (42)\n}\n\n\nMethod mutability is also applicable inside the body of a method. In\nthe example below, the method foo is mutable, and call another\nmutable method bar, it also calls a immutable method\nbaz. Implicit aliasing is mandatory when calling the method\nbar, but not when calling the method baz.\nclass A {\n    let _x : i32;\n    pub self (x : i32) with _x = x {}\n\n    pub def foo (mut self, x : i32) {\n        self:.bar (x); // :. is mandatory\n        self.baz (x);\n    }\n\n    pub def bar (mut self, x : i32) {\n        self._x = x;\n    }\n\n    pub def baz (self) {\n        println (\"X : \", self._x);\n    }\n}\n\n\nContribution: Calling a immutable method with explicit alias is\npossible. Maybe that is not a good idea, and will lead to the use of\nthe operator :. all the time, and misleading read of the code.\n1.3. Method mutability override\nIt is possible to define two methods with the same prototype, with the\nonly exception that one of them is mutable and not the other. In that\ncase the method with the best affinity is choosed when called. That is\nto say, the mutable method is called on explicitly aliased object\ninstances, and the immutable method the rest of the time.\nimport std::io\n\nclass A {\n\n    pub self () {}\n\n    pub def foo (mut self) {\n        println (\"Mutable\");\n    }\n\n    pub def foo (self) {\n        println (\"Const\");\n    }       \n}\n\ndef main () {\n    let dmut a = A::new ();\n    a.foo ();\n    a:.foo ();\n}\n\n\nResults:\nConst\nMutable\n"},"objects/inheritance.html":{"url":"objects/inheritance.html","title":"Inheritance","keywords":"","body":"1. Inheritance1.1. Fields1.2. Parent class construction1.3. Parent class destruction1.4. Method overriding1.4.1. Override mutable method1.4.2. Final methods1.5. Abstract class1.5.1. Method with no body1.6. Final class1.7. Casting base class objects to heir class1. Inheritance\nOne of the most important point of the object oriented programming\nparadigm is the possibility for a class to be derived from a base\nclass. This capability enables type polymorphism. In Ymir the\nkeyword over is used for class derivation, and overriding. A class\ncan have only one ancestor. We will see in the chapter about traits,\nthat multiple inheritance can be in some way achieved in another way.\nclass Shape {\n}\n\n/**\n * A circle is a shape\n */\nclass Circle over Shape {\n    let _center : i32 = 0;\n    let _radius : i32 = 1;\n}\n\n1.1. Fields\nThe fields of an ancestor cannot be redeclared by an heir class. Even\nif they are hidden to the heir class (private fields). This choice was\nmade to avoid miscomprehension, as two different variables would be\nnamed the same way.\nimport std::io;\n\nclass Shape {\n    let _x : i32 = 0;\n\n    pub self () {}\n}\n\nclass Circle over Shape {\n    let _x : i32;\n\n    pub self () {\n        println (self._x);\n    }    \n}\n\n\nError:\nError : when validating main::Circle\n --> main.yr:(9,7)\n 9  ┃ class Circle over Shape {\n    ╋       ^^^^^^\n    ┃ Error : declaration of _x shadows another declaration\n    ┃  --> main.yr:(4,13)\n    ┃  4  ┃     prv let _x : i32 = 0;\n    ┃     ╋             ^^\n    ┃     ┃ Note : \n    ┃     ┃  --> main.yr:(10,9)\n    ┃     ┃ 10  ┃     let _x : i32;\n    ┃     ┃     ╋         ^^\n    ┃     ┗━━━━━┻━ \n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n1.2. Parent class construction\nAll object instances must be constructed. This means that when a class\noverride a base class, the constructor of the base class must be\ncalled inside the constructor of the heir class. This call can be made\nimplicitly if the constructor of the parent class takes no\narguments. However, if no constructor in the parent class takes no\narguments, then the call must be made explicitly. This explicit call\nis made inside the with statement.\nclass Shape {    \n    let _x = 0;\n    pub self () {}\n\n    pub self (x : i32) with _x = x {}\n}\n\nclass Circle over Shape {\n    let _radius : f32;\n\n    // Same as : with super ()\n    pub self () with _radius = 1.0f {} \n\n    // call the second parent constructor, at line 5\n    pub self (x : i32) with super (x), _radius = 1.0f {} \n}\n\n\nThe call of the parent constructor is the first thing performed inside\na constructor. Meaning, that the construction of the fields of the\nheir class are made afterward. To illustrate this point, the following\nexample presents a base class Foo with a constructor printing\nfoo, and a heir class Bar, calling the function bar*\n(printing the value bar) to initialize its field _x.\nimport std::io;\n\ndef bar () -> i32 {\n    println( \"Bar\");\n    42\n}\n\nclass Foo {    \n    pub self () {\n        println (\"Foo\");\n    }\n}\n\nclass Bar over Foo {\n    let _x : i32;\n\n    pub self () with _x = bar () {}\n}\n\ndef main () {\n    let _ = Bar::new ();\n}\n\n\nResults: \nFoo\nBar\n \nHowever, because constructor redirection does not call parent\nconstructor, and let that work to the called constructor, to which\nthey are redirected, the following program has a different\nbehavior. The arguments of the redirection are computed first, then\nthe call to the parent constructor, and finally the construction of\nthe fields of the heir class.\nimport std::io;\n\ndef bar () -> i32 {\n    println( \"Bar\");\n    29\n}\n\ndef baz () -> i32 {\n    println( \"Baz\");\n    13\n}\n\nclass Foo {\n    pub self () {\n        println (\"Foo\");\n    }\n}\n\nclass Bar over Foo {\n    let _x : i32;\n\n    /**\n     * Call parent constructor at line 14, and then bar\n     */\n    pub self (x : i32) with _x = bar () + x {}\n\n    /**\n     * Call baz first, then self at line 25\n     */\n    pub self () with self (baz ()) {} \n}\n\ndef main () {\n    let _ = Bar::new ();\n}\n\n\nResults:\nBaz\nFoo\nBar\n\n The construction order is perfectly predictible, but should not\nhave an impact on the program behavior. So it is probably not a good\nidea to rely on it.\n1.3. Parent class destruction\nIn contrast to construction, the parent destructor is the last\noperation of the destruction of a heir class. The parent destructor is\nalways called, there is no way to avoid it (aside exiting the\nprogram). \nimport std::io;\n\nclass Foo {    \n    pub self () {}\n    __dtor (mut self) {\n        println (\"Destroying Foo\");\n        println (\"====\");\n    }\n}\n\nclass Bar over Foo {\n    pub self () {}\n\n    __dtor (mut self) {\n        println (\"====\");\n        println (\"Destroying Bar\");\n        return {} // desperately trying to avoid parent destruction\n    }\n}\n\ndef foo () {\n    let _ = Bar::new ();\n}\n\ndef main () {\n    loop {\n        foo ();\n    }\n}\n\n\nResults:\n====\nDestroying Bar\nDestroying Foo\n====\n====\nDestroying Bar\nDestroying Foo\n====\n====\nDestroying Bar\nDestroying Foo\n====\n...\n1.4. Method overriding\nThe keyword over is used to override a method. Methods cannot be\n implicitly overriden by omitting the over keyword and using the\n def keyword. The signature of the method must be strictly identical\n to the one of the ancestor method, including privacy, and argument\n mutability. Of course, private methods cannot be overriden, because\n hidden to heir classes, but protected and public methods can be\n overriden. In the following example, a class Shape define the\n method area. This method is public, and then can be overriden\n by heir classes. The class Circle and Rectangle overrides\n the methods.\nimport std::io\n\nclass Shape {\n    pub self () {}\n\n    pub def area (self) -> f64 \n    0.0\n}\n\nclass Circle over Shape {\n    let _radius : f64;\n    pub self (radius : f64) with _radius = radius {}\n\n    pub over area (self) -> f64 {\n        import std::math;\n        math::PI * (self._radius * self._radius)\n    }\n}\n\nclass Square over Shape {\n    let _side : f64;\n    pub self (side : f64) with _side = side {}\n\n    pub over area (self) -> f64 {\n        self._side * self._side\n    }\n\n}\n\ndef main () {\n    let mut s : &Shape = Circle::new (12.0);\n    println (s.area ());\n\n    s = Square::new (3.0);\n    println (s.area ());    \n}\n\n\nResults:\n452.389342\n9.000000\n1.4.1. Override mutable method\nThe mutability of the method must be respected in the heir class. This\nmeans that mutable method must be mutable in the heir, and immutable\nmethods must be immutable in the heir.\nclass Foo {\n    pub self () {}\n\n    pub def foo (mut self)-> void {}\n\n    pub def bar (self)-> void {}\n}\n\nclass Bar over Foo {\n    pub self () {}\n\n    pub over foo (self)-> void {}\n\n    pub over bar (mut self)-> void {}\n}\n\n\nErrors:\nError : when validating main::Bar\n --> main.yr:(9,7)\n 9  ┃ class Bar over Foo {\n    ╋       ^^^\n    ┃ Error : the method (const self) => main::Bar::foo ()-> void marked as override does not override anything\n    ┃  --> main.yr:(12,11)\n    ┃ 12  ┃     pub over foo (self)-> void {}\n    ┃     ╋              ^^^\n    ┃     ┃ Note : candidate foo --> main.yr:(4,10) : (mut self) => main::Foo::foo ()-> void\n    ┃     ┗━━━━━━ \n    ┃ Error : the method (mut self) => main::Bar::bar ()-> void marked as override does not override anything\n    ┃  --> main.yr:(14,11)\n    ┃ 14  ┃     pub over bar (mut self)-> void {}\n    ┃     ╋              ^^^\n    ┃     ┃ Note : candidate bar --> main.yr:(6,10) : (const self) => main::Foo::bar ()-> void\n    ┃     ┗━━━━━━ \n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n1.4.2. Final methods\nA base class can flag its method to avoid overriding. This flag is\nplaced as a custom modifier before the name of the method.\nclass Foo {\n    pub self () {}\n\n    pub def @final foo (self) {}\n}\n\nclass Bar over Foo {\n    pub self () {}\n\n    pub over foo (self) {}\n}\n\n\nErrors:\nError : when validating main::Bar\n --> main.yr:(7,7)\n 7  ┃ class Bar over Foo {\n    ╋       ^^^\n    ┃ Error : cannot override final method (const self) => main::Foo::foo ()-> void\n    ┃  --> main.yr:(10,14)\n    ┃ 10  ┃     pub over foo (self) {}\n    ┃     ╋              ^^^\n    ┃     ┃ Note : \n    ┃     ┃  --> main.yr:(4,20)\n    ┃     ┃  4  ┃     pub def @final foo (self) {}\n    ┃     ┃     ╋                    ^^^\n    ┃     ┗━━━━━┻━ \n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n \nThis flag can also be used on an overriden method inside a heir\nclass to avoid further overriding. \nclass Foo {\n    pub self () {}\n\n    pub def foo (self) {}\n}\n\nclass Bar over Foo {\n    pub self () {}\n\n    pub over @final foo (self) {}\n}\n\nclass Baz over Bar {\n    pub self () {}\n\n    pub over foo (self) {}\n}\n\n\nErrors:\nError : when validating main::Baz\n --> main.yr:(13,7)\n13  ┃ class Baz over Bar {\n    ╋       ^^^\n    ┃ Error : cannot override final method (const self) => main::Bar::foo ()-> void\n    ┃  --> main.yr:(16,14)\n    ┃ 16  ┃     pub over foo (self) {}\n    ┃     ╋              ^^^\n    ┃     ┃ Note : \n    ┃     ┃  --> main.yr:(10,21)\n    ┃     ┃ 10  ┃     pub over @final foo (self) {}\n    ┃     ┃     ╋                     ^^^\n    ┃     ┗━━━━━┻━ \n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n1.5. Abstract class\nA class can be abstract, this means that the class cannot be\ninstantiated even if it has a constructor. An abstract class can\ndeclare methods without body, these methods must be overriden by heir\nclasses. An abstract must have a constructor to be heritable, this\nconstructor being called by the heir classes. Not that an abstract\nclass can have no public constructors, but that a class that have no\npublic constructors is not necessarily abstract.\nclass @abstract Shape {\n    prot self () {} // need a constructor to be inheritable\n\n    pub def area (self)-> f64; // Method does not need a body\n}\n\nclass Circle over Shape {\n    let _radius : f64;\n    pub self (radius : f64) with _radius = radius {}\n\n    pub over area (self) -> f64 {\n        import std::math;\n        math::PI * (self._radius * self._radius)\n    }\n}\n\ndef main () {\n    let s : Shape = Circle::new (12);\n    println (s.area ());\n}\n\n1.5.1. Method with no body\nA method of an abstract class can have a body, and thus behave as any\nmethod of any class. It can also have no body, but in that case heir\nclass must override this method. Otherwise the class is\nincomplete. Abstract class can be heir class, in that case they don't\nneed to override the methods without body.\nclass @abstract Foo {\n    pub self () {}\n\n    pub def foo (self);\n}\n\nclass @abstract Bar over Foo {\n    pub self () {}\n}\n\nclass Baz over Bar {\n    pub self () {}\n}\n\n\nError:\nError : when validating main::Baz\n --> main.yr:(11,7)\n11  ┃ class Baz over Bar {\n    ╋       ^^^\n    ┃ Error : the class main::Baz is not abstract, but does not override the empty parent method (const self) => main::Foo::foo ()-> void\n    ┃  --> main.yr:(11,7)\n    ┃ 11  ┃ class Baz over Bar {\n    ┃     ╋       ^^^\n    ┃     ┃ Note : \n    ┃     ┃  --> main.yr:(4,13)\n    ┃     ┃  4  ┃     pub def foo (self);\n    ┃     ┃     ╋             ^^^\n    ┃     ┗━━━━━┻━ \n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n1.6. Final class\nFinal classes declared with the custom attributes @final defines\nclasses that cannot have heirs. A final class, can be an heir class,\nor a base class. If the class is a base class, strong optimization can\nbe made by the compiler, (no vtable required, and call of the methods\nare direct and way faster). For that reason, it is a good practice to\nflag classes for which we are certain they cannot be inheritable. This\noptimization is also done on final methods (if they are not overriden,\ni.e. final when define for the first time), thus this is a good\npractice to flag methods for which we are certain they won't be\noverriden. This optimization cannot be done if the class is not a base\nclass.\nclass @final Foo {\n    pub self () {}\n\n    pub def foo (self) {}\n}\n\nclass Bar over Foo {\n    pub self () {}\n}\n\n\nError:\nError : the base class main::Foo is marked as final\n --> main.yr:(7,16)\n 7  ┃ class Bar over Foo {\n    ╋                ^^^\n\n\nymir1: fatal error: \ncompilation terminated.\n\n\nContribution: It is possible to have an abstract and final class. I\ndidn't find any use case for that, maybe that is completely useless,\nand must be prohibited.\n1.7. Casting base class objects to heir class\nIn many languages (such as C++, D, Java, or Scala) polymorphism gives\nthe possibility to cast an object of a base class into an object of an\nheir class. This is not possible in Ymir because this behavior is\nnot safe. We will see in the chapter Pattern\nmatching how\nto achieve a cast of an object into a heir class, in a safe way. \nHowever, the std provides a safe shortcut that can be used to\nachieve the cast. This shortcut is by using the template function\nto of the module std::conv. This function throws a\nCastFailure exception when the cast failed, (safe in Ymir\nmeans that the error can be managed, and has to be managed in fact, as\nwe will see in the chapter on Error\nhandling). In\nthe following example, two objects are stored in the variable x\nand y, whose type are &Foo. The first cast at line 18\nworks, because the variable x indeed contains an object of type\n&Bar, however the cast at line 19 does not work, the\nvariable y stores an object of type &Foo.\nimport std::conv;\n\nclass Foo {\n    pub self () {}\n}\n\nclass Bar over Foo {\n    pub self () {}\n}\n\n\ndef main ()\n    throws &CastFailure // the possible errors are rethrown, so the program ends if there is an error \n{\n    let x : &Foo = Bar::new ();\n    let y : &Foo = Foo::new ();\n\n    let _ : &Bar = x.to!(&Bar) (); // possibly throw a &CastFailure\n    let _ : &Bar = y.to!(&Bar) (); // here as well, (and actually throw it)\n}\n\n \nThe following result happens because an error is thrown by the main\nfunction, and then unmanaged by the program. The stacktrace is printed\nbecause the program was compiled in debug mode. We can see in this\ntrace (at line 11) that the error was effectively thrown by the\nconversion at line 19. \nUnhandled exception\nException in file \"/home/emile/gcc/gcc-install/bin/../lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/ymir/std/conv.yr\", at line 820, in function \"std::conv::to(&(main::Bar),&(main::Foo))::to\", of type std::conv::CastFailure.\n╭  Stack trace :\n╞═ bt ╕ #1\n│     ╘═> /lib/libgyruntime.so:??\n╞═ bt ╕ #2\n│     ╘═> /lib/libgyruntime.so:??\n╞═ bt ╕ #3 in function std::conv::toNP94main3BarNP94main3Foo::to (...)\n│     ╘═> /home/emile/gcc/gcc-install/bin/../lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/ymir/std/conv.yr:820\n╞═ bt ╕ #4 in function main (...)\n│     ╘═> /home/emile/Documents/test/ymir/main.yr:19\n╞═ bt ╕ #5\n│     ╘═> /lib/libgyruntime.so:??\n╞═ bt ╕ #6 in function main\n│     ╘═> /home/emile/Documents/test/ymir/main.yr:12\n╞═ bt ╕ #7\n│     ╘═> /lib/x86_64-linux-gnu/libc.so.6:??\n╞═ bt ═ #8 in function _start\n╰\nAborted (core dumped)\n"},"objects/traits.html":{"url":"objects/traits.html","title":"Traits","keywords":"","body":"1. Trait1.1. Inherit a Class implementing a Trait1.1.1. Simple reimplementation1.1.2. Override implemented method1.2. Trait privacy1.3. Trait usage1. Trait\nTraits are used to define as their name suggest traits that can be\nimplemented by a class. To define them, the keyword trait is\nused. A trait is not a type, and can only be implemented by class,\nfor that reason, a variable or a value cannot be of a trait type.\nAn example of a trait, is presented in the following source block. The\nidea of this trait, is to ensure that every class, implementing it,\nhave a public method named print that can be called without\nparameters.\ntrait Printable {\n    pub def print (self);    \n}\n\n\nWhen a class implements a trait, all the method declared in the trait\nare added in the definition of the class. If the class is not abstract\nall the method of the traits must have a body. For example, if a non\nabstract class implement the trait Printable, thus it must\noverride the method print to add a body to it.\nimport std::io\n\nclass Point {\n    // ... Constructors and attributes\n\n    impl Printable {\n        // Try to remove the following definition\n        pub over print (self) {\n            print (\"Point {\", self._x, \", \", self._y, \"}\");\n        }\n    }    \n}\n\n\nA trait can provide a default behavior for the method it defines. The\nbody of the method is validated for each implementation. In the\nfollowing example, the method print defined in the trait\nPrintable, prints the typeid of the class that implement the\ntraits. One can note, that the behavior of this function is different\nfor each class that implements it, that is why it is only validated\nwhen a class implement the trait.\nmod main; \n\ntrait Printable {\n    pub def print (self) {\n        import std::io;\n        print (typeof (self)::typeid);\n        // Here we don't know the type yet\n    }\n}\n\nclass Point {\n    // ... Constructors and attributes\n\n    impl Printable;  // 'print' method prints (\"main::Point\")\n}\n\nclass Line {\n    // ... Constructors and attributes\n\n    impl Printable;  // 'print' method prints (\"main::Line\")\n}\n\n\nWarning: If a trait is never implemented by any class, and have\nmethods with default behavior, then it is never validated. Thus errors\ncan be present in this trait, but still pass the compilation. One can\nsee the trait as a kind of template, this problem being present in\ntemplate symbol as well (cf.\nTemplates).\n1.1. Inherit a Class implementing a Trait\nThe methods of a trait can be overriden by heir classes. In order to\ndo this, heir classes must reimplement the trait, and override the\nmethods. \n1.1.1. Simple reimplementation\nIn the following example, the class Shape implements\nthe trait Printable, this trait has a method print with a\ndefault behavior. The class Circle does not reimplement the\ntrait, thus when calling the method print of a Circle value, the\nvalue main::Shape is printed on the stdout. On the other hand,\nthe class Rectange reimplement the traits, thus the value\nmain::Rectangle is printed.\nmod main;\n\ntrait Printable {\n    pub def print (self) {\n        import std::io;\n        println (typeof (self)::typeid);\n    }\n}\n\nclass @abstract Shape {\n    self () {}\n\n    impl Printable;\n}\n\nclass Circle over Shape {\n    pub self () {}\n}\n\nclass Rectangle over Shape {\n    pub self () {}\n\n    impl Printable; // reimplement the method print with typeof (self) being main::Rectangle\n}\n\ndef main () {\n    let c = Circle::new ();\n    c.print ();\n\n    let r = Rectangle::new ();\n    r.print ();\n}\n\n\nResults: \nmain::Shape\nmain::Rectangle\n1.1.2. Override implemented method\nImplemented method cannot be overriden without reimplementing the\ntrait. In the following example, a class Shape implement the\ntrait Printable, and the class Circle inherits\nShape, and tries to override the method print. \nmod main;\nimport std::io;\n\ntrait Printable {\n    pub def print (self);\n}\n\nclass @abstract Shape {\n    self () {}\n\n    impl Printable {\n        pub over print (self) {\n            println (\"main::Shape\");\n        }\n    }\n}\n\nclass Circle over Shape {\n    pub self () {}\n\n    pub over print (self) {}\n}\n\n\nErrors: \nError : when validating main::Circle\n --> main.yr:(18,7)\n18  ┃ class Circle over Shape {\n    ╋       ^^^^^^\n    ┃ Error : cannot override the trait method (const self) => main::Shape::print ()-> void outside the implementation of the trait\n    ┃  --> main.yr:(21,14)\n    ┃ 21  ┃     pub over print (self) {}\n    ┃     ╋              ^^^^^\n    ┃     ┃ Note : \n    ┃     ┃  --> main.yr:(12,18)\n    ┃     ┃ 12  ┃         pub over print (self) {\n    ┃     ┃     ╋                  ^^^^^\n    ┃     ┗━━━━━┻━ \n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n\nTo prevent the previous error, the class Circle have to\nreimplement the trait Printable. When reimplementing a trait in\na heir class, the parent overriding is not taken into account, and the\nmethod of the trait is used. In the following example, the class\nShape implement the trait Printable, that have a method\nprint with no default behavior. The class Circle tries to\nreimplement the trait, but without overriding the print\nmethod. This source code is rejected by the compiler, the class\nCircle is not abstract, but has a method with no body.\nmod main;\nimport std::io;\n\ntrait Printable {\n    pub def print (self);\n}\n\nclass @abstract Shape {\n    self () {}\n\n    impl Printable {\n        pub over print (self) {\n            println (\"main::Shape\");\n        }\n    }\n}\n\nclass Circle over Shape {\n    pub self () {}\n\n    impl Printable;\n}\n\n\nErrors: \nError : when validating main::Circle\n --> main.yr:(18,7)\n18  ┃ class Circle over Shape {\n    ╋       ^^^^^^\n    ┃ Error : the class main::Circle is not abstract, but does not override the empty parent method (const self) => main::Printable::print ()-> void\n    ┃  --> main.yr:(18,7)\n    ┃ 18  ┃ class Circle over Shape {\n    ┃     ╋       ^^^^^^\n    ┃     ┃ Note : \n    ┃     ┃  --> main.yr:(5,10)\n    ┃     ┃  5  ┃     pub def print (self);\n    ┃     ┃     ╋             ^^^^^\n    ┃     ┗━━━━━┻━ \n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n\nTo resolve that problem, the class Circle must add a body to the\nmethod print. It can happen that a trait defines multiple\nmethods, and that only some have to be reimplemented by the heir\nclass. In that case, there is no magical solution, maybe a\ncontribution can enhance that, but every methods must be\nreimplemented. In order to mimic the behavior of the parent\nimplementation, the super keyword can be used.\nclass Circle over Shape {\n    pub self () {}    \n\n    impl Printable {\n\n        pub over print (self)-> void { \n            self::super.print (); // call the print method of the super class         \n        }\n    }    \n}\n\n\n1.2. Trait privacy\nTrait implementation is always public. For that reason, privacy\nspecifier (pub, prot and prv) have no meaning on\nimplementation. \nOn the other hand, the trait methods implementation follows the same\nrule as the overriding of a parent method. That is to say, the privacy\ndefined inside the trait must be the same as the privacy defined\ninside the implementation.\n1.3. Trait usage\nAs said in the beginning of this chapter, traits do not define\ntypes, thus they cannot be used to define the type of a variable. For\nexample, the following source code has no meaning, Printable\ndoes not define a type.\nmod main;\nimport std::io;\n\ntrait Printable {\n    pub def print (self);\n}\n\ndef foo  (a : Printable) {\n    a.print ();\n}\n\n\nErrors: \nError : expression used as a type\n --> main.yr:(8,15)\n 8  ┃ def foo  (a : Printable) {\n    ╋               ^^^^^^^^^\n\n\nymir1: fatal error: \ncompilation terminated.\n\n\nIf the previous example, is not a valid ymir code, the behavior can\nstill be implemented in the language. Traits gain interest when\ncoupled with templates, and a template test can be used to check that\na class implement a trait. More complete information, and example\nabout templates, and traits specialization are presented in chapter\nTemplates,\nbut a brief example is presented in the following source code. In this\nexample, two classes U and V implement the trait\nPrintable. The function foo takes a parameter whose type\nis not specified but must implement the trait Printable. Thus\nthe function is callable with both U or V as argument.\nmod main;\nimport std::io;\n\ntrait Printable {\n    pub def print (self) {\n        println (typeof (self)::typeid);\n    }\n}\n\nclass U {\n    pub self () {}\n    impl Printable;\n}\n\nclass V {\n    pub self () {}\n    impl Printable;\n}\n\n/**\n * Accept every type, that implements the trait Printable \n */\ndef foo {I impl Printable} (a : I) {\n    a.print ();\n}\n\ndef main () {\n    foo (U::new ());\n    foo (V::new ());\n}\n\n\nResults: \nmain::U\nmain::V\n"},"objects/cast.html":{"url":"objects/cast.html","title":"Cast, and dynamic typing","keywords":"","body":"1. Cast, and dynamic typing1.1. Dynamic typeinfo1.2. Object1. Cast, and dynamic typing\nAn object instance of a heir class can be casted to an object instance\nof an ancestor class. Unlike, casting of integer values,\n(e.g. i32 to i64), because an object is an aliasable type,\nthe memory size of the object is not modified. Casting must respect\nmutability of the object value. Moreover, this cast can be made\nimplicitely, as it does not create any problem in memory. In the\nfollowing example, the class Bar inherits from the class\nFoo. A variable x is created, and is of type\n&Bar. At line 1, an implicit cast is made of a &Bar\nvalue to a &Foo value, the same cast is made but explicitely at\nline 1.\nimport std::io;\n\nclass Foo {\n    pub self () {}\n\n    pub def foo (self) {\n        println (\"Foo\");\n    }\n}\n\nclass Bar over Foo {\n    pub self () {}\n\n    pub over foo (self) {\n        println (\"Bar\");\n    }\n}\n\ndef baz (f : &Foo) {\n    f.foo ();\n}\n\ndef main () {\n    let x = Bar::new ();\n    baz (x);\n\n    let y = cast!{&Foo} (x);\n    y.foo ();\n}\n\n\nResults:\nBar\nBar\n1.1. Dynamic typeinfo\nOne can note from the above example, that when a variable contains a\nvalue of type &Foo, that does not necessarily mean that this is\na pure &Foo value, but it can be a &Bar. In object\noriented programming, this principle is denote polyphormism. In the\nchapter Basic programming\nconcepts,\nwe have seen that every object has specific attributes. Object is no\nexception to the rule. The following table lists the default specific\nattributes of the object types.\n\n\n\nName\nMeaning\n\n\n\n\ntypeid\nThe name of the type stored in a value of type [c32]\n\n\ntypeinfo\nA structure of type TypeInfo, containing information about the type\n\n\n\nThese attributes are compile time executed, and thus are static. For\nexample, in the following source code, the typeid of the class\nBar is printed to stdout, followed by a line that does exactly\nthe same thing (literraly).\ndef main () {\n    println (Bar::typeid);\n    println (\"main::Bar\");\n}\n\n\nWhen it comes to dynamic typing, it can be interesting to get the\ntypeinfo of the type of the value that is actually stored inside the\nvariable (e.g. get the typeinfo of the Bar class, type of the\nvalue contained inside a &Foo variable). To do that, the\nspecific attribute typeinfo of object is also accessible from\nthe value directly, and this time dynamically.\ndef main () {\n    let x = Bar::new ();\n    let y : &Foo = x;\n\n    println (y::typeinfo);\n}\n\n\nResults: \ncore::typeinfo::TypeInfo(13, 16, [core::typeinfo::TypeInfo(13, 16, [], main::Foo)], main::Bar)\n \nThe result presented above, gives the following information : 1)\nwe have a object, 2) its size is 16 bytes, 3) it has an ancestor\n(object, size 16 bytes, no ancestor, named main::Foo), 4) its\nname is main::Bar.\nThe TypeInfo returned by the typeinfo attributes (either\ndynamically or statically), is a structure whose definition is the\nfollowing. The inner fields depend on the value of the\ntypeid field, for example, when dealing with an object it stores\nthe ancestor TypeInfo, and when dealing with slice, it stores\nthe TypeInfo of the type contained inside the slice.\npub struct\n| typeid : TypeIDs\n| size   : usize\n| inner  : [TypeInfo]\n| name   : [c32] \n -> TypeInfo;\n\npub enum : u32\n| ARRAY        = 1u32\n| BOOL         = 2u32\n| CHAR         = 3u32\n| CLOSURE      = 4u32\n| FLOAT        = 5u32\n| FUNC_PTR     = 6u32\n| SIGNED_INT   = 7u32\n| UNSIGNED_INT = 8u32\n| POINTER      = 9u32\n| SLICE        = 10u32\n| STRUCT       = 11u32\n| TUPLE        = 12u32\n| OBJECT       = 13u32\n| VOID         = 14u32\n -> TypeIDs;\n\n\nThe typeinfo of a class is stored in the text and is accessible from\nthe vtable of the object. One can note that Bar and Foo\nhave a size of 16 bytes, despite the fact that they store no\nfields. This is due to two pointers that are stored inside every\nobjects, the first pointer is refering to the monitor of the object\n(cf. Parallelism), and the second one points the the vtable of\nthe object.\n1.2. Object\nYmir have a type named Object, that can used to cast any\nobject into that type. The reverse is impossible. We have seen that\nthe object are not inheriting from a global ancestor, and this is\nreally not the case. This cast unlike casting to parent class objects,\ncannot be made implicitely. We can see the &(Object) type as the\n&(void) type, that can store any pointer, but for\nobjects. Unlike &(void) (in which by the way we can't cast\nobjects), &Object stores one valuable information, it stores a\nvalid object value, with a vtable, a monitor, a typeinfo, and cannot\nbe null. \nIn the following example, a pattern matching is used to check the type\nof the object that is returned by the foo function. This is\ndiscussed in chapter Pattern\nMatching.\ndef foo ()-> &Object {\n    cast!{&Object} (Foo::new ())\n}\n\ndef main () {\n    match foo () {\n        Foo () => {\n            println (\"I got a Foo !\");\n        }\n    }\n}\n\n\nResults: \nI got a Foo !\n\nSome function of the standard library uses the Object type to\nreturn values, when it is impossible statically to get more accurate\ninformation about the type (e.g. [Packable]\n(https://gnu-ymir.github.io/Documentations/en/traits/serialize.html).)\n"},"functions/":{"url":"functions/","title":"Function advanced","keywords":"","body":"1. Functions1.1. Function pointer1.1.1. Function pointer using reference1.2. Lambda function1.3. Closure1.3.1. Copy closure1.3.2. Method delegate1.3.3. Polymorphic delegate1. Functions\nWe have seen in the chapter Basic programming\nconcepts\nhow functions are written. Ymir can be used as a functional\nlanguage, thus functions can also be considered as values. In this\nchapter we will see more advanced function systems, named function\npointer and closure.\n1.1. Function pointer\nA function pointer is a value that contains a function. It can be used\nfor example, to pass a function, as an argument to other\nfunctions. The type of a function pointer is written using the keyword\nfn, and have nearly the same syntax as a function prototype, but\nwithout a name, and without naming the parameters.\nimport std::io\n\ndef foo (f : fn (i32)-> i32) -> i32 {\n    f (41)\n}\n\ndef addOne (x : i32)-> i32\n    x + 1\n\n\ndef main () {\n    let x = foo (&addOne);\n    println (x);\n}\n\n\nIn the above example, we have specified that the function foo\ntakes a function pointer as first parameter. This function pointer, is\na function that takes an i32 value and return another i32 value.\nIn the main function, the ampersand (&) unary operator is used\nto transform the function symbol addOne into a function\npointer. This function pointer is then passed to the function\nfoo, which calls it and return its value. \nResults: \n42\n1.1.1. Function pointer using reference\nWe have seen that references is not a type, in the chapter Alias and\nReferences. However,\nfunction prototype sometimes takes reference value as parameter. This\nmust be replicated in the prototype of the function pointer. For that\nreason, the ref keyword can be used in the prototype of a\nfunction pointer type. \nIn the following example, the function mutAddOne change the\nvalue of a reference variable x, and add one to it. The function\nfoo takes a function pointer as first parameter, and calls it on\na mutable local variable x by reference (it is important). \nimport std::io\n\ndef foo (f : fn (ref mut i32)-> void) -> i32 {\n    let mut x = 41;\n    f (ref x);\n    x\n}\n\ndef mutAddOne (ref mut x : i32) {\n    x = x + 1;\n}\n\ndef main () {\n    let x = foo (&mutAddOne);\n    println (x);\n}\n\n\nResults: \n42\n\nThe prototype of the function pointer must be strictly respected, for\nobvious reasons. And as for normal functions, alias and references\nmust be strictly respected as well. For example, in the follow\nexample, the function foo tries to call the function pointer\nthat takes a reference argument, using a simple value. And the\nmain function tries to call the foo function, with a\nfunction pointer that does not take a reference parameter.\nimport std::io\n\ndef foo (f : fn (ref mut i32)-> void) -> i32 {\n    let mut x = 41;\n    f (x);\n    x\n}\n\ndef mutAddOne (x : i32) {\n    println (x);\n}\n\ndef main () {\n    let x = foo (&mutAddOne);\n    println (x);\n}\n\n\nWe have two errors, first the compiler does not allow an implicit\nreferencing of the variable x at line 5, and second the\ncompiler does not allow an implicit cast of a value of type fn\n(i32)-> void to fn (ref mut i32)-> void.\nError : the call operator is not defined for &fn(ref mut i32)-> void and {mut i32}\n --> main.yr:(5,7)\n 5  ┃     f (x);\n    ╋       ^ ^\n    ┃ Error : implicit referencing of type mut i32 is not allowed\n    ┃  --> main.yr:(5,8)\n    ┃  5  ┃     f (x);\n    ┃     ╋        ^\n    ┃ Note : for parameter i32 --> main.yr:(3,26) of f\n    ┗━━━━━━ \n\nError : the call operator is not defined for main::foo and {&fn(i32)-> void}\n --> main.yr:(14,17)\n14  ┃     let x = foo (&mutAddOne);\n    ╋                 ^          ^\n    ┃ Note : candidate foo --> main.yr:(3,5) : main::foo (f : &fn(ref mut i32)-> void)-> i32\n    ┃     ┃ Error : incompatible types &fn(ref mut i32)-> void and &fn(i32)-> void\n    ┃     ┃  --> main.yr:(14,18)\n    ┃     ┃ 14  ┃     let x = foo (&mutAddOne);\n    ┃     ┃     ╋                  ^\n    ┃     ┃ Note : for parameter f --> main.yr:(3,10) of main::foo (f : &fn(ref mut i32)-> void)-> i32\n    ┃     ┗━━━━━━ \n    ┗━━━━━┻━ \n\nError : undefined symbol x\n --> main.yr:(15,14)\n15  ┃     println (x);\n    ╋              ^\n\n\nymir1: fatal error: \ncompilation terminated.\n\n1.2. Lambda function\nLambda functions are anonymous functions that have the same behavior\nas normal function, but don't have a name. They are declared using the\ntoken | surrounding the parameters instead of parentheses in order\nto dinstinguish them from tuple. The following code block presents the\nsyntax of the lambda functions.\nlambda_func := '|' (var_decl (',' var_decl)*)? '|' ('->' type)? ('=>')? expression\nvar_decl := Identifier (':' type)?\n\n\nThe following example shows a simple usage of a lambda function. This\nfunction declared at line 4, and stored in the variable x,\ntakes two parameters x and y of type i32, and return\ntheir sum.\nimport std::io\n\ndef main () {\n    let x = |x : i32, y : i32|-> i32 { \n        x + y\n    };\n    println (x (1, 2));\n}\n\n\nAs one can note, there is no conflict between the variable x\ndeclared in the function main, and the first parameter of the\nlambda function also named x. This is due to the fact that the\nlambda function does not enclose the context of the function that have\ncreated it. In other words, lambda functions behave as normal local\nfunction, accessible only inside the function that have declared them\n(cf.  Scope\ndeclaration).\nIn many cases the type of the parameters and return type can be\ninfered, and are therefore optional. The above example can then be\nrewritten into the following example. In this next example, the lambda\nfunction can be called with any values, as long as the binary addition\n(+) operator is defined between the two values.\nimport std::io\n\ndef main () {\n    let x = |x, y| x + y;    \n    println (x (1, 2));\n\n\n    // The types are not given, then you can also write \n    println (x (1.3, 2.9));    \n}\n\n\nThe token => can be added after the prototype of the lambda, to make\nit a bit more readable. It is just syntaxic and has no impact on the\nbehavior of the lambda.\nimport std::io\n\ndef main () {\n    let x = |x, y| => x + y;    \n    println (x (1, 2));\n}\n\n\nLambda functions are directly function pointers, and then can be used\nas such without needing the unary ampersand (&) operator. In the\nfollowing example, the function foo takes a function pointer as\nfirst parameter, and two i32 values as second and third\nparameters. This function calls the function pointer twice, and add\nthe result. A lambda function is used in the main function as\nthe first argument for the foo function.\nimport std::io\n\ndef foo (f : fn (i32, i32)-> i32, x : i32, y : i32) -> i32 {\n    f (x, y) + f (y, x)\n}\n\ndef main () {\n    let x = (|x, y|=> x * y).foo (3, 7);\n\n    // uniform call syntax is used, but you can of course write it as follows : \n    // foo (|x, y| x*y, 3, 7);\n    println (x);\n}\n\nResults: \n42\n\nLambda function that are not typed are special element, that does not\nreally have a value at runtime, and are closer to compile time\nvalues (presented in a future chapter Compile time\nexecution).\nWhen the whole type of a lambda cannot be infered by the compiler\n(types of the parameters, and the type of the return type), then the\nvalue cannot be passed to a mutable variable. Ymir allows to put an\nuntyped lambda inside an immutable var, to ease its usage, but the\nlambda still does not have any value. For that reason, the second line\nof the following example is possible, but not the third.\ndef main () {\n    let x = |x| x + 1;\n    let mut y = x;\n}\n\n\nErrors: \nError : the type mut fn (any)-> any is not complete\n --> main.yr:(2,10)\n 2  ┃     let x = |x| x + 1;\n    ╋             ^\n    ┃ Note : \n    ┃  --> main.yr:(3,10)\n    ┃  3  ┃     let mut y = x;\n    ┃     ╋             ^\n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n\nThe same problem happens when an uncomplete lambda function is used as\nthe value of a function. To resolve the problem, and because the\nreturn type of a function is always complete when the function is\nvalidated (or there were other previous errors), the keyword\nreturn can be used. Thanks to that statement, the compiler has\nadditional knowledge, and can infer the type of the lambda function\nfrom the return type of the function.\nimport std::io\n\ndef foo () -> fn (i32)-> i32 {\n    return |x| => x + 12 // the compiler tries to transform the lambda function into a function pointer fn (i32)-> i32\n}\n\ndef main () {\n    let x = foo ();\n    println (x (30));\n}\n\n\nContribution: Resolve that problem when it seems obvious, for\nexample in the previous example, maybe the type of the block can be\ninfered directly?\n1.3. Closure\nAs said earlier, a lambda function behave like a local private\nfunction, and thus has no access to the context of the function that\nhave declared it. In the following example, the lambda function\ndeclared at line 5 tries to access the variable i declared\nat line 4. This is impossible, the variable i exists in a\ndifferent context that the lambda function.\nimport std::io\n\ndef main () {\n    let i = 12;\n    let x = | | {\n        println (i);\n    };\n    x ();\n}\n\n\nErrors:\nError : undefined symbol i\n --> main.yr:(6,12)\n 6  ┃         println (i);\n    ╋                  ^\n\nError : undefined symbol x\n --> main.yr:(8,2)\n 8  ┃     x ();\n    ╋     ^\n\n\nymir1: fatal error: \ncompilation terminated.\n\nClosure are a function pointer that capture the environment of the\nfunction that has declared them. In Ymir there is only one kind of\naccepted closure, that is called the move closure.\n1.3.1. Copy closure\nA copy closure is a special kind of lambda function, that is declared\nby using the keyword move in front of a lambda literal. The\nclosure as an immutable access to all the variable declared inside the\nscope of the parent function. This closure is called a copy closure\nbecause the access of the variable is made by copy (a first level copy\ncf. Copy and Deep\ncopy).\nBecause closure captures a context in addition to a function pointer,\nthe simple function pointer type is no more sufficient, and a new type\nis introduced. The syntax of the closure type is created with the\nkeyword dg instead of fn (dg stands for delegate). A\ndelegate is a function pointer with an environment, and is the general\ncase of a closure (we will see in next section, a case of delegate\nthat are not closure).\nIn the following example, the copy closure declared at line 9\nenclosed the scope of the function foo, and thus has access to\nthe variable i. However, the enclosed variable is immutable (and\nis a copy).\nimport std::io\n\ndef bar (f : dg (i32)-> i32) -> i32 {\n    f (12)\n}\n\ndef foo () {\n    let i = 30;\n    let x = bar (move |x|=> x + i);\n    println (x);\n}\n\ndef main () {\n    foo ();\n}\n\n\nThe above source code in the context of the foo function, can be\nillustrated by the following figure.\n\n\n\nAs one can note, the variable i enclosed in the closure is not\nthe same as the variable i of the main function. This has\ntwo impact: \n\na) copy closure can be returned safely from functions,\nindeed even when the variable i does not exist anymore as the\nfunction foo is exited, a copy of it is still accessible in the\nheap (note that this is the same for aliasable types, that are in the\nheap in any case). For example: \n\nimport std::io;\n\ndef foo ()-> dg ()-> i32 {\n    let i = 30;\n    return (move || => i + 12);\n}\n\ndef main () {\n    let x = foo ();\n    println (x ()); // enclosed i does not exists, but thats not a problem\n}\n\n\nResults:\n42\n\n\nb) the value of the enclosed i is independant\nfrom the value of the variable i in the foo function,\nmeaning that there is no way for the foo function to change the\nvalue of the variable i inside the closure after its creation. For example : \n\nimport std::io;\n\ndef main () {\n    let mut i = 30;\n    let x = move || => i + 12;\n    i = 11; // no impact on the closure of x\n    println (x ());    \n\n    let y = move || => i + 12;\n    println (y ());\n}\n\n\nResults: \n42\n23\n\nBy using aliasable types, this limitation can be bypassed, for example\na slice can be used to enclosed the value of i, and access it from the\nclosure, without removing the guarantees of the copy closure, this\nis illustrated in the following example. Warning: if you might be\ntempted to use a pointer on the i variable, its highly not\nrecommended. Indeed, pointing to a local variable remove the guarantee\nwe introduced earlier in the point (a) - (in general using pointer -\nnot function pointer - to value is a bad idea, and should be\nprohibited outside the std).\nimport std::io;\n\ndef main ()\n    throws &OutOfArray\n{\n    let dmut i = [12];\n    let x = move || => {\n        i[0] + 12\n    } catch {\n        _ => {\n            0\n        }\n    };\n\n    i [0] = 30;\n    println (x ());\n}\n\n\nIn the above example, the copy closure access to the first index of\nthe slice i. This is a unsafe operation, the slice can be empty,\nthis is why a catch is made. Information about catch is not presented\nhere, and will be discussed in a future chapter Error\nhandling. Here\nbecause the slice is not empty when the closure is called, the access\nworks.\nResults: \n42\n1.3.2. Method delegate\nA method is a function pointer associated with a object instance, then\nthey can be seen as delegate. The name closure is not used here,\nbecause nothing is really enclosed as in copy closure over function\ncontext, so the name delegate being a more global term is used. A\ndelegate is a function operating on an object, for which we don't know\nthe exact type. \nA method can be transformed into a delegate using the unary ampersand\n(&) operator, on a method associated to an object instance. \nimport std::io;\n\nclass Foo {\n    pub let mut i = 0;\n\n    pub self () {}\n\n    pub def foo (self) -> void {\n        println (self.i);\n    }\n}\n\ndef main () {\n    let dmut a = Foo::new (), dmut b = Foo::new ();\n    let x : (dg ()-> void) = &a.foo;\n    let y = &b.foo;\n\n    a.i = 89;\n    b.i = 42;\n\n    x ();\n    y ();    \n}\n\n\nResults: \n89\n42\n\nUnlike copy closure a method can have a mutable access to the object\nassociated to it. In that case, an explicit alias must be made on the\nobject instance, when creating the delegate, otherwise the compiler\nthrows an error. \nimport std::io;\n\nclass Foo {\n    let mut _i = 0;\n\n    pub self () {}\n\n    pub def foo (mut self) {\n        self._i = 42;\n    }\n\n    impl Streamable;\n}\n\ndef main () {\n    let dmut a = Foo::new ();\n\n    let x = &(a.foo);\n\n    x ();\n\n    println (a);\n\n}\n\n\nErrors:\nError : undefined operator & for type (a).foo\n --> main.yr:(18,13)\n18  ┃     let x = &(a.foo);\n    ╋             ^\n    ┃ Note : candidate foo --> main.yr:(8,13) : (mut self) => main::Foo::foo ()-> void\n    ┃     ┃ Error : discard the constant qualifier is prohibited, left operand mutability level is 2 but must be at most 1\n    ┃     ┃  --> main.yr:(18,13)\n    ┃     ┃ 18  ┃     let x = &(a.foo);\n    ┃     ┃     ╋             ^\n    ┃     ┃     ┃ Note : implicit alias of type mut &(mut main::Foo) is not allowed, it will implicitly discard constant qualifier\n    ┃     ┃     ┃  --> main.yr:(18,15)\n    ┃     ┃     ┃ 18  ┃     let x = &(a.foo);\n    ┃     ┃     ┃     ╋               ^\n    ┃     ┃     ┗━━━━━┻━ \n    ┃     ┗━━━━━┻━ \n    ┗━━━━━┻━ \n\nError : undefined symbol x\n --> main.yr:(20,5)\n20  ┃     x ();\n    ╋     ^\n\n\nymir1: fatal error: \ncompilation terminated.\n\n\nThis can be easily resolved by aliasing the variable a when\ncreating the delegate. Either by using the keyword alias, or by\nusing the :. binary operator.\nimport std::io;\n\nclass Foo {\n    let mut _i = 0;\n\n    pub self () {}\n\n    pub def foo (mut self) {\n        self._i = 42;\n    }\n\n    impl Streamable; // to make the type printable\n}\n\ndef main () {\n    let dmut a = Foo::new ();\n    let x = &(a:.foo); // or &((alias a).foo);\n\n    x ();\n\n    println (a);\n}\n\n\nResults:\nmain::Foo(42)\n\n1.3.3. Polymorphic delegate\nMethod delegates respect the polyphormism introduced by class inheritance. \nimport std::io;\n\nclass Foo {\n    pub self () {}\n\n    pub def foo (self) {\n        println (\"Bar\");\n    }\n}\n\nclass Bar over Foo {\n    pub self () {}\n\n    pub over foo (self) {\n        println (\"Bar\");\n    }\n}\n\n\ndef main ()\n{\n    let x : &Foo = Bar::new ();\n    let d = &(x.foo);\n    d ();\n}\n\n\nResults:\nBar\n"},"pattern/":{"url":"pattern/","title":"Pattern matching","keywords":"","body":"1. Pattern matching1.1. Matching on everything1.2. Matching over a range of values1.3. Variable pattern1.3.1. Matching over type1.3.2. Reference variable1.4. Destructuring patterns1.4.1. Destructuring a tuple1.4.2. Destructuring structure1.4.3. Destructuring class1. Pattern matching\nThe pattern matching is an important part of the Ymir language. It\nallows to make test over values and moreover on types, especially when\nit comes to objects. The pattern matching syntax always start with the\nkeyword match followed by an expression, and then a list of patterns\nenclosed between {}.\nThe syntax of the pattern matching is described in the following code block.\nmatch := 'match' expression '{' pattern* '}'\npattern := pattern_expression '=>' expression (';')?\n\npattern_expression :=   pattern_tuple \n                      | pattern_option \n                      | pattern_range \n                      | pattern_var \n                      | pattern_call\n                      | expression\n\npattern_tuple := '(' (pattern_expression (',' pattern_expression)*)? ')'\npattern_option := pattern_expression ('|' pattern_expression)*\npattern_range := pattern_expression ('..' | '...') pattern_expression \npattern_var := (Identifier | '_') ':' (type | '_') ('=' pattern_expression)?\npattern_call := (type | '_') '(' (pattern_argument (',' pattern_argument)*)? ')'\npattern_arguments := (Identifier '->')? pattern_expression\n\n\nMatch is a kind of control flow, relatively close to if\nexpressions. As if expressions, a match expression can have a\nvalue. In that case, every branch of the match must share the same\ntype, and there must be a guarantee that at least one test of the\nmatch succeed, and thus that a branch is entered. For example, in\nthe following example, all the branch of the match share the same\ntype i32, however it is possible (and even inevitable in that\nspecific case), that no branch of the match were entered. So the\ncompiler throws an error, as the variable x might be unset,\nwhich is prohibited by the language. In the following example, simple\ntests are made on the value, so the first pattern is equal to an if\nexpression, where the test is 12 == 1.\ndef main () {\n    let x = match (12) {\n        1 => 8\n        2 => 7\n        3 => 6\n    };\n}\n\n\nErrors : \nError : match of type i32 has no default match case\n --> main.yr:(2,10)\n 2  ┃     let x = match (12) {\n    ╋             ^^^^^\n\n\nymir1: fatal error: \ncompilation terminated.\n\n1.1. Matching on everything\nThe token _ declares a pattern test that is always valid. It can\nbe placed at different level of the pattern test, as we will see in\nthe rest of this chapter.\nimport std::io;\n\ndef main () {\n    match 42 {\n        _ => { println (\"Always true\"); }\n    }\n}\n\n\n1.2. Matching over a range of values\nPattern matching aims to be more expressive than if expressions, and\ntherefore to allow faster writting of complex test. For example, to\ncheck wether a value is included in an interval of values, writing the\ninterval in the test of the pattern is sufficient. In the following\nexample, the first pattern can be rewritten as the following if\nexpression : 1  42, the second into : 10 = 42, and the third one into : 42 == 41 || 42 == 42 || 42\n== 43.\nimport std::io\n\ndef main () {\n    match 42 {\n        1 .. 10 => {\n            println (\"The answer is between 1 and 10 not included\");\n        }\n        10 ... 40 {\n            println (\"The answer is between 10 and 40 included\");\n        }\n        41 | 42 | 43 => {\n            println (\"The answer is either 41, 42 or 43\");\n        }\n    }\n}\n\n\nThe pattern are tested in the order they are written in the source\ncode, thus if two pattern are valid, only the first one is\nentered. For example, in the following source code, only the pattern\nat line 5 is entered, and the pattern at line 6, even if\nit is valid, is simply ignored.\nimport std::io;\n\ndef main () {\n    match 42 {\n        1 .. 100 => { println (\"Between 1 and 100\"); }\n        10 .. 100 => { println (\"Between 10 and 100\"); }\n    }\n}\n\n1.3. Variable pattern\nA variable declaration can be used to store a value during the pattern\nmatching. The variable is declared like a standard variable\ndeclaration but with keyword let ommitted. The variable pattern\ncan also be used to match over the type of the expression that is\ntested, when the type of the variable can be dynamic (e.g. on class\ninheritance). In all other cases the test is done during the\ncompilation, and the type of the newly declared variable must in any\ncase be fully compatible with the type of the value that is tested. In\nthe following example, the type of the variable patterns is always\ni32, because it is the only compatible type with the type of the\nvalue.\nimport std::io\n\ndef main () {\n    match 13 {\n        _ : i32 => {\n            println (\"It is a i32, but I don't care about the value\");\n        }\n        _ : i32 = 13 => {\n            println (\"It is a i32, whose value is 13\");\n        }\n        _ : _ = 13 => {\n            println (\"It is a i32, whose value is 13, but I didn't checked the type\");\n        }        \n        x : i32 => {\n            println (\"It is a i32, and the value is : \", x);\n        }\n    }\n}\n\n\nIn the above example, every pattern tests are valid, but only the first pattern\nis evaluated, leading to the following result. \nIt is a i32, but I don't care about the value\n\nOne can note that the token : is important in that case, even if\nthe type is not mandatory and can be omitted (by replacing it with the\ntoken _). This is to distinguish a variable declaration to a\nsimple variable referencing. For example, in the following source\ncode, a variable x is declared before the pattern matching, and\nits value is compared with the value that is tested in the match. A\nsecond pattern declares a variable y.\nimport std::io;\n\ndef main () {\n    let x = 42;\n    match 42 {\n        x => { println (\"x == 42\"); } // simple test on the variable declare 2 lines above\n        y : _ => { println (y); } // declaration of a new variable y that stores the matched value \n    }\n\n}\n\n\nResults: \nx == 42\n\n1.3.1. Matching over type\nWhen the type of the value that is tested can be dynamic (i.e. class\ninheritance, which is the only possibility), then the type of the\nvariable in the test can be used to test the type of the value. In the\nfollowing example, the class Bar and Baz inherit from the\nabstract class Foo. The variable x declared in the\nmain function, is of type Foo meaning that it can contains\neither a Bar or a Baz value. The match expression then\nmake a test over the type of the variable x.\nimport std::io;\n\nclass @abstract Foo {\n    self () {}\n}\n\nclass Bar over Foo {\n    pub self () {}\n}\n\nclass Baz over Foo {\n    pub self () {}\n}\n\ndef foo ()-> &Foo {\n    Bar::new ()\n}\n\ndef main () {\n    let x = foo ();\n    match x {\n        _ : &Bar => println (\"Contains a Bar\");\n        _ : &Baz => println (\"Contains a Baz\");        \n    }\n}\n\n\nResults: \nContains a Bar\n\nThere is another pattern that can be used to test a dynamic type, that\nis presented in a following sub section (cf. Destructuring class),\nbut pattern matching is the only way to cast a value whose type is an\nancestor class to an heir class, and this way is safe. In many\nlanguage like Java, D or C++, it is possible to use the casting\nsystem, that has a undefined behavior in C++, makes the program crash\nin Java, and returns the value null in D. These three behaviors are\nnot acceptable since they are not safe. By using the pattern matching,\nthe failing case is let to the discretion of the user. And as we have\nseen in the introduction of this chapter, because a match can't have a\nvalue if there is a possibility that none of the branch were entered,\nthen the user has to write a default case when the cast failed if they\nwant to retreive a value from the matching. This default case can of\ncourse be used to throw an exception (cf Error\nhandling).\n1.3.2. Reference variable\nA mutable value can be updated inside a pattern, by using a reference\nvariable. This works exactly like variable referencing (as presented\nin chapter\nReferences).\nimport std::io\n\ndef main () {\n    let mut z = 1;\n    match ref z {\n        // ^^^\n        // ref is important here, otherwise the compiler throw an error\n        ref mut x : _ => {\n            x = 42;\n        }\n    }\n\n    println (z);\n}\n\n1.4. Destructuring patterns\nDestructuring patterns are patterns that divide the values contained\nin a value is type is a compound type. Compound types are 1) tuple, 2)\nstructures and 3) classes. \n1.4.1. Destructuring a tuple\nTo destructure a tuple, parentheses surrounding other patterns are\nused. The arity of the destructuring pattern must be the same as the\narity of the tuple that is destructured. In the following example, a\ntuple of arity 3, and type (i32, c32, f64) is\ndestructured, using two different patterns. The first pattern only\ncheck the first value of the tuple (the other are always true, using\nthe token _), by verifying that the value is equals to 1\nand putting it in the variable i. The second pattern does not do\nany tests but associate the values of the tuple to the variable\nx, y and z. As one can note from that test, any\npattern can be used to test inner values of the tuple, (another\ndestructuring pattern if the inner value is a compound type, a range\npattern, etc.)\nimport std::io\n\ndef main () {\n    let tuple = (1, 'x', 3.14)\n\n    match tuple {\n        (i : i32 = 1, _, _) => {\n            println (\"This tuple has an arity of three and its first element is an i32, whose value \", i, \" == 1\");\n        } \n        (x : _, y : _, z : _) => {\n            println (\"This tuple has an arity of three, and its values are : (\", x, \", \", y, \", \", z, \")\");\n        }        \n    }\n}\n\n\nResults: \nThis tuple has an arity of three and its first element is an i32, whose value 1 == 1\n1.4.2. Destructuring structure\nDestructuring structure is made by using a call expression. The\nargument of the call expressions are patterns. Unlike tuple\ndestructuring, there is no need to test all the values of the\nstructure, but only those which are relevant. The order of the fields\nis respected in the destructuring (i.e. the pattern, at line 15 of the\nfollowing example, tests the value of the field x). Named\nexpressions can be used to test specific fields of the structure.\nimport std::io\n\nstruct\n| x : i32\n| y : i32\n -> Point;\n\ndef main () {\n    let p = Point (1, 2);\n\n    match p {\n        Point (y-> 1) => {\n            println (\"Point where y is equal to 1\");\n        }\n        Point (1) => {\n            println (\"Point where x is equal to 1\");\n        }\n        Point () => {\n            println (\"Any point\");\n        }\n    }\n}\n\n\nOf course, any kind of pattern can be used inside a structure\ndestructuring, for example a variable pattern, that refers to the\nvalues later in the content of the pattern. In the following example,\na variable p is declared to refer to the value contained in the\nvariable point, and a variable y is declared to refer to\nthe value contained in the field point.y.\nimport std::io\n\nstruct\n| x : i32\n| y : i32\n -> Point;\n\ndef main () {\n    let point = Point (1, 2);\n\n    match point {\n        p : _ = Point (y-> y : i32) => {\n            println (p, \" is a point, whose y field is equal to \", y);\n        }\n    }\n}\n\n1.4.3. Destructuring class\nThe syntax for destructuring object is the same as the syntax for\ndestructuring structure. However, only named expressions are\nadmitted, and this expressions refer to object fields that must be\npublic in the context of the pattern matching. For example, in the\nsource code below, the field x of the class Point is\npublic from the context of the main function, for that reason it\nis accessible inside the class destructuring pattern. On the other\nhand the field _y is private for the main function, thus\ncannot be used.\nimport std::io\n\nclass Point {\n    pub let x : i32 = 1;\n    let _y : i32 = 2;\n\n    pub self () {}\n}\n\ndef main () {\n    let p = Point::new ();\n\n    match p {\n        Point (x-> 1, _y-> 2) => {\n            println (p.x, \" is a equal to 1\");\n        }\n    }\n}\n\n\nErrors: \nError : undefined field _y for element &(main::Point)\n --> main.yr:(14,17)\n14  ┃         Point (x-> 1, _y-> 2) => {\n    ╋                       ^\n    ┃ Note : i32 --> main.yr:(5,11) : _y is private within this context\n    ┗━━━━━━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n\nWe have seen in a previous section (cf. Matching over type), that\nbecause class types are dynamic when there is inheritance, pattern\nmatching can be used to test the type of the values. Class\ndestructuring is an alternative way to check the type of a value,\nwhose type is a class that have heirs. The following example,\ndemonstrate the use of the pattern matching to retreive the center of\na Shape when it is a Circle. In this example, the\nfoo function lied, and returned a Rectangle instead of a\nCircle, in order to be compilable the source code must manage\nthat case, otherwise the variable center declared at line\n28 could be unset, and that is prohibited by the language.\nimport std::io\n\nclass @abstract Shape {\n    self () {}\n}\n\nclass Rectangle over Shape {\n    pub self () {}\n}\n\nclass Circle over Shape {\n    pub let center : i32 ;\n\n    pub self (center : i32) with center = center {}\n}\n\n/**\n * Don't worry I will return you a circle\n*/\ndef foo () -> &Shape {\n    Rectangle::new ()\n}\n\ndef main () {\n    let circle = foo ();\n    let center = match circle {\n        Circle (center-> c : _) => c\n    };\n    println (\"The center of the circle is : \", center);\n}\n\n\nErrors: \nError : match of type i32 has no default match case\n --> main.yr:(28,15)\n28  ┃     let center = match circle {\n    ╋                  ^^^^^\n\nError : undefined symbol center\n --> main.yr:(31,45)\n31  ┃     println (\"The center of the circle is : \", center);\n    ╋                                                ^^^^^^\n\n\nymir1: fatal error: \ncompilation terminated.\n\n\nThis can be corrected by adding a default case to the match\nexpression. The following source codes are two possibilities.\n\n1) Setting a default value : \n\ndef main () {\n    let circle = foo ();\n    let center = match circle {\n        Circle (center-> c : _) => c\n        _ => {\n            println (\"Foo lied ....\");\n            0 // center is equal to 0, if foo returned something other than a Circle\n        }\n    };\n    println (\"The center of the circle is : \", center);\n}\n\n\n2) Throwing an error (cf. Error\nhandling)\n\ndef main ()\n    throws &AssertError\n{\n    let circle = foo ();\n    let center = match circle {\n        Circle (center-> c : _) => c\n        _ => {\n            throw AssertError::new (\"Foo lied...\");\n        }\n    };\n    println (\"The center of the circle is : \", center);\n}\n\n\nA pattern using an ancestor class, will succeed if the object instance\nthat is used is a heir class. That is to say, if the pattern tries to\nget a Shape value, when giving a Circle value to the\npattern, the pattern test succeeds. So the order has to be carefully\nset (putting heir class tests first). The phenomenon is the same with\nvariable patterns. Contribution Add verification when a pattern\ntest cannot be entered because previous test is always valid.\ndef main () {\n    let circle : &Shape = Circle::new (); // Important to have a &Shape, and not a &Circle\n    match circle {\n        Shape () => {\n            println (\"Shape\");\n        }\n        Circle () => {\n            println (\"Circle\");\n        }\n    }\n}\n\n\nResults: \nShape\n"},"errors/main.html":{"url":"errors/main.html","title":"Error handling","keywords":"","body":"1. Error handling1.1. Rethrowing1. Error handling\nThis section will introduce error handling in the Ymir language. As\nwith many languages, error are managed by throwing\nexceptions. Exception can be recovered thanks to scope guards that\nmanage the errors in different manners. The keyword throw is used to\nthrow an exception when an error occurs in the program. An exception\nis a class that inherits the core class core::exception::Exception.\nExceptions are always recoverable, and must be managed by the user,\nwho cannot simply ignore them. Ymir does not allow the possibility\nto ignore that an exception is thrown in a function, and may cause the\nfunction to exit prematurely. To avoid this possibility, excpetion\nmust be written in the definition of the function, or managed\ndirectly.\n// Exception is defined in a core module, so does not need import \nclass MyError over Exception {\n    pub self () {}\n}\n\ndef main () \n    throws &MyError\n{\n    throw MyError::new ();\n}\n\n1.1. Rethrowing\nThe error rethrowing is a way of defining that a function could throw\nan exception, and that this exception must be taking into account by\nthe caller functions. It is a system relatively close to error\nrethrowing of the Java language, apart that the specific name of the\nexception must be written in the possible rethrowed exceptions. That\nis to say, it is impossible to write that a function throws a parent\nclass of the actually thrown exception (e.g. &Exception, when\nthe function actually throws &AssertError). Thanks to that, the\ncompiler is always able to check the type of the exceptions, and can\nforce the user to handle them.\nIn the following example, the function foo is an unsafe function\nthat can throw the exception &AssertError. This exception is\nthrown by the function assert at line 6, and is not\nmanaged by the function foo. Because the main function\ncalls the foo function, it is also unsafe, and also throws the\nexception &AssertError. In this example, the program stops,\nbecause of an unhandled exception. \nimport std::io\n\ndef foo (i : i32) \n    throws &AssertError\n{\n    assert (i \n\nResults (in debug mode, -g option): \nUnhandled exception\nException in file \"/home/emile/ymir/Runtime/midgard/core/exception.yr\", at line 84, in function \"core::exception::abort\", of type core::exception::AssertError.\n╭  Stack trace :\n╞═ bt ╕ #1\n│     ╘═> /lib/libgyruntime.so:??\n╞═ bt ╕ #2\n│     ╘═> /lib/libgyruntime.so:??\n╞═ bt ╕ #3 in function core::exception::abort (...)\n│     ╘═> /home/emile/ymir/Runtime/midgard/core/exception.yr:84\n╞═ bt ╕ #4 in function main::foo (...)\n│     ╘═> /home/emile/Documents/test/ymir/main.yr:7\n╞═ bt ╕ #5 in function main (...)\n│     ╘═> /home/emile/Documents/test/ymir/main.yr:10\n╞═ bt ╕ #6\n│     ╘═> /lib/libgyruntime.so:??\n╞═ bt ╕ #7 in function main\n│     ╘═> /home/emile/Documents/test/ymir/main.yr:10\n╞═ bt ╕ #8\n│     ╘═> /lib/x86_64-linux-gnu/libc.so.6:??\n╞═ bt ═ #9 in function _start\n╰\nAborted (core dumped)\n\nThe compiler does not allow to forget the possibility of a error\nthrowing, and requires the user to write it down. In the following\nexample, the function foo call the function assert that\ncould throw an &AssertError if the test fails. In that case the\nfunction foo can also throw an error, and that must be written\nin the prototype of the function. Otherwise the compiler gives an\nerror.\nimport std::io\n\ndef foo (i : i32) \n{\n    assert (i \n\nErrors: \nError : the function main::foo might throw an exception of type &(core::exception::AssertError), but that is not declared in its prototype\n --> main.yr:(3,5)\n 3  ┃ def foo (i : i32) \n    ╋     ^^^\n    ┃ Note : \n    ┃  --> main.yr:(5,2)\n    ┃  5  ┃     assert (i \n\nAs previously stated, the name of the exceptions specified in the\nprototype function must be the actual name of the exception, not the\nname of an ancestor. In the following example, the class\nParentException and ChildException are two throwable\nclass. The function foo throws an object of type\nChildException, but the prototype declares that the function\nthrows a ParentException object. To avoid losing accuracy, the\nYmir language does not allow that. This is however still possible to\nperform this kind of behavior (necessary when the function throw\nmultiple kind of errors, all deriving from ParentException for\nexample), by using a cast, that we have seen in chapter Cast\nand Dynamic\ntyping. That way,\nthere is a loss of accuracy, but properly defined and intended by the\nuser.\n\nclass ParentException over Exception {\n    pub self () {}\n}\n\nclass ChildException over Exception {\n    pub self () {}\n}\n\ndef foo () \n    throws &ParentException\n{\n    throw ChildException::new ()\n}\n\n\nErrors: \nError : the function main::foo might throw an exception of type &(main::ChildException), but that is not declared in its prototype\n --> main.yr:(9,5)\n 9  ┃ def foo () \n    ╋     ^^^\n    ┃ Note : \n    ┃  --> main.yr:(12,5)\n    ┃ 12  ┃     throw ChildException::new ()\n    ┃     ╋     ^^^^^\n    ┗━━━━━┻━ \n\nError : the function main::foo prototype informs about a possible throw of an exception of type &(main::ParentException), but this is not true\n --> main.yr:(9,5)\n 9  ┃ def foo () \n    ╋     ^^^\n    ┃ Note : \n    ┃  --> main.yr:(10,12)\n    ┃ 10  ┃     throws &ParentException\n    ┃     ╋            ^\n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n"},"errors/scope_guards.html":{"url":"errors/scope_guards.html","title":"Scope guards","keywords":"","body":"1. Scope guards1.1. Success guard1.2. Failure guard1.3. Exit guard1.4. Scope guard priority1. Scope guards\nScope guards are expressions attached to a scope (block of code), that\nare executed on specific cases in the scope that is guarded. There are\nfour different scope guards, exit, failure, success\nand catch. This chapter does not discuss the catch scope\nguard, that will be discussed in the next chapter.\nThe syntax of exit, success and failure scope guards is the following: \nguarded_scope := '{' expression ((';')? expression)* (';')? '}' guards\nguards := (Guard expression)* ('catch' catching_expression)? (Guard expression)*\nGuard := 'exit' | 'success' | 'failure'\n\n1.1. Success guard\nScope guards are associate with expressions, that are executed when a\nspecific events occurs in the scope that is guarded. In the case of\nsuccess scope guard, the event that triggers the guard expression,\nis when no error occured (nothing was thrown in the scope). \nimport std::io;\n\ndef foo (i : i32)\n    throws &AssertError\n{\n    println (\"I : \", i);\n    assert (i \n\nResults: \nI : 1\nNothing was thrown !!\nI : 20\nUnhandled exception\nException in file \"/home/emile/ymir/Runtime/midgard/core/exception.yr\", at line 84, in function \"core::exception::abort\", of type core::exception::AssertError.\n╭  Stack trace :\n╞═ bt ╕ #1\n│     ╘═> /lib/libgyruntime.so:??\n╞═ bt ╕ #2\n│     ╘═> /lib/libgyruntime.so:??\n╞═ bt ╕ #3 in function core::exception::abort (...)\n│     ╘═> /home/emile/ymir/Runtime/midgard/core/exception.yr:84\n╞═ bt ╕ #4 in function main::foo (...)\n│     ╘═> /home/emile/Documents/test/ymir/main.yr:8\n╞═ bt ╕ #5 in function main (...)\n│     ╘═> /home/emile/Documents/test/ymir/main.yr:12\n╞═ bt ╕ #6\n│     ╘═> /lib/libgyruntime.so:??\n╞═ bt ╕ #7 in function main\n│     ╘═> /home/emile/Documents/test/ymir/main.yr:12\n╞═ bt ╕ #8\n│     ╘═> /lib/x86_64-linux-gnu/libc.so.6:??\n╞═ bt ═ #9 in function _start\n╰\nAborted (core dumped)\n\nThis scope guard can be used on scope that never throw exceptions, in\nthat case it is always executed. This goal of this scope guard is to\nexecute operation at the end of a scope, only when the operation\nsucceded (e.g. writting logs, sending acknolegement, etc.). It can be\ncoupled with other scope guards, to perform different operation when\nthe scope didn't succeded.\n1.2. Failure guard\nThe failure scope guard does the opposite of the success scope\nguard, meaning that the associated expression is only executed when an\nexception was thrown in the scope that is guarded. This scope guard is\nreally useful to perform operation without recovering from the\nerror. Indeed, the failure guard is not a catch guard, and the\nexecption that is thrown in the guarded scope continue its journey,\nbut the expression in the scope guard are guaranteed to be executed\n(e.g. logging the error, closing a socket, unlocking a mutex, etc.).\nimport std::io;\n\ndef foo (i : i32)\n    throws &AssertError\n{\n    println (\"I : \", i);\n    assert (i \n\nResults:\nI : 1\nI : 20\nWell there was an error...\nUnhandled exception\nException in file \"/home/emile/ymir/Runtime/midgard/core/exception.yr\", at line 84, in function \"core::exception::abort\", of type core::exception::AssertError.\n╭  Stack trace :\n╞═ bt ╕ #1\n│     ╘═> /lib/libgyruntime.so:??\n╞═ bt ╕ #2\n│     ╘═> /lib/libgyruntime.so:??\n╞═ bt ╕ #3\n│     ╘═> /lib/libgyruntime.so:??\n╞═ bt ╕ #4 in function main::foo (...)\n│     ╘═> /home/emile/Documents/test/ymir/main.yr:8\n╞═ bt ╕ #5 in function main (...)\n│     ╘═> /home/emile/Documents/test/ymir/main.yr:12\n╞═ bt ╕ #6\n│     ╘═> /lib/libgyruntime.so:??\n╞═ bt ╕ #7 in function main\n│     ╘═> /home/emile/Documents/test/ymir/main.yr:12\n╞═ bt ╕ #8\n│     ╘═> /lib/x86_64-linux-gnu/libc.so.6:??\n╞═ bt ═ #9 in function _start\n╰\nAborted (core dumped)\n1.3. Exit guard\nThe exit scope guard is the combination of the success and\nfailure guards. The operation contained in the guards are always\nexecuted, no matter what happened in the scope that is guarded. It can\nbe seen as a shortcut for the success and failure guards doing the\nsame operations, but avoiding code repetition.\nimport std::io;\n\ndef foo (i : i32)\n    throws &AssertError\n{\n    println (\"I : \", i);\n    assert (i \n\nResults:\nI : 1\nThe scope is exited, with an error or not, who knows\nI : 20\nThe scope is exited, with an error or not, who knows\nUnhandled exception\nException in file \"/home/emile/ymir/Runtime/midgard/core/exception.yr\", at line 84, in function \"core::exception::abort\", of type core::exception::AssertError.\n╭  Stack trace :\n╞═ bt ╕ #1\n│     ╘═> /lib/libgyruntime.so:??\n╞═ bt ╕ #2\n│     ╘═> /lib/libgyruntime.so:??\n╞═ bt ╕ #3\n│     ╘═> /lib/libgyruntime.so:??\n╞═ bt ╕ #4 in function main::foo (...)\n│     ╘═> /home/emile/Documents/test/ymir/main.yr:8\n╞═ bt ╕ #5 in function main (...)\n│     ╘═> /home/emile/Documents/test/ymir/main.yr:12\n╞═ bt ╕ #6\n│     ╘═> /lib/libgyruntime.so:??\n╞═ bt ╕ #7 in function main\n│     ╘═> /home/emile/Documents/test/ymir/main.yr:12\n╞═ bt ╕ #8\n│     ╘═> /lib/x86_64-linux-gnu/libc.so.6:??\n╞═ bt ═ #9 in function _start\n╰\nAborted (core dumped)\n1.4. Scope guard priority\nIt is possible to use multiple scope guards for the same scope. In\nthat case, the order of execution of the scopes is the following :\n\n1) for the scope guards of same nature (e.g. two failure guards),\nthe execution is done is the order they are written.\n\nimport std::io;\n\ndef main () \n{\n    {\n        println (\"Scope operation\");\n    } exit {\n        println (\"Exit 1\"); \n    } exit {\n        println (\"Exit 2\");\n    }\n}\n\n\nResults: \nScope operation\nExit 1\nExit 2\n\n\n2) If there is an exit guard and a success or a failure guard,\nthen the success and failure guards are executed first.\n\nimport std::io;\n\ndef main () \n{\n    {\n        println (\"Scope operation\");\n    } success {\n        println (\"Success\");\n    } exit {\n        println (\"Exit 1\"); \n    } exit {\n        println (\"Exit 2\");\n    } success {\n        println (\"Success 2\");\n    } \n}\n\n\nResults: \nScope operation\nSuccess\nSuccess 2\nExit 1\nExit 2\n\n\n3) The priority between failure and success is not defined, they\nsimply cannot happen at the same time.\n\n"},"errors/catching.html":{"url":"errors/catching.html","title":"Catching","keywords":"","body":"1. Catching exceptions1.1. Catch everything1.2. Catch a specific exception1.3. Rethrowing exceptions1.4. Catch as a value1.5. Catch along other scope guards1. Catching exceptions\nThe main idea of exception is the possibility to recover from a\nfailing program state. In order to do that, another scope guard exits\nin Ymir, this scope guard is named catch. The syntax of this scope\nguard is relatively close to the other scope guard, and to the pattern\nmatching. Indeed, this scope guard does not execute an expression but\nmatch over an exception that has been caught. The following code block\npresent the grammar of the catch scope guard. The\npattern_expression used in this code block are those defined in the\nchapter Pattern\nmatching.\nguarded_scope := '{' expression ((';')? expression)* (';')? '}' guards\nguards := (Guard expression)* ('catch' catching_expression)? (Guard expression)*\nGuard := 'exit' | 'success' | 'failure'\n\ncatching_expression := pattern_var | pattern_call | '_'\n\npattern_var := (Identifier | '_') ':' (type | '_') ('=' pattern_expression)?\npattern_call := (type | '_') '(' (pattern_argument (',' pattern_argument)*)? ')'\npattern_arguments := (Identifier '->')? pattern_expression\n\n1.1. Catch everything\nCatch scope guard can be used to catch any exception and continue\nthe execution of the program. In the following example, the main\nfunction calls the foo function, that throws an\n&AssertError. The call is guarded by a catch expression, that\ncatch every kind of Exception (using the _ token). Because\nthe exception of the foo function is caught the main\nfunction is considered safe, and thus cannot throw an exception, this\nis why nothing is declared in its prototype. In this example, the\nprogram ends normaly, after exiting the main function.\nimport std::io;\n\ndef foo (i : i32) \n    throws &AssertError\n{\n    assert (i  {\n            println (\"Foo failed\");\n        }\n    }\n    println (\"After foo\");\n}\n\n\nResults: \nBefore foo\nFoo failed\nAfter foo\n\nA variable pattern can also be used to get the value of the\nexception. There is no much change in the following example, in\ncomparison to the previous one, except that the main function\nprints the exception that has been throw by the foo function. In\ndebug mode (-g option of the compiler), when throwing an\nexception, the stack trace is accessible and printed, when printing an\nexception. This stack trace (for efficiency reasons) is not created in\nrelease mode.\nimport std::io;\n\ndef foo (i : i32) \n    throws &AssertError\n{\n    assert (i  {\n            println (\"Foo failed : \", err);\n        }\n    }\n    println (\"After foo\");\n}\n\n\nResults: \nBefore foo\nFoo failed : core::exception::AssertError (i must be lower than 10):\n╭  Stack trace :\n╞═ bt ╕ #1 in function core::exception::AssertError::self (...)\n│     ╘═> /home/emile/ymir/Runtime/midgard/core/exception.yr:49\n╞═ bt ╕ #2 in function core::exception::abort (...)\n│     ╘═> /home/emile/ymir/Runtime/midgard/core/exception.yr:84\n╞═ bt ╕ #3 in function main::foo (...)\n│     ╘═> /home/emile/Documents/test/ymir/main.yr:7\n╞═ bt ╕ #4 in function main (...)\n│     ╘═> /home/emile/Documents/test/ymir/main.yr:14\n╞═ bt ╕ #5\n│     ╘═> /lib/libgyruntime.so:??\n╞═ bt ╕ #6 in function main\n│     ╘═> /home/emile/Documents/test/ymir/main.yr:10\n╞═ bt ╕ #7\n│     ╘═> /lib/x86_64-linux-gnu/libc.so.6:??\n╞═ bt ═ #8 in function _start\n╰\nAfter foo\n1.2. Catch a specific exception\nThe content of a catch scope guard is a list of patterns, that can\nbe used to get a different behavior for different kind of\nexception. In the following example, the foo function, can throw\ntwo different kind of exception, &AssertError and\n&OutOfArray. The catch of the main function has a\ndifferent behavior if the exception that is thrown is a\n&AssertError or a &OutOfArray, (by using a variable pattern\nfor &AssertError, and a call pattern for &OutOfArray).\nimport std::io;\n\ndef foo (i : [i32]) \n    throws &AssertError, &OutOfArray\n{\n    assert (i [0]  {\n            println (\"Foo failed : \", err);\n        }\n        OutOfArray () => {\n            println (\"Foo failed, the slice was empty\");\n        }\n    }\n    println (\"After foo\");\n}\n\n\nResults: \nBefore foo\nFoo failed, the slice was empty\nAfter foo\n\n1.3. Rethrowing exceptions\nCatch scope guard must catch every exceptions that are thrown by the\nscope that is guarded. For example, if the main function of the\nprevious example, was defined as presented in the next code block, the\ncompiler would have returned an error. Indeed, in this example, the\n&OutOfArray exception is not managed by the catch guard.\ndef main () {\n    println (\"Before foo\");\n    { \n        foo ([]); \n    } catch {\n        err : &AssertError => {\n            println (\"Foo failed : \", err);\n        }\n    }\n    println (\"After foo\");\n}\n\n\nErrors:\nError : the exception &(core::array::OutOfArray) might be thrown but is not caught\n --> main.yr:(13,7)\n13  ┃         foo ([]); \n    ╋             ^\n    ┃ Note : \n    ┃  --> main.yr:(14,4)\n    ┃ 14  ┃     } catch {\n    ┃     ╋       ^^^^^\n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n\nThe OutOfArray exception can be rethrown inside the catch\nscope guard to remove this error. In that case the stack trace is\nstill correct, as it is created by the constructor of the\nException class.\ndef main () \n    throws &OutOfArray\n{\n    println (\"Before foo\");\n    { \n        foo ([]); \n    } catch {\n        err : &AssertError => {\n            println (\"Foo failed : \", err);\n        }\n        x : &OutOfArray => throw x;\n    }\n    println (\"After foo\");\n}\n\n1.4. Catch as a value\nIn some cases (many cases), a scope is used to compute a value. In\nthat circumstance, if an error occurs inside the scope, the value of\nthe scope is not set, and cannot be used. For example, in the\nfollowing source code, the main function tries to initialize a\nvariable from the value of the foo function. This function is\nnot safe, and might return no value at all. In order to guarantee,\nthat the variable x is initialized, and usable no matter what\nhappened in the foo function, the catch scope guard can be\nused as the default value. This is presented as well at line 21\nto initialize the variable y.\nimport std::io;\n\ndef foo (i : i32) \n    throws &AssertError\n{\n    assert (i  {\n            println (\"Foo failed\");\n        }\n    }\n\n    let y = {\n        foo (10)\n    } catch {\n        _ => {\n            42\n        }\n    }\n\n    println (y);\n}\n\n\nResults: \nFoo failed\n42\n\nBecause, the catch scope guard is a pattern matching, multiple\nbranch can be entered. In that case, every branch of the catch guard\nmust share the same type. In the following example, the value y\nis set conditionaly, depending on the type of exception that is thrown\nby the foo function, or if the function foo succeeds. In\nthis example, the foo function throws a &OutOfArray\nexception, thus the variable y is set to 42 (value\ncomputed at line 19).\nimport std::io;\n\ndef foo (i : [i32]) -> i32\n    throws &AssertError, &OutOfArray\n{\n    assert (i[0]  {\n            11\n        }\n        OutOfArray () => {\n            42\n        }\n    }\n\n    println (y);\n}\n\n\nResults: \n42\n1.5. Catch along other scope guards\nCatch scope guards can be used along other scope guards, (success,\nfailure and exit), but there can be only one catch scope guard\nper scope . In that case the priority is the following: 1) failure,\n2) catch, 3) exit. If there is a success scope guard that is\nexecuted, then the catch scope guard cannot be executed, so the\npriority over these two guards is not defined.\nimport std::io;\n\ndef foo (i : [i32]) \n    throws &AssertError, &OutOfArray\n{\n    assert (i [0]  {\n            println (\"Foo failed : \", err);\n        }\n        _ : &OutOfArray => {\n            println (\"Out\");\n        }\n    } success {\n        println (\"Succ\");\n    } failure {\n        println (\"Fails\");\n    } exit {\n        println (\"Exit\");\n    }\n    println (\"After foo\");\n}\n\n\nResults:\nBefore foo\nFails\nOut\nExit\nAfter foo\n\nThe behavior is exactly the same when catch scope guard has a value.\nimport std::io;\n\ndef foo (i : [i32]) -> i32\n    throws &AssertError, &OutOfArray\n{\n    assert (i[0]  {\n            println (\"Assert\");\n            11\n        }\n        OutOfArray () => {\n            println (\"Out\");\n            42\n        }\n    } failure {\n        println (\"Fails\");\n    } exit {\n        println (\"Exit\");\n    }\n\n    println (y);\n}\n\n\nResults: \nFails\nOut\nExit\n42\n"},"errors/option.html":{"url":"errors/option.html","title":"Exception and option type","keywords":"","body":"1. Relation between exception and option type1.1. Empty option without exception1.2. Void option type1. Relation between exception and option type\nWe have seen in the chapter Basic programming\nconcept,\nthat the Ymir language have a primitive option type. This type has a\nreally close relation with exceptions. Indeed, any value can be store\ninside an option type, and any failing scope can be used to create an\nempty option value. The token ? is used to transform a value\ninto an option type. \nIn the following example, the foo function can throw an\nexception. The main function calls it, but use enclose the\nresult inside an option type, to handle the errors. The type of the\nvariable x is then (i32)?, meaning option of i32.  A\npattern matching, is then used to check wether the x contains a\nvalue or not. In this example, a new pattern of the pattern matching\nis presented. This pattern is specific to the case of option type, and\nadds two keywords Ok, and error Err. They can be used with\nor without internal pattern (never named), to get the content of the\noption (in case of Ok), or the exception (in case of Err).\nimport std::io;\n\ndef foo (i : i32)-> i32 \n    throws &AssertError\n{\n    assert (i  { \n            println (\"x contains the value : \", y);\n        }\n        Err (err : _) => {\n            println (\"x has no value, because : \", err);\n        }\n    }\n}\n\n\nResults (in release mode) : \nx has no value, because : core::exception::AssertError (i must be lower than 10)\n\nOne can note from the previous example, that the main function\nis safe. The option enclosing catches every exceptions. The exception\ncan then be retreived by using a pattern matching, as presented above.\nWarning Unfortunately, the accuracy of the exception type that is\nthrown is lost at compile time, (i.e. the type contained inside an\noption type is Exception). Even, if the type can be specifically\nretreived at execution time. To remove this limitation, the different\ntype of exception would have to be written in the definition of the\noption type. This would be extremely verbose. Contribution Maybe\nadding the possibility to write it, but optionaly, in order to store\nit if possible. I don't know if it is a good idea.\n1.1. Empty option without exception\nIt is possible to initialize an empty option value without throwing an\nexception. This can be done using the type specific attribute\nerr. In that case, the option does not have a value, even if it\nis an Err value. \nimport std::io;\n\ndef foo ()-> i32? {\n    (i32?)::__err__\n}\n\ndef main () {\n    match foo () {\n        Err (err : _) => {\n            println (\"Empty but with exception : \", err);\n        }\n        Err () => {\n            println (\"Totally empty, init with __err__\");\n        }\n    }\n}\n\n\nResults: \nTotally empty, init with __err__\n1.2. Void option type\nOption type can store values of type void, in that case the\nOk pattern has no value to get. This can be usefull to execute a\nfunction, and verify afterwards if it succeeded or not.\nimport std::io;\n\ndef foo (i : i32)-> void \n    throws &AssertError\n{\n    assert (i  { \n            println (\"Foo succeeded\");\n        }\n        Err (err : _) => {\n            println (\"Foo failed, because : \", err);\n        }\n    }\n}\n\n\nResults: \nFoo failed, because : core::exception::AssertError (i must be lower than 10)\n"},"errors/fptr_closure.html":{"url":"errors/fptr_closure.html","title":"Unsafe function pointer","keywords":"","body":"1. Function pointer and closure1.1. Create function pointer from unsafe function1. Function pointer and closure\nIt is impossible to create a function pointer or closure from a\nfunction that can throw exceptions. Indeed, because funtion pointers\ntype definition does not include the possibility to throw exception\n(and will not for verbosity, and annoyance reason), the Ymir\nlanguage does not allow them to throw exception, in order to keep the\nguarantee of safety introduced by exception rethrowing. For that\nreason, the following example is not accepted by the compiler.\nimport std::io;\n\n\ndef main () {\n    let x = |i : i32| => {\n        assert (i \n\nErrors: \nError : a lambda function must be safe, but there are exceptions that are not caught\n --> main.yr:(5,13)\n 5  ┃     let x = |i : i32| => {\n    ╋             ^\n    ┃ Note : &(core::exception::AssertError)\n    ┃  --> main.yr:(6,9)\n    ┃  6  ┃         assert (i  main.yr:(10,6)\n10  ┃      x (10);\n    ╋      ^\n\n\nymir1: fatal error: \ncompilation terminated.\n\n \nTo avoid that problem, every exception must be caught inside the lambda function.\n1.1. Create function pointer from unsafe function\nSometimes it can be usefull to create function pointer from functions\nthat are not safe (for example the function foo in the following\nexample). To do that, the core modules, define a template function\n(cf. Templates,\nnamed toOption that transform a function symbol, into another\nfunction symbol that returns an option value. This other function\nsymbol can be used to create a function pointer, using the ampersand\n(&) unary operator.\nimport std::io;\n\ndef foo (i : i32)-> void\n    throws &AssertError\n{\n    assert (i \n\nResults: \nErr(core::exception::AssertError (i must be lower than 10))\n3\nOk()\n\nContribution This is not possible for method delegate. \n"},"templates/":{"url":"templates/","title":"Templates","keywords":"","body":"1. Templates1.1. Template definition syntax1.2. Template argument syntax1.2.1. Template instanciation1.2.2. Multiple template parameters1.2.3. Template class instanciation1. Templates\nThe templates system provide the possibility to reuse source code,\nthat is valid for multiple types. The template system of Ymir is\npowerful, and allows the generation of code, that will be used many\ntimes for many purpose, by writting minimal source code, and\nconditional compilation. Templates is a main part of the Ymir\nlanguage, and almost everything in the standard library is written\nusing templates. It is important to understand the template system, to\nuse the language.\n1.1. Template definition syntax\nMultiple symbols in Ymir can be templates. Every template symbol has\na name, and the template parameters are following that name enclosed\nbetween curly brackets (this time they are always mandatory). For\nexample, a function can be a template, as it can be seen in the\nfollowing example. In this example, the function foo takes a\ntype as template parameter, and this type is named T in the\nfunction symbol, and is used as the type of the first parameter of the\nfunction (i.e. the type of the parameter a). By convention, the\nidentifiers of the template parameters are in upper case, however that\nis not mandatory.\ndef foo {T} (a : T) {\n    println (a);\n}\n\n\nOther symbols can also be templates. These symbols are : \n\nClasses\nStructures\nEnumerations\nLocal modules\nTraits\nAka\n\nThe templates arguments always follows the name of the symbol. In the\nfollowing example, templates are defined for various symbols.\nclass A {T} {\n    let value : T;\n\n    pub self (v : T) with value = v {}\n}\n\nstruct \n| x : T\n-> S {T};\n\nenum \n| X = cast!T (12)\n-> F {T};\n\nmod Inner {T} {\n    pub def foo (a : T) {\n        println (a);\n    }\n}\n\ntrait Z {T} {\n    pub def foo (self, a : T)-> T;\n}\n\naka X {T} = cast!T (12);\n\n\n1.2. Template argument syntax\nThe template call syntax is declared using the token !, followed\nby one are multiple arguments, enclosed inside curly\nbrackets. Template arguments are elements that must be known by the\ncompiler at compile time, in order to produce a valid template\nspecialization and create a symbol that can be used and is fully\nvalidated (i.e. where every types are correctly defined). The\nfollowing code block present the syntax of the template\ncall. Template call is a high priority expression, that has a even\nhigher level of priority than the :: operator, and unary\noperators. Operator priority is presented in the chapter Operator\npriority.\ntemplate_call := expression (single_arg | multiple_args) \nsingle_arg := '!' expression \nmultiple_args := '!' '{' (expression | template_call) (',' (expression | template_call))*)? '}'\n\n\nAnd the following code block presents example of template call on a\nfunction named foo.\nfoo!i32 (12); // One template argument (i32)\nfoo!(i32, f32) (12); // One template tuple (i32, f32)\nfoo!{i32, f64} (12); // Two template arguments, types i32 and f64\n\n\nWhen the arguments, are also template, the curly brackets are\nmandatory even if there is only one parameter, to avoid ambiguity.\nfoo!{foo!i32} (); // Ok\nfoo!foo!i32 (); // No\n\n\n1.2.1. Template instanciation\nWhen a template symbol is defined, the template call is used to\nreference it, and make a specialization. The arguments used in the\ntemplate call are associated to the template parameters of the\ntemplate symbol, in the order they are defined. In the following\nexample, a function foo has a template argument, that must be a\ntype, and is named T. The main function use the template\ncall syntax to use that symbol, and associate to T the type\ni32. The symbol with a i32 is then created by the\ncompiler, and the main function calls it using the standard call\nsyntax using the parentheses operator.\nimport std::io;\n\ndef foo {T} (a : T) {\n    println (a);\n}\n\ndef main () {\n    foo!i32 (42);\n}\n\n\nResults: \n42\n\nWhen the template symbol is a function, it can happened that the\ntemplate parameters can be infered from the parameters of the\nfunction. For example in the above example, there is no need to\nspecify a template call, and the standard call expression is\nsufficient.\nimport std::io;\n\ndef foo {T} (a : T) {\n    println (a);\n}\n\ndef main () {\n    foo (42); // T, is infered as i32\n    foo (\"Hi !!\"); // T, is infered as a [c32]\n}\n\n\nResults: \n42\nHi !!\n\nThis cannot be done for structure or module. However, this is possible\nto do on classes, and this will be presented a little later, in the\nfollowing section of the chapter. \nWe have seen in the chapter about\nfunction (cf.\nFunctions),\nthe uniform call syntax. This syntax is also applicable on template\nfunctions. In the following example, a function that takes two types\nas template parameters is called in the main function.\nimport std::io;\n\ndef foo {T} (a : T) {\n    println (a);\n}\n\ndef main () {\n    (42).foo (); \n}\n\n1.2.2. Multiple template parameters\nAs said earlier the parameters are specialized using the arguments of\nthe template call syntax in the order they are presented. For\nexample, in the following example, the template call syntax at line\n1 creates a symbol where T=i32, and U=f64.\ndef foo {T, U} () {}\n\ndef main () {\n    foo!{i32, f64} ();\n}\n\n\nIt is not necessary to put all the argument in the other template\nparameters can be infered from the previous template arguments, or by\nthe parameters of the function. We will see in a next chapter some way\nto determine the kind of type that can be used in a template symbol,\nbut briefly in the following example, the foo function only\naccepts types that are slices of U, where U can\nbe any type. In that case, because T can be used to infer the\ntype of U, there is no need to specify the type of U\nexplicitly.\nimport std::io;\n\ndef foo {T of [U], U} () {\n    println (\"T=\", T::typeid, \" U=\", U::typeid);\n}\n\ndef main () {\n    foo![i32] ();\n}\n\n\nResults: \nT=[i32] U=i32\n\nThe same behavior can be observed when the type can be infered from a\nstandard parameter of the function. In the following example, the type\nT is defined by the template call syntax, but the type U\nis defined by the first argument of the standard call. Thus, type\nT is i32, and type U is f64.\nimport std::io;\n\ndef foo {T, U} (a : U) {\n    println (\"T=\", T::typeid, \" U=\", U::typeid, \" a=\", a, \"\");\n}\n\ndef main () {\n    foo!i32 (3.14);\n}\n\n\nResults:\nT=i32 U=f64 a=3.140000\n\nOne can note that the type T cannot be infered from anything\naside the template call. Thus it has to be the first template\nparameter, otherwise the template call would have defined the type\nU. In the following example, the parameter T and U\nhave been reversed, but the call is the same. In that case, the\ncompiler fails to create a valid symbol and throws an error.\nimport std::io;\n\ndef foo {U, T} (a : U) {\n    println (\"T=\", T::typeid, \" U=\", U::typeid, \" a=\", a, \"\");\n}\n\ndef main () {\n    foo!i32 (3.14); // set U to i32, and T cannot be infered\n}\n\n\nErrors (in this error, we can see that U is set to i32 at line 10, and that the compiler failed to set T) :\nError : the call operator is not defined for foo {T}(a : U)-> void and {f64}\n --> main.yr:(8,10)\n 8  ┃     foo!i32 (3.14);\n    ╋             ^    ^\n    ┃ Note : candidate foo --> main.yr:(3,5) : foo {T}(a : U)-> void\n    ┃     ┃ Error : unresolved template\n    ┃     ┃  --> main.yr:(3,13)\n    ┃     ┃  3  ┃ def foo {U, T} (a : U) {\n    ┃     ┃     ╋             ^\n    ┃     ┃ Note : for : foo --> main.yr:(3,5) with (U = i32)\n    ┃     ┗━━━━━━ \n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n\nUsing the template call syntax to set only a part of the template\nsymbols is named a two time template validation. We will see in the\nnext chapter, that template specialization can be very powerful and\ncan be used to choose between multiple template symbols. Refering to a\ntemplate symbol without using the template call syntax can be seen\nas a special case of two time validation, where the template call\nis made but with no arguments. \n1.2.3. Template class instanciation\nWhen a class template is declared, the compiler is sometimes able to\ninfer the type of the templates from the argument passed to the\nconstructors. The rule is the same as for function instanciation. In\nthe following example, the class X is a template class that\ntakes two types as template parameters. The main function\ninstanciate a X class at line 10 without using the\ntemplate call syntax. This is possible, because the constructor of\nthe class at line 6 is sufficient to infer the types T and\nU exactly as it would be done if it was a function\ntemplate. Because T and U has no restriction any type can\nbe used.\nimport std::io;\n\nclass X {T, U} {\n    let x : T, y : U;\n\n    pub self (x : T, y : U) with x = x, y = y {}    \n}\n\ndef main () {\n    let a = X::new (1, 'r');\n    let b = X::new ([1, 2], \"foo\");\n\n    println (a::typeinfo.name);\n    println (b::typeinfo.name);\n}\n\n\nResults: \nmain::X(i32,c32)::X\nmain::X([i32],[c32])::X\n\nA two time validation can also be used to set the types of a part of\nthe template parameters, and let the other be infered by the\nconstructor call. In the following example, the type T is set by\nthe template call syntax, and the type U is infered from the\ntype of the parameter y of the constructor (here c32).\nimport std::io;\n\nclass X {T, U} {\n    let y : U;\n\n    pub self (y : U) with y = y {}    \n}\n\ndef main () {\n    let x = X!(i32)::new ('r');\n    println (x::typeinfo.name);\n}\n\n\nResults: \nmain::X(i32,c32)::X\nContribution other template symbols cannot be called without\ntemplate call. This is normal for modules, traits, and enumeration,\nas nothing can be used to infer the types. But structures are called\nusing arguments, that are used to set the values of the fields, this\nis thus possible to infer the templates types in that case. Has to be\ndone, though.\n"},"templates/special.html":{"url":"templates/special.html","title":"Template types","keywords":"","body":"1. Template specialization1.1. Of filter1.2. Struct and Class filters1.3. Implement filter1.4. Variadic templates1.4.1. Recursive variadic template1. Template specialization\nWe have seen in the last chapter, the declaration of template symbol,\nthat can be instanciated using any types. Sometimes, it can be usefull\nto restrict the set of types that can be used in a given template\nsymbol (e.g. only slices but of any type, only classes, only\nstructures, etc.). In order to make this possible, the Ymir language\noffers some elements to filter the different types that can be used.\nThe following code block present the complete syntax of a template\nparameter.\ntemplate_parameter := Identifier | of_filter | class_filter | struct_filter | impl_filter | variadic_filter\n\nof_filter := Identifier 'of' type\nclass_filter := 'class' Identifier\nstruct_filter := 'struct' Identifier\nimpl_filter := Identifier impl type\nvariadic_filter := Identifier '...'\n\n\nOne can note that every template parameters have an Identifier. This\nidentifier are the root of the specialization tree. For example, in\nthe following template parameters {T of [U], U} there are two\nroots, T and U. The root U is important, these\ntemplate parameters are different to {T of [U]}. In the first\ncase, the identifier U refers to a template type (as it is a\nroot of the parameters), and in the second case it refers directly to\na type that is named U, and that has to be declared somewhere.\n1.1. Of filter\nThe of filter is declared using the keyword of. This filter is\nused to specify the form of the type that can be used to instanciate\nthe template. The form can be any form of type, it can be for example\na slice, an array, a template symbol, etc. In the following example,\nthe first function foo declared at line 6, is a template\nfunction that can be instanciated using only T=i32. The second\nfunction foo at line 14 use the of filter to inform\nthat the type T must have the same form as the type Z, but\ndoes not filter the type Z. The third function foo at line\n21, accepts for the type T any slice that have as internal\ntype a template type declared as Z, there is no filter on\nZ.\nimport std::io;\n\n/**\n * This function will only be callable, with a i32 as T\n */\ndef foo {T of i32} (_ : T) {\n    println (\"First ??\");\n}\n\n/**\n * This function will only be callable, with a type that fit the Z pattern\n * That is to say every type\n */\ndef foo {T of Z, Z} (_ : T) {\n    println (\"Second ?\");\n}\n\n/**\n * This function will be only callable, with a slice of Z, where Z can be anything\n */\ndef foo {T of [Z], Z} (_ : T) {\n    println (\"Third !\");\n}\n\ndef main () {\n    foo ([1, 2]);\n}\n\n\nIn the above example, one can note that, two functions can be called\nby the expression foo ([1, 2]). The second and third ones. The\ntemplate definition that match the best the types, will be used. Here,\nthis is the third one, the filter is more specific and thus has a\nbetter score.\nResults: \nThird !\n\nThe of filter is a kind of destructuring pattern. They can be\nchained, and composed with other filters. Here some other example,\nwhere this time the of filter is used to get the template types\nparameters of a given class type, and apply some filter on them.\nimport std::io;\n\n/** A template class, that takes any type as template parameters */\nclass X {T} {\n    let _x : T;\n\n    pub self (x : T) with _x = x {}\n}\n\n/**\n * This function accepts any X object, as long as its template parameter is a slice\n */\ndef foo {T of &(X!{U}), U of [Z], Z} (x : T) {\n    println (\"Slice X : \", x::typeinfo.name);\n}\n\n/**\n * Accept all the X objects, that have not been accepted by the first function\n * Indeed, the template is less specific, and is used only if the first one fails\n */\ndef foo {T of &(X!{U}), U} (x : T) {\n    println (\"Not a slice X : \", x::typeinfo.name);\n}\n\n\ndef main () {\n    let a = X::new ([1, 2, 3]);\n    let b = X::new (\"Test\");\n    let c = X::new (23.0f);\n\n    foo (a);\n    foo (b);\n    foo (c);\n}\n\n\nResults: \nSlice X : main::X([i32])::X\nSlice X : main::X([c32])::X\nNot a slice X : main::X(f32)::X\n\nAs presented in the introduction of this chapter, there is a\ndifference between identifier that can be found in the roots of the\ntemplate parameters and those which are not. In the following example,\nthe foo function accept a slice of U where U is not\ndefined, resulting in an error by the compiler. Indeed, the type\nU could have been defined somewhere, and there must be a\ndistinction between this type and a template parameter.\nimport std::io;\n\ndef foo {T of [U]} (a : T) {}\n\ndef main () {\n    foo ([1, 2]);\n}\n\n\nErrors: \nError : the call operator is not defined for foo {T of [U]}(a : T)-> void and {mut [mut i32]}\n --> main.yr:(6,6)\n 6  ┃     foo ([1, 2]);\n    ╋         ^      ^\n    ┃ Note : candidate foo --> main.yr:(3,5) : foo {T of [U]}(a : T)-> void\n    ┃     ┃ Error : undefined type U\n    ┃     ┃  --> main.yr:(3,16)\n    ┃     ┃  3  ┃ def foo {T of [U]} (a : T) {}\n    ┃     ┃     ╋                ^\n    ┃     ┗━━━━━┻━ \n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n1.2. Struct and Class filters\nThe keywords struct and class defines respecitvely the struct\nand class filters. They filter the accepted types of a template\nsymbol. Unlike of filter they cannot be chained, and accept only an\nidentifier. In the following example, the first foo function at\nline 11 is instanciable using a class type, and the second at\nline 15 only accept struct types. Warning class filter\naccepts a reference class type, and not directly the class type\n(&A not A).\nimport std::io\n\nstruct \n| x : i32\n-> X;\n\nclass A {\n    self () {}\n}\n\ndef foo {class T} () {\n    println (\"Class !\");\n}\n\ndef foo {struct T} () {\n    println (\"Struct !\");\n}\n\ndef main () {\n    foo!(&A) ();\n    foo!(X) ();\n}\n\n\nResults:\nClass !\nStruct !\n\nEven if this filters cannot be chained, they can be used as the leaf\nof a of filter. In the following example, the function foo\naccepts a slice of class objects.\nimport std::io;\n\nclass A {\n    pub self () {}\n    impl Streamable;\n}\n\nclass B {\n    pub self () {}\n    impl Streamable;\n}\n\ndef foo {T of [U], class U} (a : T) {\n    println (T::typeid, \" = \", a, \"\");\n}\n\ndef main () {\n    foo ([A::new (), A::new ()]);\n    foo ([B::new ()]);\n}\n\n\nResults: \n[&(main::A)] = [main::A(), main::A()]\n[&(main::B)] = [main::B()]\n1.3. Implement filter\nWe have seen in the chapter about traits\n(cf. Traits),\nthat class type can implement a given trait. Implementing a trait\ngives specific method to a class type, that can be called. However\ntraits lose most of their interest if it is impossible to accept a\ntype that implements the trait without knowning the type itself. This\ncannot be done by inheritance, as traits are not types, however\ntemplates have a specific filter to perform this operation. In the\nfollowing example, the impl filter is used by the foo\nfunction, that thus accepts any kind of object as long as they impl\nthe trait Getter.\nimport std::io;\n\ntrait Getter {\n    pub def get (self)-> i32;\n}\n\nclass A {\n\n    pub self () {}\n\n    impl Getter {\n        pub over get (self)-> i32 {\n            12\n        }\n    }\n\n}\n\ndef foo {T impl Getter} (a : T) -> i32 {\n    a.get ()\n}\n\ndef main () {\n    let a = A::new ();\n    println (foo (a));\n}\n\n\nA trait can be a template symbol. In that case it has some template\nparameters, that can be destructured by a template filter. For\nexample, in the following source code, the trait Getter is a\ntemplate, that is implemented using the type i32 by the class\nA. The first foo function at line 1 accepts any kind\nof object as long as they impl the trait Getter, and filter the\ntemplate parameter of this trait to get it under the identifier\nX. The second foo function only accepts types that\nimplements the trait but using a slice. Because the second foo\nfunction is more specific when using &B object, it is called at\nline 44.\nimport std::io;\n\ntrait Getter {T} {\n    pub def get (self)-> T;\n}\n\nclass A {\n\n    pub self () {}\n\n    impl Getter!{i32} {\n        pub over get (self)-> i32 {\n            12\n        }\n    }\n}\n\nclass B {\n\n    pub self () {}\n\n    impl Getter!{[i32]} {\n        pub over get (self)-> [i32] {\n            [12, 24]\n        }\n    }\n}\n\ndef foo {T impl Getter!{X}, X} (a : T) -> X {\n    print (\"First : \");\n    a.get ()\n}\n\ndef foo {T impl Getter!{X}, X of [U], U} (a : T)-> X {\n    print (\"Second : \");\n    a.get ()\n}\n\ndef main () {\n    let a = A::new ();\n    let b = B::new ();\n\n    println (foo (a));\n    println (foo (b));\n}\n\n\nResults: \nFirst : 12\nSecond : [12, 24]\n\n1.4. Variadic templates\nVariadic templates are special templates, that takes an arbitrary\nnumber of type as arguments. They are defined using an identifier\nfollowed by the token .... When the specialization is done, the\nidentifier of the variadic template, can be used to define a tuple\ntype. In the following example, the type of the parameter a of\nthe foo function is (i32, i32, i32, i32, i32). Warning\nIf only one type is given to the variadic template, then it is not a\ntuple, but directly the type that has been given. As you may have\nguessed by now, the println function is a variadic template\nfunction.\nimport std::io\n\ndef foo {T ...} (a : T) {\n    println (a.0, expand a);\n}\n\ndef main () {\n    foo (1, 2, 3, 4, 5);\n}\n\n\nResults: \n112345\n\nThe identifier can also be used to complete another type. For example,\na function pointer type. In the following source code, the structure\nX accepts an arbitrary number of type as template parameters,\nand use them to form the type of the field foo. When\ninstanciated by the main function at line 12, the field\nfoo takes the type fn (i32, f32)-> void.\nimport std::io\n\nstruct \n| foo : fn (T)-> void\n -> X {T...};\n\ndef foo (x : i32, y : f32)-> void {\n    println (\"(\", x, \", \", y, \")\");\n}\n\ndef main () {\n    let x = X!{i32, f32} (&foo);\n    x.foo (12, 3.14f);\n}\n\n\nResults: \n(12, 3.140000)\n\nTo force the type to be a tuple inside another type, the standard\nsyntax of tuple can be used. For example, the field foo could\nhave been defined as follows fn ((T,))-> void, in that case it\nwould have been equal to fn ((i32, f32))-> void, meaning a\nfunction pointer that takes a parameter of type (i32, f32), and\nreturns nothing.\n1.4.1. Recursive variadic template\nVariadic template must contain at least one type. To perfom recursive\nvariadic function, end case functions must be written, this end case\ngenerally contains a standard template parameter. For example, the\nfollowing example presents a foo function that takes variadic\nparameters, and prints them. The end case is described at line\n3, where the function takes only one standard template\nparameter. The function foo at line 8 takes two template\nparameter, a standard one that will be used for the first parameter of\nthe function, and a variadic one for the rest of the parameters. One\ncan note from the line 5 that even if the type of b is\nc8 and thus not a tuple, the keyword expand is usable, and\ndoes nothing particular.\nimport std::io;\n\ndef foo {F, R...} (a : F, b : R) {\n    println (\"FST : \", F::typeid, \"(\", a, \")\");\n    foo (expand b);\n}\n\ndef foo {F} (a : F) {\n    println (\"SCD : \", F::typeid, \"(\", a, \")\");\n}\n\ndef main () {\n    foo (1, 3.f, \"Test\", 'r'c8);\n}\n\n\nResults: \nFST : i32(1)\nFST : f32(3.000000)\nFST : [c32](Test)\nSCD : c8(r)\n"},"templates/cte.html":{"url":"templates/cte.html","title":"Template values","keywords":"","body":"1. Template values1.1. Compilation time values1.2. Values as template parameter1.2.1. Template literal1.2.2. Template variable1.2.3. Template type for template variable1.3. Function pointers1. Template values\nIn Ymir, templates are seen as compilation time execution\nparameters. These parameters can be either types or values. When\ndealing with values, as with any values, decisions and program\nbranching can be made, but because these values are known at\ncompilation time, the decisions can also be made at compilation\ntime. This system is called compilation time execution or cte for\nshort. The keyword cte is used to ensure that a part of the code\nis executed at compilation time, and generates a value (that can be\nvoid) at compilation as well, to save time at execution time and\nhave a better optimized executable.\n1.1. Compilation time values\nBasically, every values can be known at compilation time as long as\nthey do not implies variable, or dynamic branching. For example, the\nvalue of the foo function in the following source code can be\nknwon at compilation time. Indeed, it implies only constants, that can\nbe computed by the compiler directly. The main function uses the\nkeyword cte to force the compiler to call the function foo\nduring the compilation. If the keyword is omitted then the function\nfoo is called at execution time.\nimport std::io;\n\ndef foo () -> i32 {\n    bar () + baz ()\n}\n\ndef bar () -> i32 \n    12\n\ndef baz () -> i32\n    30\n\ndef main () {\n    let z = cte foo ();\n    println (z);\n}\n\n To verify that the compilation time execution effectively\nhappened, the option -fdump-tree-gimple can be used. This option\ncreates alternative files, that give information about the\ncompilation, and can be used to see what the frontend of the Ymir\ncompiler gave to the gcc compiler (source code close the C\nlanguage). The following block of code presents a part of the content\nof this file. One can note that the main function does not call\nthe foo function, but only the println function with the\nvalue 42.\nmain ()\n{\n  {\n    signed int z;\n\n    z = 42;\n    _Y3std2io11printlnNi327printlnFi32Zv (z);\n  }\n}\n1.2. Values as template parameter\nWe have seen in the previous chapter that templates parameters are\nused to accept types. They also can be used to accept values, in that\ncase the syntax - described in the following code block - is a bit\ndifferent. The syntax for template values is close to variable\ndeclaration, using the token :, or by using directly the literal\nthat is accepted.\ntemplate_value := literal | Identifier ':' (Identifier | type) ('=' literal)?\n\n1.2.1. Template literal\nA literal that can be known at compilation time can be used to make a\ntemplate specialization. The types that can be knwon at compilation\ntime are the following :\n\nstring ([c8] or [c32])\nchar (c8 or c32)\ninteger (signed or unsigned)\nfloat\n\nContribution: tuple, and struct are not compilation time knowable,\nbut this seems possible if they only contains cte values, same for\nslice that are not strings.\nIn the following example, there are three different definition of the\nfunction foo. The first one at line 3 can be called using\na the cte value 3, the second one at line 8 using the\nvalue 2, and so on. The main function calls the function\nfoo using the value 5 - 2, so the first definition at line\n3 is used.\nimport std::io;\n\ndef foo {3} () {\n    println (\"3\");\n    foo!2 ();\n}\n\ndef foo {2} () {\n    println (\"2\");\n    foo!1 ();\n}\n\ndef foo {1} () {\n    println (\"1\");\n    foo!0 ();\n}\n\ndef foo {0} () {\n    println (\"Go !\");\n}\n\ndef main () {\n    foo!{5 - 2} ();\n}\n\n\nResults: \n3\n2\n1\nGo !\n\nLiteral string can also be used as template parameter. We will see in\na forthcoming chapter that those are used for operator overloading\n(cf. Operator\noverloading). A\nsimple example is presented in the following source code, where the\nfoo function accepts the literal Hi I'm foo !, and is called\nby the main function using different ways.\nimport std::io;\n\ndef foo {\"Hi I'm foo !\"} () {\n    println (\"Yes that's true !\");\n}\n\ndef bar () -> [c32] {\n    \"I'm foo !\"\n}\n\ndef main () {\n    foo!\"Hi I'm foo !\" ();\n    foo!{\"Hi \" ~ bar ()} (); \n}\n\n\nResults: \nYes that's true !\nYes that's true !\n1.2.2. Template variable\nBecause it would be utterly exhausting to write every definitions of\nthe template function with every possible literals (and even\nimpossible when dealing with infinite types such as slice), we\nintroduced the possibilty of writing template variables. Unlike real\nvariables those are evaluated at compilation time, and can be defined\nonly inside template parameters. The definition syntax of template\nvariable is close to the definition of a standard parameter, with the\ndifference that the type can be a template type (containing root\nidentifiers, foundable inside the template parameters). The following\nexample presents the definition of a function that make a countdown to\n0 (the generalization of the function foo presented in the\nfirst example of the previous section). For the recursivity to stop,\nthe definition of a final case is mandatory, here it is achieved by\nthe function foo at line 8.\nimport std::io;\n\ndef foo {n : i32} () {\n    println (n);\n    foo!{n - 1} ();\n}\n\ndef foo {0} () {\n    println (\"Go !\");\n}\n\ndef main () {\n    foo!12 ();\n}\n\n\nResults:\n12\n11\n10\n9\n8\n7\n6\n5\n4\n3\n2\n1\nGo !\n\nLimitation: to avoid infinite loops, the compiler uses a very\nsimple verification. It is impossible to make more that 300\nrecursive call. For that reason, make the following call foo!300\n() is impossible and generate a compilation error :\nError : undefined template operator for foo and {300}\n --> main.yr:(13,5)\n13  ┃     foo!300 ();\n    ╋        ^\n    ┃ Error : undefined template operator for foo and {300}\n    ┃  --> main.yr:(13,5)\n    ┃ 13  ┃     foo!300 ();\n    ┃     ╋        ^\n    ┃     ┃ Note : in template specialization\n    ┃     ┃  --> main.yr:(13,5)\n    ┃     ┃ 13  ┃     foo!300 ();\n    ┃     ┃     ╋        ^\n    ┃     ┃ Note : foo --> main.yr:(3,5) -> foo\n    ┃     ┃ Error : undefined template operator for foo and {299}\n    ┃     ┃  --> main.yr:(5,5)\n    ┃     ┃  5  ┃     foo!{n - 1} ();\n    ┃     ┃     ╋        ^\n    ┃     ┃     ┃ Error : undefined template operator for foo and {299}\n    ┃     ┃     ┃  --> main.yr:(5,5)\n    ┃     ┃     ┃  5  ┃     foo!{n - 1} ();\n    ┃     ┃     ┃     ╋        ^\n    ┃     ┃     ┃     ┃      : ...\n    ┃     ┃     ┃     ┃ Note : there are other errors, use option -v to show them\n    ┃     ┃     ┃     ┃ Error : undefined template operator for foo and {2}\n    ┃     ┃     ┃     ┃  --> main.yr:(5,5)\n    ┃     ┃     ┃     ┃  5  ┃     foo!{n - 1} ();\n    ┃     ┃     ┃     ┃     ╋        ^\n    ┃     ┃     ┃     ┃     ┃ Note : in template specialization\n    ┃     ┃     ┃     ┃     ┃  --> main.yr:(5,5)\n    ┃     ┃     ┃     ┃     ┃  5  ┃     foo!{n - 1} ();\n    ┃     ┃     ┃     ┃     ┃     ╋        ^\n    ┃     ┃     ┃     ┃     ┃ Note : foo --> main.yr:(3,5) -> foo\n    ┃     ┃     ┃     ┃     ┃ Error : undefined template operator for foo and {1}\n    ┃     ┃     ┃     ┃     ┃  --> main.yr:(5,5)\n    ┃     ┃     ┃     ┃     ┃  5  ┃     foo!{n - 1} ();\n    ┃     ┃     ┃     ┃     ┃     ╋        ^\n    ┃     ┃     ┃     ┃     ┃     ┃ Error : undefined template operator for foo and {1}\n    ┃     ┃     ┃     ┃     ┃     ┃  --> main.yr:(5,5)\n    ┃     ┃     ┃     ┃     ┃     ┃  5  ┃     foo!{n - 1} ();\n    ┃     ┃     ┃     ┃     ┃     ┃     ╋        ^\n    ┃     ┃     ┃     ┃     ┃     ┃     ┃ Note : in template specialization\n    ┃     ┃     ┃     ┃     ┃     ┃     ┃  --> main.yr:(5,5)\n    ┃     ┃     ┃     ┃     ┃     ┃     ┃  5  ┃     foo!{n - 1} ();\n    ┃     ┃     ┃     ┃     ┃     ┃     ┃     ╋        ^\n    ┃     ┃     ┃     ┃     ┃     ┃     ┃ Note : foo --> main.yr:(3,5) -> foo\n    ┃     ┃     ┃     ┃     ┃     ┃     ┃ Error : limit of template recursion reached 300\n    ┃     ┃     ┃     ┃     ┃     ┃     ┃  --> main.yr:(3,5)\n    ┃     ┃     ┃     ┃     ┃     ┃     ┃  3  ┃ def foo {n : i32} () {\n    ┃     ┃     ┃     ┃     ┃     ┃     ┃     ╋     ^^^\n    ┃     ┃     ┃     ┃     ┃     ┃     ┗━━━━━┻━ \n    ┃     ┃     ┃     ┃     ┃     ┗━━━━━┻━ \n    ┃     ┃     ┃     ┃     ┗━━━━━┻━ \n    ┃     ┃     ┃     ┗━━━━━┻━ \n    ┃     ┃     ┗━━━━━┻━ \n    ┃     ┗━━━━━┻━ \n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n Contribution: add an option to the compiler to change this\nvalue of 300.\n1.2.3. Template type for template variable\nThe type of a cte variable can be a template. In that case the used\ntemplate identifiers must be roots of the template parameters (exactly\nthe same behavior as the of filter). In the following example, the\nfunction foo takes a value as template parameter, the type of\nthis value can be anything as long as it can be known at compile time.\nimport std::io;\n\ndef foo {N : T, T} () {\n    println (T::typeid, \"(\", N, \")\");\n}\n\ndef main () {\n    foo!42 ();\n    foo!\"Hi !\" ();\n}\n\n\nResults: \ni32(42)\n[c32](Hi !)\n Compilation time values, can also be used to get the size of a\nstatic array at compilation time, and make a template function that\naccepts arrays of any size. This evidently works only on static\narrays, and not on slice, because the size of the array has to be\nknwon at compilation time. However, this would not be necessary when\nusing slice, because function accepting slice as parameter already\naccepts slices of any size.\nimport std::io\n\ndef foo {ARRAY of [T; N], T, N : usize} (a : ARRAY) {\n    println (\"Got an array of \", T::typeid, \" of size : \", N);\n    println (a);\n}\n\ndef main () {\n    let array = [0; 10u64];\n    foo (array);\n}\n\n\nResults: \nGot an array of i32 of size : 10\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n1.3. Function pointers\nLambda functions and function pointers can be compile time knwon\nvalues. This is not the case for closure, and method delegates. Unlike\nfunction pointers, template function are statically written in the\ngenerated executable, thus more efficient (even if we are talking of\nmarginal gain). To accept a function pointer, a template variable must\nbe defined in the template parameters. In the following example, the\nfunction foo accepts a function pointer, that takes two\nparameters, and return a value of the same type of the\nparameters. This type seems to be unknown and is not inferable from\nthe lambda function that is passed to the function at line 13,\nbut is infered from the execution time parameters passed to the\nfunction. At line 14, one can note that a standard function can\nbe used as a template variable.\nimport std::io;\n\n\ndef foo {F : fn (X, X)-> X, X} (a : X, b : X) {\n    println (\"Foo : \", F (a, b));\n}\n\ndef bar (a : i32, b : i32) -> i32 {\n    a * b\n}\n\ndef main () {\n    foo!{|x, y| => x + y} (11, 31);\n    foo!bar (6, 7);\n}\n\n\nResults\nFoo : 42\nFoo : 42\n In the following example, the function pointer this time return a\ndifferent type from the type of the parameters it takes. This function\nfoo applies this function pointer to all element of the slice it\ntakes as parameters.\nimport std::io;\n\ndef foo {F : fn (X)-> Y, X, Y} (a : [X]) {\n    for i in a {\n        println (\"Foo : \", F (i));\n    }\n}\n\ndef main () {\n    foo!{|x| => cast!i64 (x) + 12i64} ([1, 2, 3]);\n}\n\n\nResults:\nFoo : 13\nFoo : 14\nFoo : 15\n"},"templates/values.html":{"url":"templates/values.html","title":"Compilation time execution","keywords":"","body":"1. Template values1.1. Compile time condition1.2. Is expression1.3. Condition on template definition1.4. Common tests1. Template values\nIn the previous chapter, we saw that some values can be known at the\ntime of compilation. These values can be used for the compiler to\ndecide which part of the code should be compiled and which part should\nnot, using branching operations.\n1.1. Compile time condition\nThe keyword cte is used to inform the compiler that a value can\nbe known at compile time, and must be evaluated during the\ncompilation. It is not the default behavior of the compiler, as the\ncompilation would be extremely long, if every values had to be\nchecked. This keyword can be used on if expression to execute the\ncondition at compile time, and evaluate compile only a part of the\nsource code. In the following example, an if expression is used to\ncheck if the template value that is passed to the foo function\nwas lower than 10. Because it is the case only the scope of the\nif expression is compiled (not the scope of the else), that is why\neven if the scope of the else part has no sense in term of types,\nthe compiler does not return any error.\nimport std::io;\n\ndef foo {X : i32} () {\n    cte if X \n\nResults: \nX is  As normal if expression, cte if expression can be chained,\nhowever the keyword cte must be repeated before each if expression\notherwise the compiler consideres that they are execution time if\nexpression.\nimport std::io;\n\ndef foo {X : i32} () {\n    cte if X  25 : \", X);\n    }\n}\n\ndef main () {\n    foo!{2} ();\n    foo!{14} ();\n    foo!{38} ();\n}\n\n\nX is  25 : 38\n1.2. Is expression\nThe is expression (that must not be confused with the is operator\napplicable only on pointers) is used to check template specialization,\nand gives a cte bool value. The syntax of the is expression is\nsimilar to the syntax of a template call, following by template\nparameters, as presented in the following code block. The template\nparameters are used to create a specialization from the template\narguments.\nis_expression := 'is' '!' (single_arg | multiple_args) '{' (template_parameter (',' template_parameter)*)? '}'\n\n\nIn the following example, the foo function accepts any kind of\ntype as template parameter, and a cte if expression is used to apply\na different behavior depending on the type of X. The first test\nat line 1 works if the X is a i32, the second at\nline 2 works if X is a slice of anything.\nimport std::io;\n\ndef foo {X} () {\n    cte if is!{X} {T of i32} {\n        println (\"Is a i32\");\n    } else cte if is!{X} {T of [U], U} {\n        println (\"Is a slice\");\n    } else cte if is!{X} {T of [U; N], U, N : usize} {\n        println (\"Is a static array\");\n    } else {\n        println (\"I don't know ...\");\n    }\n}\n\ndef main () {\n    foo!i32 ();\n    foo![i32] ();\n    foo![i32 ; 4us] ();\n    foo!f32 ();\n}\n\n\nResults: \nIs a i32\nIs a slice\nIs a static array\nI don't know ...\n1.3. Condition on template definition\nEvery template symbol can have a complex condition that is executed at\ncompilation time. This condition is executed when all the template\nparameter have been infered, and can be used to add further test on\nthe template parameters that cannot be done by the syntax provided by\nYmir (for example accept either a i32 or a i64). The\ntest is defined using the if keyword followed by an expression,\nthe value of the expression must be known at compilation time. In this\nexpression the template parameters can be used. The if keyword\nalways followes the keyword that is used to declare the symbol\n(def for function, class for classes, etc.), unlike the\ntemplate parameters that always follow the identifier of the symbol.\nclass if (is!T {U of i32}) A {T} {\n    let value : T;\n\n    pub self if (is!U {J of T}) {U} (v : U) with value = v {}\n}\n\nstruct if (is!T {U of f64})\n| x : T\n-> S {T};\n\nenum if (is!T {U of f64})\n| X = cast!T (12)\n-> F {T};\n\nmod if (is!T {U of f64}) Inner {T} {\n    pub def foo (a : T) {\n        println (a);\n    }\n}\n\ntrait if (is!T {U of f64}) Z {T} {\n    pub def foo (self, a : T)-> T;\n}\n\naka if (is!T {U of f64}) X {T} = cast!T (12);\n\n\nIn the following example, the function foo have a simple\ntemplate specialization, but only accepts i32 or i64\ntypes, thanks to the condition test. Because u64 is not\naccepted, the compiler throws an error due to line 10.\nimport std::io;\n\ndef if (is!{X}{T of i32} || is!{X}{T of i64}) foo {X} (x : X) {\n    println (x);\n}\n\ndef main () {\n    foo (12);\n    foo (12i64);\n    foo (34u64);\n}\n\n\nErrors:\nError : the call operator is not defined for foo {X}(x : X)-> void and {u64}\n --> main.yr:(10,6)\n10  ┃     foo (34u64);\n    ╋         ^     ^\n    ┃ Note : candidate foo --> main.yr:(3,47) : foo {X}(x : X)-> void\n    ┃     ┃ Error : the test of the template failed with {X -> u64} specialization\n    ┃     ┃  --> main.yr:(3,26)\n    ┃     ┃  3  ┃ def if (is!{X}{T of i32} || is!{X}{T of i64}) foo {X} (x : X) {\n    ┃     ┃     ╋                          ^^\n    ┃     ┗━━━━━┻━ \n    ┗━━━━━┻━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n\nTemplate symbol with condition have a the same score than template\nwith the same template specialization but without a condition. For\nthat reason, in the following example, the call of foo at line\n12 create an error by the compiler. To avoid this error, the\nreverse test must be added to the function foo defined at line\n7.\nimport std::io;\n\ndef if (is!{X}{T of i32} || is!{X}{T of i64}) foo {X} (x : X) {\n    println (\"First : \", x);\n}\n\ndef foo {X} (x : X) {\n    println (\"Second : \", x);\n}\n\ndef main () {\n    foo (12);\n}\n\n\nErrors:\nError : {foo {X}(x : X)-> void, foo {X}(x : X)-> void} x 2 called with {i32} work with both\n --> main.yr:(12,6)\n12  ┃     foo (12);\n    ╋         ^\n    ┃ Note : candidate foo --> main.yr:(3,47) : main::foo(i32)::foo (x : i32)-> void\n    ┃ Note : candidate foo --> main.yr:(7,5) : main::foo(i32)::foo (x : i32)-> void\n    ┗━━━━━━ \n\n\nymir1: fatal error: \ncompilation terminated.\n\n1.4. Common tests\nThe module std::traits of the standard library defines some\ncte function that can be used to add more complex test of the type\nin template condition. \n\n\n\nFunction\nResult\n\n\n\n\nisFloating\ntrue for f32 and f64\n\n\nisIntegral\ntrue for any integral types (signed and unsigned)\n\n\nisSigned\ntrue for any integral types that are signed\n\n\nisUnsigned\ntrue for any integral types that are unsigned\n\n\nisChar\ntrue for c8 and c32\n\n\nisTuple\ntrue for any tuple type\n\n\n\nimport std::io, std::traits;\n\ndef if (isIntegral!{T} ()) foo {T} () {\n    println (\"Accept any integral type\");\n}\n\ndef if (isFloating!{T} ()) foo {T} () {\n    println (\"Accept any floating type\");\n}\n\ndef main () {\n    foo!i32 ();\n    foo!u64 ();\n    foo!f32 ();\n}\n\n\nResults:\nAccept any integral type\nAccept any integral type\nAccept any floating type\n"},"objects/common_traits.html":{"url":"objects/common_traits.html","title":"Common traits","keywords":"","body":"1. Common traits1. Common traits\nYmir defines some common traits, that are either in the core files\n(automatically imported modules), or in the std. This chapters\npresents some of the traits that are important.\n"},"traits/streamable.html":{"url":"traits/streamable.html","title":"Streamable","keywords":"","body":"1. Streamable1.1. Print objects to stdout1.2. Write objects to StringStream1. Streamable\nStreamable objects are objects that can be put inside a\nStringStream. These objects are also printable, using the\nstandard print or println functions. Streamable trait\nhas a default behavior, that consist in writting the typeid of the\nclass, followed by every fields (private and protected included) of\nthe class inside the stream. \n1.1. Print objects to stdout\nIn the following example, two classes implements the traits\nStreamable, and are printed to stdout. The first class Foo\ndoes not redefine the behavior of the trait, on the other hand\nBar does.\nimport std::io; // the trait is accessible from std::io, or std::stream\n\nclass Foo {\n\n    let _i = 12;\n    let _j = \"Foo\";\n\n    pub self () {}\n\n    impl Streamable;\n}\n\nclass Bar {\n    pub self () {}\n\n    impl Streamable {\n        pub over toStream (self, dmut stream : &StringStream)-> void {\n            stream:.write (\"{I am a Bar}\"s8);\n        }\n    }    \n}\n\ndef main () {\n    let a = Foo::new ();\n    let b = Bar::new ();\n\n    println (a);\n    println (b);\n}\n\n\nResults: \nmain::Foo(12, Foo)\n{I am a Bar}\n1.2. Write objects to StringStream\nThe Streamable trait is originaly used to transform an object\ninto a [c8], inside a &StringStream. StringStream is\na class provided by the module std::stream that transform types\ninto a growing string, in a efficient manner, to avoid unefficient\nstring concatenation.  In the following example, instead of using the\nprint function, provided by std::io, the objects are added\nto a StringStream, that is then printed to stdout.\nimport std::io; // io publically import std::stream\n\n\nclass Foo {\n\n    let _i = 12;\n    let _j = \"Foo\";\n\n    pub self () {}\n\n    impl Streamable;\n}\n\nclass Bar {\n    pub self () {}\n\n    impl Streamable {\n        pub over toStream (self, dmut stream : &StringStream)-> void {\n            stream:.write (\"{I am a Bar}\"s8);\n        }\n    }    \n}\n\ndef main () {\n    let a = Foo::new ();\n    let b = Bar::new ();\n\n    let dmut stream = StringStream::new ();\n\n    a.toStream (alias stream); \n    stream:.write (\"\\n\"s8)     // write returns the stream\n          :.writeln (b) // the method write of a stringstream call the method toStream\n          :.write (\"Hello : \", 42); // everything can be added inside a stringstream\n\n    println (stream []); // the operator [], gets the slice [c8] contained inside the stream (without copying it).\n}\n\n\nResults: \nmain::Foo(12, Foo)\n{I am a Bar}\nHello : 42\n"},"traits/copiable.html":{"url":"traits/copiable.html","title":"Copiable","keywords":"","body":"Copiable\nCopiable trait is a core trait, (defined in a core file, thus does\nnot need to be imported). This trait is used to override the\ndcopy operator on a class. Contribution: for the moment\nthere is no default behavior for the Copiable trait, even if it is\ncompletely possible. Copiable trait defines a method deepCopy\nthat takes a immutable object instance, and return a deeply mutable\none.\nimport std::io;\n\nclass Foo {\n    let _type : [c8];\n\n    pub self () with _type = \"I am an original\"s8 {}\n\n    prot self (type : [c8]) with _type = type {}\n\n\n    impl Copiable {\n        pub over deepCopy (self)-> dmut &(Foo) {\n            Foo::new (\"I am a copy\"s8)\n        }\n    }\n\n\n    impl Streamable; // convinient for debugging\n}\n\n\ndef main () {\n    let a = Foo::new ();\n    let dmut b = dcopy a; // same as alias (a.deepCopy ())\n\n    println (a);\n    println (b);\n}\n\n\nResults: \nmain::Foo(I am an original)\nmain::Foo(I am a copy)\n"},"traits/disposable.html":{"url":"traits/disposable.html","title":"With guard and Disposable","keywords":"","body":"1. Disposable1. Disposable\nDisposable trait is a trait used to perform an operation at the end\nof the life of an object instance. Unlike class destructor, the\ndispose operation must be called by hand. There is no default behavior\nfor the Disposable trait. This trait can be coupled with the\nwith scope guard. Briefly in a word, this scope guards define a\nvariable (or a list of variable), like the let statement, but\nensure that it is disposed when the scope is exited, no matter what\nhappend in the scope. The Disposable trait is commonly used for\nunmanaged memory (File, TcpStream, Mutex, ...).\nimport std::io;\n\nclass Foo {\n    pub self () {}\n\n    impl Disposable {\n\n        pub over dispose (mut self) {\n            println (\"I am disposed\");\n        }            \n    }    \n\n    impl Streamable;\n}\n\ndef main () {\n    with dmut a = Foo::new () {\n        println (a);\n    }\n    println (\"After a\");\n}\n\n\nResults : \nmain::Foo()\nI am disposed\nAfter a\n\nA good practice is to call the dispose method inside the\ndestructor of the class. This way, even if the class was not disposed\nby hand, it is disposed when the garbage collector destroy the\ninstance. (Warning to avoid multiple disposing the method\ndispose shoud verify that the object is not already disposed,\ne.g. the method can be called twice by hand, or first by hand, and\nthen by the destructor).\n"},"traits/hashable.html":{"url":"traits/hashable.html","title":"Hashable","keywords":"","body":"1. Hashable1. Hashable\nHashable trait (importable from std::hash) is used to\ntransform an object instance into a u64. The interest is to\neasily compare objects, for example in\nstd::collection::map::HashMap, or\nstd::collection::set::HashSet. Hashable classes can be used in\nthese collections as key. A default behavior is defined in this trait,\nbut the method hash can be redefined, it takes a immutable\nobject instance as parameter, and return a u64 value.\nimport std::io;\nimport std::collection::map;\nimport std::hash;\n\nclass Foo {\n    let _v : [c8];\n\n    pub self (v : [c8]) with _v = v {}\n\n    impl Hashable, Streamable;\n}\n\n\ndef main () {\n    let dmut coll = HashMap!{&Foo, i32}::new ();\n    coll:.insert (Foo::new (\"X\"s8), 12);\n    coll:.insert (Foo::new (\"Y\"s8), 34);\n\n    println (coll);    \n    println (Foo::new (\"X\"s8) in coll);\n}\n\n\nResults: \n{main::Foo(X)=>12, main::Foo(Y)=>34}\ntrue\n"},"traits/serialize.html":{"url":"traits/serialize.html","title":"Packable and Serializable","keywords":"","body":"1. Packable1.1. Serializable1. Packable\nPackable trait (importable from std::net::packet) defines two\nmethods pack and unpack. There is a default behavior for\nthose two methods, and it is recommended to not override them, unless\nyou know exactly what you are doing. The pack method takes a\nimmutable object instance as parameter and creates a packet of\n[u8], encoding the object. This packet can then be sent throw\nnetwork, and unpack from another processes.\nimport std::io;\nimport std::net::packet;\n\nclass Foo {\n    let _v : [c8];\n\n    pub self (v : [c8]) with _v = v {}\n\n    impl Packable;\n}\n\n\ndef main () {\n    let a = Foo::new (\"Test\"s8);\n\n    let packet = a.pack ();\n    println (packet);\n}\n\n\nResults : \n[9, 0, 0, 0, 0, 0, 0, 0, 34, 6d, 61, 69, 6e, 33, 46, 6f, 6f, 4, 0, 0, 0, 0, 0, 0, 0, 54, 65, 73, 74]\n\nThe packet can then be unpacked with the function unpack. This\nfunction returns an Object, that can be transformed in the\nappropriate type using pattern matching.\n    {\n        match unpack (packet) {\n            x : &Foo  => println (x);\n            _ => {\n                println (\"Unkown packet\");\n            }\n        }\n    } catch {\n        UnpackError () => {\n            println (\"The packet contains unknwon information\");\n        }\n    }\n\n\nResults: \nmain::Foo(Test)\n\nWarning to work properly, the unpacker must have access to the\ntype information of the object that is packed. Otherwise, an\nUnpackError is thrown. To make the symbol available in the unpacking\nprogram, the class must be compiled and linked in it. For example, if\na module foo contains a class Foo, and the unpacking is\nmade inside the **main module. The command line of the compilation\nmust be : \ngyc main.yr foo.yr\n\n\nIt is possible to verify that the symbol are present in the\nexecutable, by running the following command (example for the class\nFoo of the previous example).\n$ objdump -t a.out | grep Foo\n0000000000410585 g     F .text    00000000000004a0              _Y3std3net6packet8Packable27__stdnetwork__unpackContentFxP9x3foo3FooSu8Zusize\n0000000000447300  w    O .data    0000000000000030              _Y3foo3FooTI\n0000000000410a25 g     F .text    000000000000006e              _Y3std3net6packet8Packable25__stdnetwork__packContentFP83foo3FooxP32x3std10collection3vec6VecNu83VecZv\n000000000040eb82 g     F .text    0000000000000054              _Y3foo3Foo4selfFxP9x3foo3FooSc8ZxP9x3foo3Foo\n00000000004472f0  w    O .data    0000000000000010              _Y133foo3Foo_nameCSTxSc32\n0000000000447340  w    O .data    0000000000000030              _Y3foo3FooVT\n000000000040f468 g     F .text    0000000000000093              _Y3std3net6packet8Packable4packFP83foo3FooxP32x3std10collection3vec6VecNu83VecZv\n000000000040f381 g     F .text    00000000000000e7              _Y3std3net6packet8Packable4packFP83foo3FooZSu8\n00000000004472c0  w    O .data    0000000000000024              _Y183foo3Foo_nameInnerCSTxA9c32\n\n\nIn the result of this command, the symbol _Y3foo3FooTI is\npresent, this is the symbol containing the type info of the\nfoo::Foo class, _Y3foo3FooVT contains the vtable, and\n_Y3std3net6packet8Packable27__stdnetwork__unpackContentFxP9x3foo3FooSu8Zusize\nthe function called to unpack the object. These are the three\nmandatory symbols to successfully unpack a object (the other symbols\nare necessarily there if the vtable is present).\nI think this is not a strong problem, as it can be easily resolved;\nbut must be taken into account when compiling the program.\nContribution: Almost every types are packable. I think the only\ntwo types that are not are function pointer and closure. I see how\nfunction pointer packing can be done, and it is not difficult and will\nbe done in future version of the std. On the other hand, because the\ntype info of the closure is not accessible, i don't see any way of\npacking this type. In any case, closure behavior can be easily\nsimulated by using a object instance, or a structure and a function\npointer. And trying to pack a not packable type creates compile time\nerrors, so there is no bad surprise at runtime.\n1.1. Serializable\nLike Packable trait, Serializable is a trait that transform an\nobject instance into something that can be stored, or sent. However,\nunlike Packable, the result is humanely readable, and can be used to\ncreate configuration files for example (current std implements\ntoml and json serialization). Serializable objects\nimplements the method serialize. It has no default behavior\n(Contribution it is however probably possible to create a default\nbehavior based on the name of the fields). This method takes an\nimmutable object instance, and return a &Config value.\nimport std::io;\nimport std::config::conv;\nimport std::config, std::config::toml;\n\n\nstruct\n| A : &Foo\n| B : &Foo\n -> Bar;\n\nclass Foo {\n    let _v : [c32];\n    let _u : i32;\n\n    pub self (v : [c32], u : i32) with _v = v, _u = u{\n    }\n\n    impl Serializable {\n        pub over serialize (self)->  &Config {\n            let dmut d = Dict::new ();\n            d:.insert (\"v\", self._v.to!(&Config) ());\n            d:.insert (\"u\", self._u.to!(&Config) ());\n\n            d\n        }\n    }\n}\n\n\ndef main () {\n    let x = Bar (Foo::new (\"Test\", 12), Foo::new (\"Test2\", 34));    \n    println (toml::dump (x.to!(&Config) ()));\n}\n\n\nResults : \n\n[A]\nu = 12\nv = \"Test\"\n\n[B]\nu = 34\nv = \"Test2\"\n"},"templates/operators.html":{"url":"templates/operators.html","title":"Operator overloading","keywords":"","body":"1. Operator overloading1.1. Unary operator1.2. Binary operator1.3. Comparison operators1.3.1. Overloading == and !=1.3.2. Overloading , =1.4. Assignment1.5. Access operator1.6. Contain operator1. Operator overloading\nThe operator overload is done by rewriting the operations applied on\nobjects operands. No new syntax is used for operator overloading. They\nuse compilation time values, and template definition to choose the\ncorrect operator.\n1.1. Unary operator\nThe overloading of binary operators is done by defining the opUnary function.\nIt is rewritten as follows: \n\n\n\nexpression\nrewrite\n\n\n\n\n-e\ne.opUnary!(\"-\")\n\n\n*e\ne.opUnary!(\"*\")\n\n\n!e\ne.opUnary!(\"!\")\n\n\n\nimport std::io;\n\nclass A  {\n    let a : f32;\n\n    pub self (a : f32) with a = a {} \n\n    pub def opUnary (\"-\") (self) -> A {\n    A::new (-self.a)\n    }\n\n    pub def opUnary (op : [c32]) (self) -> A {\n        if (op == \"!\")\n            A::new (1.f / self.a)\n        else\n            self\n    }\n\n    impl std::io::Printable {\n        pub over print (self) {\n            print (\"A(\", self.a, \")\");\n        }\n    }\n}\n\ndef main () {\n    let a = A::new (42.0f);\n    println (!a); \n    // This is exactly the same as : \n    // println (a.opUnary!(\"!\") ());\n}\n\n1.2. Binary operator\nBinary operators are also overloadable. As for unary operators, this\noverload can only be done on objects. They are rewritten with the\nfunction opBinary and opBinaryRight. The rewritte with a call to\nthe function opBinary is tested first, and if it does not compile,\nthen the rewritte with the call to the function opBinaryRight is\nthen tried.\nThe following operators are overloadable. The use indicated in the\nleft column is only an indication and corresponds to the common use of\nthese operators, but they can of course be used for other purposes.\n\n\n\nMath\n+\n-\n*\n/\n%\n^^\n\n\n\nBitwise\n|\n&\n^\n \n >> \n\n\n\nArray\n~\n\n\n\n\n\n\n\n>` |    `~` | `&`  | -->\nimport std::io;\n\nclass A {\n    let a : i32;\n\n    pub self (a : i32) with a = a {}\n\n    pub def opBinary (\"+\") (self, a : i32) -> A {\n        A::new (self.a + a)\n    }\n\n    pub def opBinaryRight (\"+\") (self, a : i32)-> A\n        self + a\n\n    pub def opBinary (\"-\") (self, a : i32) -> A {\n        A::new (self.a - a)\n    }\n\n    pub def opBinaryRight (\"-\") (self, a : i32)-> A\n        A::new (a - self.a)\n\n\n    impl std::io::Printable {\n        pub over print (self) {\n            print (self.a);\n        }\n    }\n}\n\ndef main () {\n    let a = A::new (12);\n    println (30 - a);\n}\n\n1.3. Comparison operators\nThe comparison operators are also overloadable, but not like binary\noperators. The equality and comparison are treated via two different\nfunctions opEquals and opCmp. Because while almost all types can\nbe compared for equality, only some have meaningful order comparison. \nThe opCmp function is used for the operators , >,  and >=\nonly. And the function opEquals is used for the operator == and\n!=. When the method opEquals is not defined for the type, the\ncompiler will try to use the method opCmp instead. When both the\nfunction are defined, it is up to the user to ensure that these two\nfunctions are consistent.\nIndeed, it is impossible to verify that in a general case. You may\nwant for example to define a set object, where the operator x \nstand for x is a strict subset of y. Therefore, if neither x \nand y  are true, that does not implies that x == y.\n1.3.1. Overloading == and !=\nExpression of the form a != b, are rewritten into !(a == b),\ntherefore there is only one function to define. \nimport std::io\n\nclass Point {\n\n    let x : i32, y : i32;\n\n    pub self (x : i32, y : i32) with x = x, y = y {}\n\n    pub def opEquals (self, other : Point) -> bool {\n        self.x == other.x && self.y == other.y\n    }\n\n}\n\ndef main () throws AssertError {\n    let a = Point::new (1, 2);\n    let b = Point::new (2, 3);\n    let c = Point::new (1, 2);\n    assert (a == c);\n    assert (a != b);\n}\n\nThe operator opEquals is supposed commutative, so when the operator\nis only defined for the type on the right operand, the operation will\nsimply be rewritten reversely.\nimport std::io\n\nclass MyInt {\n\n    let i : i32;\n\n    pub self (i : i32) with i = i {}\n\n    pub def opEquals (self, i : i32) -> bool {\n        self.i == i\n    }\n\n}\n\ndef main () throws AssertError {\n    let mi = MyInt::new (8);\n    assert (8 == mi);\n}\n\n1.3.2. Overloading , =\nThose operators are overloadable by rewritting and calling the method\nopCmp. This method must return an signed integer element. The\nfollowing table presents how the operators are rewritten.\n\n\n\ncomparison\nrewrite 1\nrewrite 2\n\n\n\n\na \na.opCmp (b) \nb.opCmp (a) > 0\n\n\na > b\na.opCmp (b) > 0\nb.opCmp (a) \n\n\na \na.opCmp (b) \nb.opCmp (a) >= 0\n\n\na >= b\na.opCmp (b) >= 0\nb.opCmp (a) >= 0\n\n\n\nThe first rewrite is tried first, if it fails, the second is tested.\nIf the method opEquals is not defined the method opCmp will be\nused, and will be rewritten as a.opCmp (b) == 0.\nimport std::io\n\nclass MyInt {\n\n    let i : i32;\n\n    pub self (i : i32) with i = i {}\n\n    pub def opCmp (self, i : i32) -> i32 {\n        self.i - i\n    }\n\n}\n\ndef main () throws AssertError {\n    let mi = MyInt::new (8);\n    assert (7 \n1.4. Assignment\nThe assignment operator is not overloadable, it will always perform\nthe same operation. However, the shortcut operators +=, -=, *=\netc, are usable on object when oveloading the binary operator. In that\ncase, the method opBinary must return a mutable object.\nimport std::io\n\nclass MyInt {\n\n    pub let i : i32;\n\n    pub self (i : i32) with i = i {}\n\n    pub def opBinary (\"+\") (self, a : i32)-> mut MyInt {\n        //                                   ^^^\n        //                     Try to remove the mut there\n        MyInt::new (self.i + a)\n    }\n\n}\n\ndef main () {\n    let mut mi = MyInt::new (8);\n    mi += 9;\n    println (mi.i);\n}\n\n1.5. Access operator\nThe operator of index [] is overloadable by the method\nopIndex. This method will simply be called with the parameters\npassed inside of the brackets. For example, the following operation a\n[b, c, d] will be rewrite into a.opIndex (b, c, d).\nimport std::io\n\nclass A {\n    let i : [i32];\n\n    pub self (a : [i32]) with i = a {}\n\n    pub def opIndex (self, x : i32) -> i32 \n        throws OutOfArray\n    {\n        self.i [x]\n    }\n\n}\n\ndef main () \n    throws OutOfArray, AssertError\n{\n    let i = A::new ([1, 2, 3]);\n    assert (i [2] == 3)\n}\n\n1.6. Contain operator\nThe contain operator is a binary operator used to check if an element\nis inside another one. This operator is defined using the keyword\nin. Unlike other operator, the rewritte for the overloading is made\nonly once on the right operand, and call the method opContains. The\nexpression a !in b will be rewritten into !(a in b).\nclass A {\n\n    let a : [i32];\n\n    pub self (a : [i32]) with a = a {}\n\n    pub def opContains (self, i : i32)-> bool {\n        for j in self.a {\n            if (i == j) return true;\n        }\n        false\n    }    \n}\n\ndef main () \n    throws AssertError\n{\n    let i = A::new ([1, 2, 3]);\n    assert (2 in i);\n    assert (9 !in i);\n}\n\n"}}}